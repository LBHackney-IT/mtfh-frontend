(self.webpackChunkmtfh_frontend=self.webpackChunkmtfh_frontend||[]).push([[179],{"./.storybook/generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./packages/react/src/components sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?%21(?:^|\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.tsx)$")],module,!1)},"./.storybook/preview.tsx-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{decorators:()=>decorators});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var client_api=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/client_api.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),injectStylesIntoStyleTag=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js")),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),dist_reset=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./packages/react/dist/reset.css"),options={insert:"head",singleton:!1};injectStylesIntoStyleTag_default()(dist_reset.Z,options);dist_reset.Z.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),withContainer=function withContainer(StoryFn,context){return(0,jsx_runtime.jsx)("div",{className:"js-enabled",children:(0,jsx_runtime.jsx)(StoryFn,{})})};withContainer.displayName="withContainer";var decorators=[withContainer];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,client_api.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,client_api.HZ)(loader,!1)}));case"parameters":return(0,client_api.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,client_api.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,client_api._C)(enhancer)}));case"render":return(0,client_api.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,client_api.h1)(v,!1);default:return console.log(key+" was not supported :( !")}}))},"./.storybook/storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"./packages/react/src/components/accordion/accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AccordionWithVisuallyHiddenControls:()=>AccordionWithVisuallyHiddenControls,Base:()=>Base,default:()=>accordion_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),heading=__webpack_require__("./packages/react/src/components/heading/heading.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/accordion/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const accordion_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","className","override","visuallyHideControls"];function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var AccordionItem=(0,react.forwardRef)((function AccordionItem(_ref,ref){var _ref$as=_ref.as,AccordionItemComp=void 0===_ref$as?"div":_ref$as,children=_ref.children,className=_ref.className,id=_ref.id,title=_ref.title;return(0,jsx_runtime.jsxs)(AccordionItemComp,{ref,className:classnames_default()(accordion_styles_module.govukAccordionSection,className),children:[(0,jsx_runtime.jsx)("div",{className:accordion_styles_module.govukAccordionSectionHeader,children:(0,jsx_runtime.jsx)(heading.X,{as:"h3",variant:"h5",className:accordion_styles_module.govukAccordionSectionHeading,children:(0,jsx_runtime.jsx)("span",{className:accordion_styles_module.govukAccordionSectionButton,id:"accordion-heading-"+id,children:title})})}),(0,jsx_runtime.jsx)("div",{id:"accordion-content-"+id,className:accordion_styles_module.govukAccordionSectionContent,"aria-labelledby":"accordion-heading-"+id,children})]})})),Accordion=(0,react.forwardRef)((function Accordion(_ref2,ref){var _cn,_ref2$as=_ref2.as,AccordionComp=void 0===_ref2$as?"div":_ref2$as,className=_ref2.className,override=_ref2.override,_ref2$visuallyHideCon=_ref2.visuallyHideControls,visuallyHideControls=void 0!==_ref2$visuallyHideCon&&_ref2$visuallyHideCon,props=_objectWithoutProperties(_ref2,_excluded),localRef=(0,react.useRef)(null);return(0,react.useEffect)((function(){var init=function(){var _ref3=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(ref){var _yield$import,LBHAccordion,acc;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,__webpack_require__.e(398).then(__webpack_require__.bind(__webpack_require__,"./packages/react/node_modules/lbh-frontend/lbh/components/lbh-accordion/accordion.js"));case 2:_yield$import=_context.sent,LBHAccordion=_yield$import.default,(acc=new LBHAccordion(ref)).$sections=ref.querySelectorAll("."+accordion_styles_module.govukAccordionSection),acc.controlsClass=accordion_styles_module.govukAccordionControls,acc.openAllClass=accordion_styles_module.govukAccordionOpenAll,acc.iconClass=accordion_styles_module.govukAccordionIcon,acc.sectionHeaderClass=accordion_styles_module.govukAccordionSectionHeader,acc.sectionHeaderFocusedClass=accordion_styles_module.govukAccordionSectionHeaderFocused,acc.sectionHeadingClass=accordion_styles_module.govukAccordionSectionHeading,acc.sectionSummaryClass=accordion_styles_module.govukAccordionSectionSummary,acc.sectionButtonClass=accordion_styles_module.govukAccordionSectionButton,acc.sectionExpandedClass=accordion_styles_module.govukAccordionSectionExpanded,acc.init();case 16:case"end":return _context.stop()}}),_callee)})));return function init(_x){return _ref3.apply(this,arguments)}}();localRef.current&&void 0!==window&&void 0!==document&&init(localRef.current)}),[]),(0,jsx_runtime.jsx)(AccordionComp,Object.assign({className:classnames_default()(accordion_styles_module.govukAccordion,accordion_styles_module.lbhAccordion,(_cn={},_cn[accordion_styles_module.visuallyHidden]=visuallyHideControls,_cn),(0,width_overrides.Z)(override),className),"data-attribute":"value",ref:(0,react_merge_refs_esm.Z)([localRef,ref])},props))}));try{AccordionItem.displayName="AccordionItem",AccordionItem.__docgenInfo={description:"",displayName:"AccordionItem",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/accordion/accordion.tsx#AccordionItem"]={docgenInfo:AccordionItem.__docgenInfo,name:"AccordionItem",path:"packages/react/src/components/accordion/accordion.tsx#AccordionItem"})}catch(__react_docgen_typescript_loader_error){}try{Accordion.displayName="Accordion",Accordion.__docgenInfo={description:"",displayName:"Accordion",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},visuallyHideControls:{defaultValue:{value:"false"},description:"",name:"visuallyHideControls",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/accordion/accordion.tsx#Accordion"]={docgenInfo:Accordion.__docgenInfo,name:"Accordion",path:"packages/react/src/components/accordion/accordion.tsx#Accordion"})}catch(__react_docgen_typescript_loader_error){}const accordion_stories={title:"Accordion",component:Accordion};var Base=function Base(){return(0,jsx_runtime.jsxs)(Accordion,{id:"accordion-1",children:[(0,jsx_runtime.jsx)(AccordionItem,{id:"item-1",title:"Item 1",children:"Description 1"}),(0,jsx_runtime.jsx)(AccordionItem,{id:"item-2",title:"Item 2",children:"Description 2"}),(0,jsx_runtime.jsx)(AccordionItem,{id:"item-3",title:"Item 3",children:"Description 3"})]})};Base.displayName="Base";var AccordionWithVisuallyHiddenControls=function AccordionWithVisuallyHiddenControls(){return(0,jsx_runtime.jsxs)(Accordion,{id:"accordion-2",visuallyHideControls:!0,children:[(0,jsx_runtime.jsx)(AccordionItem,{id:"item-4",title:"Item 1",children:"Description 1"}),(0,jsx_runtime.jsx)(AccordionItem,{id:"item-5",title:"Item 2",children:"Description 2"}),(0,jsx_runtime.jsx)(AccordionItem,{id:"item-6",title:"Item 3",children:"Description 3"})]})};AccordionWithVisuallyHiddenControls.displayName="AccordionWithVisuallyHiddenControls",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Accordion id="accordion-1">\n      <AccordionItem id="item-1" title="Item 1">\n        Description 1\n      </AccordionItem>\n      <AccordionItem id="item-2" title="Item 2">\n        Description 2\n      </AccordionItem>\n      <AccordionItem id="item-3" title="Item 3">\n        Description 3\n      </AccordionItem>\n    </Accordion>\n  );\n}'}},Base.parameters),AccordionWithVisuallyHiddenControls.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Accordion id="accordion-2" visuallyHideControls>\n      <AccordionItem id="item-4" title="Item 1">\n        Description 1\n      </AccordionItem>\n      <AccordionItem id="item-5" title="Item 2">\n        Description 2\n      </AccordionItem>\n      <AccordionItem id="item-6" title="Item 3">\n        Description 3\n      </AccordionItem>\n    </Accordion>\n  );\n}'}},AccordionWithVisuallyHiddenControls.parameters)},"./packages/react/src/components/button/button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,Secondary:()=>Secondary,ButtonLink:()=>ButtonLink,LoadingIndicator:()=>LoadingIndicator,LoadingIndicatorWithText:()=>LoadingIndicatorWithText});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/button/button.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Button",component:_button__WEBPACK_IMPORTED_MODULE_3__.z};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.z,{children:"Button"})};Base.displayName="Base";var Secondary=function Secondary(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.z,{variant:"secondary",children:"Secondary Button"})};Secondary.displayName="Secondary";var ButtonLink=function ButtonLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.z,{as:"a",href:"/",children:"Button Link"})};ButtonLink.displayName="ButtonLink";var LoadingIndicator=function LoadingIndicator(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.z,{isLoading:!0,children:"Button"})};LoadingIndicator.displayName="LoadingIndicator";var LoadingIndicatorWithText=function LoadingIndicatorWithText(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.z,{loadingText:"I'm Loading",isLoading:!0,children:"Button"})};LoadingIndicatorWithText.displayName="LoadingIndicatorWithText",Base.parameters=Object.assign({storySource:{source:"() => {\n  return <Button>Button</Button>;\n}"}},Base.parameters),Secondary.parameters=Object.assign({storySource:{source:'() => {\n  return <Button variant="secondary">Secondary Button</Button>;\n}'}},Secondary.parameters),ButtonLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Button as="a" href="/">\n      Button Link\n    </Button>\n  );\n}'}},ButtonLink.parameters),LoadingIndicator.parameters=Object.assign({storySource:{source:"() => {\n  return <Button isLoading>Button</Button>;\n}"}},LoadingIndicator.parameters),LoadingIndicatorWithText.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Button loadingText="I\'m Loading" isLoading>\n      Button\n    </Button>\n  );\n}'}},LoadingIndicatorWithText.parameters)},"./packages/react/src/components/center/center.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,Vertical:()=>Vertical,Horizontal:()=>Horizontal});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _center__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/center/center.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Center",component:_center__WEBPACK_IMPORTED_MODULE_3__.M};var Dot=function Dot(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{width:"50px",height:"50px",background:"green",borderRadius:"50%"}})};Dot.displayName="Dot";var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_center__WEBPACK_IMPORTED_MODULE_3__.M,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Dot,{})})};Base.displayName="Base";var Vertical=function Vertical(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_center__WEBPACK_IMPORTED_MODULE_3__.M,{horizontally:!1,style:{height:"200px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Dot,{})})};Vertical.displayName="Vertical";var Horizontal=function Horizontal(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_center__WEBPACK_IMPORTED_MODULE_3__.M,{vertically:!1,style:{height:"200px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Dot,{})})};Horizontal.displayName="Horizontal",Base.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <Center>\n      <Dot />\n    </Center>\n  );\n}"}},Base.parameters),Vertical.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Center horizontally={false} style={{ height: "200px" }}>\n      <Dot />\n    </Center>\n  );\n}'}},Vertical.parameters),Horizontal.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Center vertically={false} style={{ height: "200px" }}>\n      <Dot />\n    </Center>\n  );\n}'}},Horizontal.parameters)},"./packages/react/src/components/checkboxes/checkboxes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,CheckboxWithHint:()=>CheckboxWithHint,Checkboxes:()=>Checkboxes,CheckboxesWithHints:()=>CheckboxesWithHints,Conditionals:()=>Conditionals,SmallCheckboxes:()=>SmallCheckboxes,default:()=>checkboxes_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),hint_hint=__webpack_require__("./packages/react/src/components/hint/hint.tsx"),label=__webpack_require__("./packages/react/src/components/label/label.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/checkboxes/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const checkboxes_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["id","className","type","hint","children","conditionalId","error"],_excluded2=["variant","children","error"];function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Checkbox=(0,react.forwardRef)((function Checkbox(_ref,ref){var id=_ref.id,className=_ref.className,_ref$type=_ref.type,type=void 0===_ref$type?"checkbox":_ref$type,hint=_ref.hint,children=_ref.children,conditionalId=_ref.conditionalId,props=(_ref.error,_objectWithoutProperties(_ref,_excluded));return(0,jsx_runtime.jsxs)("div",{className:classnames_default()(checkboxes_styles_module.govukCheckboxesItem,className),children:[(0,jsx_runtime.jsx)("input",Object.assign({ref,id,className:checkboxes_styles_module.govukCheckboxesInput,type,"aria-describedby":hint?id+"-hint":void 0,"data-aria-controls":conditionalId},props)),(0,jsx_runtime.jsx)(label._,{className:checkboxes_styles_module.govukCheckboxesLabel,htmlFor:id,children}),hint?(0,jsx_runtime.jsx)(hint_hint.k,{id:id+"-hint",className:checkboxes_styles_module.govukCheckboxesHint,children:hint}):null]})})),CheckboxConditional=(0,react.forwardRef)((function CheckboxConditional(props,ref){return(0,jsx_runtime.jsx)("div",Object.assign({ref,className:classnames_default()(checkboxes_styles_module.govukCheckboxesConditional,"govuk-checkboxes__conditional","govuk-checkboxes__conditional--hidden")},props))})),CheckboxGroup=(0,react.forwardRef)((function CheckboxGroup(_ref2,ref){var _cn,_ref2$variant=_ref2.variant,variant=void 0===_ref2$variant?"base":_ref2$variant,children=_ref2.children,props=(_ref2.error,_objectWithoutProperties(_ref2,_excluded2)),localRef=(0,react.useRef)();(0,react.useEffect)((function(){var init=function(){var _ref3=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(ref){var _yield$import,LBHCheckboxes;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,__webpack_require__.e(756).then(__webpack_require__.bind(__webpack_require__,"./packages/react/node_modules/lbh-frontend/lbh/components/lbh-checkboxes/checkboxes.js"));case 2:_yield$import=_context.sent,LBHCheckboxes=_yield$import.default,new LBHCheckboxes(ref).init();case 6:case"end":return _context.stop()}}),_callee)})));return function init(_x){return _ref3.apply(this,arguments)}}();localRef.current&&void 0!==window&&init(localRef.current)}),[]);var hasConditionals=(0,react.useMemo)((function(){return react.Children.toArray(children).some((function(child){return(0,react.isValidElement)(child)&&child.type===CheckboxConditional}))}),[children]);return(0,jsx_runtime.jsx)("div",Object.assign({ref:(0,react_merge_refs_esm.Z)([localRef,ref]),className:classnames_default()(checkboxes_styles_module.govukCheckboxes,(_cn={},_cn[checkboxes_styles_module.govukCheckboxesSmall]="small"===variant,_cn[checkboxes_styles_module.govukCheckboxesConditionals]=hasConditionals,_cn),checkboxes_styles_module.lbhCheckboxes)},props,{children}))}));try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},conditionalId:{defaultValue:null,description:"",name:"conditionalId",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/checkboxes/checkboxes.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"packages/react/src/components/checkboxes/checkboxes.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}try{CheckboxConditional.displayName="CheckboxConditional",CheckboxConditional.__docgenInfo={description:"",displayName:"CheckboxConditional",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/checkboxes/checkboxes.tsx#CheckboxConditional"]={docgenInfo:CheckboxConditional.__docgenInfo,name:"CheckboxConditional",path:"packages/react/src/components/checkboxes/checkboxes.tsx#CheckboxConditional"})}catch(__react_docgen_typescript_loader_error){}try{CheckboxGroup.displayName="CheckboxGroup",CheckboxGroup.__docgenInfo={description:"",displayName:"CheckboxGroup",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"small"'}]}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/checkboxes/checkboxes.tsx#CheckboxGroup"]={docgenInfo:CheckboxGroup.__docgenInfo,name:"CheckboxGroup",path:"packages/react/src/components/checkboxes/checkboxes.tsx#CheckboxGroup"})}catch(__react_docgen_typescript_loader_error){}const checkboxes_stories={title:"Checkbox",component:Checkbox};var Base=function Base(){return(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-1",children:"Checkbox Label"})};Base.displayName="Base";var CheckboxWithHint=function CheckboxWithHint(){return(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-2",hint:"A descriptive hint",children:"Checkbox Label"})};CheckboxWithHint.displayName="CheckboxWithHint";var Checkboxes=function Checkboxes(){return(0,jsx_runtime.jsxs)(CheckboxGroup,{children:[(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-1",children:"Checkbox 1"}),(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-2",children:"Checkbox 2"})]})};Checkboxes.displayName="Checkboxes";var SmallCheckboxes=function SmallCheckboxes(){return(0,jsx_runtime.jsxs)(CheckboxGroup,{variant:"small",children:[(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-3",children:"Checkbox 1"}),(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-4",children:"Checkbox 2"})]})};SmallCheckboxes.displayName="SmallCheckboxes";var Conditionals=function Conditionals(){return(0,jsx_runtime.jsxs)(CheckboxGroup,{children:[(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-5",children:"Checkbox 1"}),(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-6","aria-controls":"conditional",children:"Checkbox 2 with Conditional"}),(0,jsx_runtime.jsx)(CheckboxConditional,{id:"conditional",children:"This is a conditional"})]})};Conditionals.displayName="Conditionals";var CheckboxesWithHints=function CheckboxesWithHints(){return(0,jsx_runtime.jsxs)(CheckboxGroup,{children:[(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-7",hint:"Hint 1",children:"Checkbox 1"}),(0,jsx_runtime.jsx)(Checkbox,{id:"checkbox-group-8",hint:"Hint 2",children:"Checkbox 2"})]})};CheckboxesWithHints.displayName="CheckboxesWithHints",Base.parameters=Object.assign({storySource:{source:'() => {\n  return <Checkbox id="checkbox-1">Checkbox Label</Checkbox>;\n}'}},Base.parameters),CheckboxWithHint.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Checkbox id="checkbox-2" hint="A descriptive hint">\n      Checkbox Label\n    </Checkbox>\n  );\n}'}},CheckboxWithHint.parameters),Checkboxes.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <CheckboxGroup>\n      <Checkbox id="checkbox-group-1">Checkbox 1</Checkbox>\n      <Checkbox id="checkbox-group-2">Checkbox 2</Checkbox>\n    </CheckboxGroup>\n  );\n}'}},Checkboxes.parameters),SmallCheckboxes.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <CheckboxGroup variant="small">\n      <Checkbox id="checkbox-group-3">Checkbox 1</Checkbox>\n      <Checkbox id="checkbox-group-4">Checkbox 2</Checkbox>\n    </CheckboxGroup>\n  );\n}'}},SmallCheckboxes.parameters),Conditionals.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <CheckboxGroup>\n      <Checkbox id="checkbox-group-5">Checkbox 1</Checkbox>\n      <Checkbox id="checkbox-group-6" aria-controls="conditional">\n        Checkbox 2 with Conditional\n      </Checkbox>\n      <CheckboxConditional id="conditional">This is a conditional</CheckboxConditional>\n    </CheckboxGroup>\n  );\n}'}},Conditionals.parameters),CheckboxesWithHints.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <CheckboxGroup>\n      <Checkbox id="checkbox-group-7" hint="Hint 1">\n        Checkbox 1\n      </Checkbox>\n      <Checkbox id="checkbox-group-8" hint="Hint 2">\n        Checkbox 2\n      </Checkbox>\n    </CheckboxGroup>\n  );\n}'}},CheckboxesWithHints.parameters)},"./packages/react/src/components/date-input/date-input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,DateInputWithError:()=>DateInputWithError,DateInputWithSingleError:()=>DateInputWithSingleError});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _form_group__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/form-group/form-group.tsx"),_date_input__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/date-input/date-input.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Date Input",component:_date_input__WEBPACK_IMPORTED_MODULE_3__.W};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_date_input__WEBPACK_IMPORTED_MODULE_3__.W,{id:"date-input"})};Base.displayName="Base";var DateInputWithError=function DateInputWithError(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_4__.c,{as:"fieldset",id:"date-input",label:"Date of Birth",error:"Date cannot be in the future",required:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_date_input__WEBPACK_IMPORTED_MODULE_3__.W,{dayProps:{error:!0},monthProps:{error:!0},yearProps:{error:!0}})})};DateInputWithError.displayName="DateInputWithError";var DateInputWithSingleError=function DateInputWithSingleError(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_4__.c,{id:"date-input",label:"Date of Birth",error:"Date cannot be in the future",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_date_input__WEBPACK_IMPORTED_MODULE_3__.W,{yearProps:{error:!0}})})};DateInputWithSingleError.displayName="DateInputWithSingleError",Base.parameters=Object.assign({storySource:{source:'() => {\n  return <DateInput id="date-input" />;\n}'}},Base.parameters),DateInputWithError.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup\n      as="fieldset"\n      id="date-input"\n      label="Date of Birth"\n      error="Date cannot be in the future"\n      required\n    >\n      <DateInput\n        dayProps={{ error: true }}\n        monthProps={{ error: true }}\n        yearProps={{ error: true }}\n      />\n    </FormGroup>\n  );\n}'}},DateInputWithError.parameters),DateInputWithSingleError.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup id="date-input" label="Date of Birth" error="Date cannot be in the future">\n      <DateInput yearProps={{ error: true }} />\n    </FormGroup>\n  );\n}'}},DateInputWithSingleError.parameters)},"./packages/react/src/components/dialog/dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,DialogWithActions:()=>DialogWithActions,default:()=>dialog_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var react=__webpack_require__("./node_modules/react/index.js"),button_button=__webpack_require__("./packages/react/src/components/button/button.tsx"),link_link=__webpack_require__("./packages/react/src/components/link/link.tsx"),text_text=__webpack_require__("./packages/react/src/components/text/text.tsx"),reach_dialog_esm=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/@reach/dialog/dist/reach-dialog.esm.js")),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),heading=(__webpack_require__("./node_modules/@reach/dialog/styles.css"),__webpack_require__("./packages/react/src/components/heading/heading.tsx")),visually_hidden=__webpack_require__("./packages/react/src/components/visually-hidden/visually-hidden.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/dialog/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const dialog_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["isOpen","onDismiss","dismissText","children","className","title"],_excluded2=["className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Dialog=(0,react.forwardRef)((function Dialog(_ref,ref){var isOpen=_ref.isOpen,onDismiss=_ref.onDismiss,_ref$dismissText=_ref.dismissText,dismissText=void 0===_ref$dismissText?"Close":_ref$dismissText,children=_ref.children,className=_ref.className,title=_ref.title,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsxs)(reach_dialog_esm.Vq,Object.assign({ref,isOpen,onDismiss,className:classnames_default()(dialog_styles_module.lbhDialog,className),"aria-label":title},props,{children:[(0,jsx_runtime.jsx)(heading.X,{variant:"h2",className:dialog_styles_module.lbhDialogTitle,children:title}),(0,jsx_runtime.jsxs)("button",{type:"button",onClick:onDismiss,className:dialog_styles_module.lbhDialogClose,children:[(0,jsx_runtime.jsx)(visually_hidden.T,{children:dismissText}),(0,jsx_runtime.jsxs)("svg",{width:"18",height:"18",viewBox:"0 0 13 13",fill:"none",children:[(0,jsx_runtime.jsx)("path",{d:"M-0.0501709 1.36379L1.36404 -0.050415L12.6778 11.2633L11.2635 12.6775L-0.0501709 1.36379Z",fill:"#0B0C0C"}),(0,jsx_runtime.jsx)("path",{d:"M11.2635 -0.050293L12.6778 1.36392L1.36404 12.6776L-0.0501709 11.2634L11.2635 -0.050293Z",fill:"#0B0C0C"})]})]}),children]}))})),DialogActions=(0,react.forwardRef)((function DialogActions(_ref2,ref){var className=_ref2.className,props=_objectWithoutProperties(_ref2,_excluded2);return(0,jsx_runtime.jsx)("div",Object.assign({ref,className:classnames_default()(dialog_styles_module.lbhDialogActions,className)},props))}));try{Dialog.displayName="Dialog",Dialog.__docgenInfo={description:"",displayName:"Dialog",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},onDismiss:{defaultValue:null,description:"",name:"onDismiss",required:!0,type:{name:"() => void"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},dismissText:{defaultValue:{value:"Close"},description:"",name:"dismissText",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/dialog/dialog.tsx#Dialog"]={docgenInfo:Dialog.__docgenInfo,name:"Dialog",path:"packages/react/src/components/dialog/dialog.tsx#Dialog"})}catch(__react_docgen_typescript_loader_error){}try{DialogActions.displayName="DialogActions",DialogActions.__docgenInfo={description:"",displayName:"DialogActions",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/dialog/dialog.tsx#DialogActions"]={docgenInfo:DialogActions.__docgenInfo,name:"DialogActions",path:"packages/react/src/components/dialog/dialog.tsx#DialogActions"})}catch(__react_docgen_typescript_loader_error){}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const dialog_stories={title:"Dialog",component:Dialog};var Base=function Base(){var _useState2=_slicedToArray((0,react.useState)(!1),2),open=_useState2[0],setOpen=_useState2[1];return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(button_button.z,{onClick:function onClick(){return setOpen(!0)},children:"Open Dialog"}),(0,jsx_runtime.jsx)(Dialog,{isOpen:open,onDismiss:function onDismiss(){return setOpen(!1)},title:"Announcement",children:(0,jsx_runtime.jsx)(text_text.x,{children:"This is a dialog"})})]})},DialogWithActions=function DialogWithActions(){var _useState4=_slicedToArray((0,react.useState)(!1),2),open=_useState4[0],setOpen=_useState4[1];return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(button_button.z,{onClick:function onClick(){return setOpen(!0)},children:"Open Dialog"}),(0,jsx_runtime.jsxs)(Dialog,{isOpen:open,onDismiss:function onDismiss(){return setOpen(!1)},title:"Are you sure?",children:[(0,jsx_runtime.jsx)(text_text.x,{children:"Confirmation is required."}),(0,jsx_runtime.jsxs)(DialogActions,{children:[(0,jsx_runtime.jsx)(button_button.z,{children:"Yes"}),(0,jsx_runtime.jsx)(link_link.r,{as:"button",onClick:function onClick(){return setOpen(!1)},children:"Cancel"})]})]})]})};Base.parameters=Object.assign({storySource:{source:'() => {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Open Dialog</Button>\n      <Dialog isOpen={open} onDismiss={() => setOpen(false)} title="Announcement">\n        <Text>This is a dialog</Text>\n      </Dialog>\n    </>\n  );\n}'}},Base.parameters),DialogWithActions.parameters=Object.assign({storySource:{source:'() => {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Open Dialog</Button>\n      <Dialog isOpen={open} onDismiss={() => setOpen(false)} title="Are you sure?">\n        <Text>Confirmation is required.</Text>\n        <DialogActions>\n          <Button>Yes</Button>\n          <Link as="button" onClick={() => setOpen(false)}>\n            Cancel\n          </Link>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}'}},DialogWithActions.parameters)},"./packages/react/src/components/error-message/error-message.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _error_message__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/error-message/error-message.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Error Message",component:_error_message__WEBPACK_IMPORTED_MODULE_3__.B};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_error_message__WEBPACK_IMPORTED_MODULE_3__.B,{children:"Error message about full name goes here"})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:"() => {\n  return <ErrorMessage>Error message about full name goes here</ErrorMessage>;\n}"}},Base.parameters)},"./packages/react/src/components/error-summary/error-summary.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,default:()=>error_summary_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),list=__webpack_require__("./packages/react/src/components/list/list.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/error-summary/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const error_summary_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","id","title","description","className","children","reFocus","override"];function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ErrorSummary=(0,react.forwardRef)((function ErrorSummary(_ref,ref){var _ref$as=_ref.as,ErrorSummaryComp=void 0===_ref$as?"div":_ref$as,id=_ref.id,title=_ref.title,description=_ref.description,className=_ref.className,children=_ref.children,reFocus=_ref.reFocus,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),localRef=(0,react.useRef)(null);return(0,react.useEffect)((function(){var init=function(){var _ref2=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(ref){var _yield$import,LBHErrorSummary;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,__webpack_require__.e(366).then(__webpack_require__.bind(__webpack_require__,"./packages/react/node_modules/lbh-frontend/lbh/components/lbh-error-summary/error-summary.js"));case 2:_yield$import=_context.sent,LBHErrorSummary=_yield$import.default,new LBHErrorSummary(ref).init(),ref.scrollIntoView(!0);case 7:case"end":return _context.stop()}}),_callee)})));return function init(_x){return _ref2.apply(this,arguments)}}();localRef.current&&void 0!==window&&void 0!==document&&init(localRef.current)}),[]),(0,react.useEffect)((function(){localRef.current&&localRef.current.scrollIntoView(!0)}),[reFocus]),(0,jsx_runtime.jsxs)(ErrorSummaryComp,Object.assign({ref:(0,react_merge_refs_esm.Z)([localRef,ref]),className:classnames_default()(error_summary_styles_module.govukErrorSummary,error_summary_styles_module.lbhErrorSummary,(0,width_overrides.Z)(override),className),"aria-labelledby":id,role:"alert"},props,{children:[(0,jsx_runtime.jsx)("h2",{className:error_summary_styles_module.govukErrorSummaryTitle,id,children:title}),description||children?(0,jsx_runtime.jsxs)("div",{className:error_summary_styles_module.govukErrorSummaryBody,children:[description?(0,jsx_runtime.jsx)("p",{children:description}):null,children?(0,jsx_runtime.jsx)(list.a,{className:error_summary_styles_module.govukErrorSummaryList,children:react.Children.map(children,(function(child){return child&&(0,react.isValidElement)(child)&&(0,jsx_runtime.jsx)("li",{children:child})}))}):null]}):null]}))}));try{ErrorSummary.displayName="ErrorSummary",ErrorSummary.__docgenInfo={description:"",displayName:"ErrorSummary",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},reFocus:{defaultValue:null,description:"",name:"reFocus",required:!1,type:{name:"number"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/error-summary/error-summary.tsx#ErrorSummary"]={docgenInfo:ErrorSummary.__docgenInfo,name:"ErrorSummary",path:"packages/react/src/components/error-summary/error-summary.tsx#ErrorSummary"})}catch(__react_docgen_typescript_loader_error){}const error_summary_stories={title:"Error Summary",component:ErrorSummary};var Base=function Base(){return(0,jsx_runtime.jsxs)(ErrorSummary,{id:"error-summary",title:"There is a problem",children:[(0,jsx_runtime.jsx)("a",{href:"#error-1",children:"The date your passport was issued must be in the past"}),(0,jsx_runtime.jsx)("a",{href:"#errror-2",children:"Enter a postcode, like AA1 1AA"})]})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <ErrorSummary id="error-summary" title="There is a problem">\n      <a href="#error-1">The date your passport was issued must be in the past</a>\n      <a href="#errror-2">Enter a postcode, like AA1 1AA</a>\n    </ErrorSummary>\n  );\n}'}},Base.parameters)},"./packages/react/src/components/field/date-field.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var formik__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),_field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/field/field.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Formik/Date Field",component:_field__WEBPACK_IMPORTED_MODULE_4__.Nn};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.J9,{initialValues:{text:""},onSubmit:function onSubmit(){},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_field__WEBPACK_IMPORTED_MODULE_4__.Nn,{id:"dob",label:"Date of Birth",dayProps:{name:"dobDay"},monthProps:{name:"dobMonth"},yearProps:{name:"dobYear"}})})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Formik initialValues={{ text: "" }} onSubmit={() => {}}>\n      <DateField\n        id="dob"\n        label="Date of Birth"\n        dayProps={{ name: "dobDay" }}\n        monthProps={{ name: "dobMonth" }}\n        yearProps={{ name: "dobYear" }}\n      />\n    </Formik>\n  );\n}'}},Base.parameters)},"./packages/react/src/components/field/field.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,FieldWithRadioGroup:()=>FieldWithRadioGroup});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var formik__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),_input__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/react/src/components/input/input.tsx"),_radios__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/react/src/components/radios/radios.tsx"),_field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/field/field.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Formik/Field",component:_field__WEBPACK_IMPORTED_MODULE_4__.gN};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.J9,{initialValues:{text:""},onSubmit:function onSubmit(){},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_field__WEBPACK_IMPORTED_MODULE_4__.gN,{id:"text",label:"Text Label",name:"text",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_input__WEBPACK_IMPORTED_MODULE_5__.I,{})})})};Base.displayName="Base";var FieldWithRadioGroup=function FieldWithRadioGroup(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.J9,{initialValues:{choice:""},onSubmit:function onSubmit(){},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_field__WEBPACK_IMPORTED_MODULE_4__.gN,{id:"text",label:"Radio Label",name:"choice",type:"radio",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_radios__WEBPACK_IMPORTED_MODULE_6__.Ee,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_6__.Y8,{id:"choice-1",value:"1",children:"Choice 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_6__.Y8,{id:"choice-2",value:"2",children:"Choice 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_6__.Y8,{id:"choice-3",value:"3",children:"Choice 3"})]})})})};FieldWithRadioGroup.displayName="FieldWithRadioGroup",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Formik initialValues={{ text: "" }} onSubmit={() => {}}>\n      <Field id="text" label="Text Label" name="text">\n        <Input />\n      </Field>\n    </Formik>\n  );\n}'}},Base.parameters),FieldWithRadioGroup.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Formik initialValues={{ choice: "" }} onSubmit={() => {}}>\n      <Field id="text" label="Radio Label" name="choice" type="radio">\n        <RadioGroup>\n          <Radio id="choice-1" value="1">\n            Choice 1\n          </Radio>\n          <Radio id="choice-2" value="2">\n            Choice 2\n          </Radio>\n          <Radio id="choice-3" value="3">\n            Choice 3\n          </Radio>\n        </RadioGroup>\n      </Field>\n    </Formik>\n  );\n}'}},FieldWithRadioGroup.parameters)},"./packages/react/src/components/field/inline-field.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var formik__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),_input__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/react/src/components/input/input.tsx"),_field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/field/field.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Formik/Inline Field",component:_field__WEBPACK_IMPORTED_MODULE_4__._9};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.J9,{initialValues:{text:""},onSubmit:function onSubmit(){},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_field__WEBPACK_IMPORTED_MODULE_4__._9,{name:"text",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_input__WEBPACK_IMPORTED_MODULE_5__.I,{})})})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Formik initialValues={{ text: "" }} onSubmit={() => {}}>\n      <InlineField name="text">\n        <Input />\n      </InlineField>\n    </Formik>\n  );\n}'}},Base.parameters)},"./packages/react/src/components/fieldset/fieldset.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,FieldsetWithHeading:()=>FieldsetWithHeading,default:()=>fieldset_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),form_group=__webpack_require__("./packages/react/src/components/form-group/form-group.tsx"),input=__webpack_require__("./packages/react/src/components/input/input.tsx"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),error_message=__webpack_require__("./packages/react/src/components/error-message/error-message.tsx"),visually_hidden=__webpack_require__("./packages/react/src/components/visually-hidden/visually-hidden.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/fieldset/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const fieldset_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["variant","indent","error","heading","children","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Fieldset=(0,react.forwardRef)((function Fieldset(_ref,ref){var _cn2,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"medium":_ref$variant,_ref$indent=_ref.indent,indent=void 0!==_ref$indent&&_ref$indent,error=_ref.error,heading=_ref.heading,children=_ref.children,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),legend=(0,react.useMemo)((function(){var _cn,legendOutput=(0,jsx_runtime.jsxs)("legend",{className:classnames_default()(fieldset_styles_module.govukFieldsetLegend,(_cn={},_cn[fieldset_styles_module.govukFieldsetLegendS]="small"===variant,_cn[fieldset_styles_module.govukFieldsetLegendM]="medium"===variant,_cn[fieldset_styles_module.govukFieldsetLegendL]="large"===variant,_cn[fieldset_styles_module.govukFieldsetLegendXl]="xlarge"===variant,_cn)),children:["string"!=typeof heading?(0,react.isValidElement)(heading)&&(0,react.cloneElement)(heading,{className:classnames_default()(fieldset_styles_module.govukFieldsetHeading,heading.props.className)}):heading,error&&(0,jsx_runtime.jsx)(visually_hidden.T,{className:fieldset_styles_module.fieldsetError,children:error})]});return"hidden"===variant?(0,jsx_runtime.jsx)(visually_hidden.T,{children:legendOutput}):legendOutput}),[variant,heading,error]);return(0,jsx_runtime.jsxs)("fieldset",Object.assign({ref,className:classnames_default()(fieldset_styles_module.govukFieldset,fieldset_styles_module.lbhFieldset,(_cn2={},_cn2[fieldset_styles_module.fieldsetIndent]=indent,_cn2[fieldset_styles_module.fieldsetHasError]=!!error,_cn2),(0,width_overrides.Z)(override),className)},props,{children:[legend,(0,jsx_runtime.jsxs)("div",{className:fieldset_styles_module.fieldsetContent,children:[error&&(0,jsx_runtime.jsx)(error_message.B,{"aria-hidden":"true",children:error}),children]})]}))}));try{Fieldset.displayName="Fieldset",Fieldset.__docgenInfo={description:"",displayName:"Fieldset",props:{heading:{defaultValue:null,description:"",name:"heading",required:!0,type:{name:'string | ReactElement<Pick<DetailedHTMLProps<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof HTMLAttributes<...>>, string | JSXElementConstructor<...>>'}},variant:{defaultValue:{value:"medium"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"hidden"'},{value:'"medium"'},{value:'"large"'},{value:'"xlarge"'}]}},indent:{defaultValue:{value:"false"},description:"",name:"indent",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string | boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/fieldset/fieldset.tsx#Fieldset"]={docgenInfo:Fieldset.__docgenInfo,name:"Fieldset",path:"packages/react/src/components/fieldset/fieldset.tsx#Fieldset"})}catch(__react_docgen_typescript_loader_error){}const fieldset_stories={title:"Fieldset",component:Fieldset};var Base=function Base(){return(0,jsx_runtime.jsxs)(Fieldset,{heading:"What is your address?",children:[(0,jsx_runtime.jsx)(form_group.c,{id:"address-1",label:"Address 1",children:(0,jsx_runtime.jsx)(input.I,{})}),(0,jsx_runtime.jsx)(form_group.c,{id:"address-2",label:"Address 2",children:(0,jsx_runtime.jsx)(input.I,{})})]})};Base.displayName="Base";var FieldsetWithHeading=function FieldsetWithHeading(){return(0,jsx_runtime.jsxs)(Fieldset,{variant:"large",heading:(0,jsx_runtime.jsx)("h1",{children:"What is your address?"}),children:[(0,jsx_runtime.jsx)(form_group.c,{id:"address-1",label:"Address 1",children:(0,jsx_runtime.jsx)(input.I,{})}),(0,jsx_runtime.jsx)(form_group.c,{id:"address-2",label:"Address 2",children:(0,jsx_runtime.jsx)(input.I,{})})]})};FieldsetWithHeading.displayName="FieldsetWithHeading",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Fieldset heading="What is your address?">\n      <FormGroup id="address-1" label="Address 1">\n        <Input />\n      </FormGroup>\n      <FormGroup id="address-2" label="Address 2">\n        <Input />\n      </FormGroup>\n    </Fieldset>\n  );\n}'}},Base.parameters),FieldsetWithHeading.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Fieldset variant="large" heading={<h1>What is your address?</h1>}>\n      <FormGroup id="address-1" label="Address 1">\n        <Input />\n      </FormGroup>\n      <FormGroup id="address-2" label="Address 2">\n        <Input />\n      </FormGroup>\n    </Fieldset>\n  );\n}'}},FieldsetWithHeading.parameters)},"./packages/react/src/components/form-group/form-group.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,FormGroupWithHint:()=>FormGroupWithHint,FormGroupWithRequired:()=>FormGroupWithRequired,FormGroupWithError:()=>FormGroupWithError});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _input__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/input/input.tsx"),_form_group__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/form-group/form-group.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Form Group",component:_form_group__WEBPACK_IMPORTED_MODULE_3__.c};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_3__.c,{id:"name",label:"First Name",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_4__.I,{})})};Base.displayName="Base";var FormGroupWithHint=function FormGroupWithHint(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_3__.c,{id:"name",label:"First Name",hint:"You can find this name on your passport",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_4__.I,{})})};FormGroupWithHint.displayName="FormGroupWithHint";var FormGroupWithRequired=function FormGroupWithRequired(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_3__.c,{id:"name",label:"First Name",required:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_4__.I,{})})};FormGroupWithRequired.displayName="FormGroupWithRequired";var FormGroupWithError=function FormGroupWithError(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_3__.c,{id:"name",label:"First Name",error:"First Name is required",required:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_4__.I,{})})};FormGroupWithError.displayName="FormGroupWithError",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup id="name" label="First Name">\n      <Input />\n    </FormGroup>\n  );\n}'}},Base.parameters),FormGroupWithHint.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup\n      id="name"\n      label="First Name"\n      hint="You can find this name on your passport"\n    >\n      <Input />\n    </FormGroup>\n  );\n}'}},FormGroupWithHint.parameters),FormGroupWithRequired.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup id="name" label="First Name" required>\n      <Input />\n    </FormGroup>\n  );\n}'}},FormGroupWithRequired.parameters),FormGroupWithError.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup id="name" label="First Name" error="First Name is required" required>\n      <Input />\n    </FormGroup>\n  );\n}'}},FormGroupWithError.parameters)},"./packages/react/src/components/heading/heading.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,PolymorphicHeading:()=>PolymorphicHeading});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _heading__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/heading/heading.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Heading",component:_heading__WEBPACK_IMPORTED_MODULE_3__.X};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{children:"H1 Heading"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{variant:"h2",children:"H2 Heading"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{variant:"h3",children:"H3 Heading"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{variant:"h4",children:"H4 Heading"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{variant:"h5",children:"H5 Heading"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{variant:"h6",children:"H6 Heading"})]})},PolymorphicHeading=function PolymorphicHeading(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{as:"h1",variant:"h2",children:"H1 as H2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_heading__WEBPACK_IMPORTED_MODULE_3__.X,{as:"span",children:"Span as H1"})]})};Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <>\n      <Heading>H1 Heading</Heading>\n      <Heading variant="h2">H2 Heading</Heading>\n      <Heading variant="h3">H3 Heading</Heading>\n      <Heading variant="h4">H4 Heading</Heading>\n      <Heading variant="h5">H5 Heading</Heading>\n      <Heading variant="h6">H6 Heading</Heading>\n    </>\n  );\n}'}},Base.parameters),PolymorphicHeading.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <>\n      <Heading as="h1" variant="h2">\n        H1 as H2\n      </Heading>\n      <Heading as="span">Span as H1</Heading>\n    </>\n  );\n}'}},PolymorphicHeading.parameters)},"./packages/react/src/components/hint/hint.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,PolymorphicHint:()=>PolymorphicHint});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _hint__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/hint/hint.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Hint",component:_hint__WEBPACK_IMPORTED_MODULE_3__.k};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_hint__WEBPACK_IMPORTED_MODULE_3__.k,{children:"A descriptive hint"})};Base.displayName="Base";var PolymorphicHint=function PolymorphicHint(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_hint__WEBPACK_IMPORTED_MODULE_3__.k,{as:"p",children:"A descriptive hint"})};PolymorphicHint.displayName="PolymorphicHint",Base.parameters=Object.assign({storySource:{source:"() => {\n  return <Hint>A descriptive hint</Hint>;\n}"}},Base.parameters),PolymorphicHint.parameters=Object.assign({storySource:{source:'() => {\n  return <Hint as="p">A descriptive hint</Hint>;\n}'}},PolymorphicHint.parameters)},"./packages/react/src/components/icon/icon.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,default:()=>icon_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/icon/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const icon_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["width","height","color","className","size","focusable"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Icon=(0,react.forwardRef)((function Icon(_ref,ref){var width=_ref.width,height=_ref.height,color=_ref.color,className=_ref.className,_ref$size=_ref.size,size=void 0===_ref$size?"1em":_ref$size,_ref$focusable=_ref.focusable,focusable=void 0!==_ref$focusable&&_ref$focusable,props=_objectWithoutProperties(_ref,_excluded),iconClasses=classnames_default()(icon_styles_module.icon,className),style={};return color&&"currentColor"!==color&&(style.color=color),(0,jsx_runtime.jsx)("svg",Object.assign({ref,className:iconClasses,width:width||size,height:height||size,focusable,style},props))}));try{Icon.displayName="Icon",Icon.__docgenInfo={description:"",displayName:"Icon",props:{viewBox:{defaultValue:null,description:"",name:"viewBox",required:!0,type:{name:"string"}},size:{defaultValue:{value:"1em"},description:"",name:"size",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/icon/icon.tsx#Icon"]={docgenInfo:Icon.__docgenInfo,name:"Icon",path:"packages/react/src/components/icon/icon.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}const icon_stories={title:"Icon",component:Icon};var Base=function Base(){return(0,jsx_runtime.jsx)(Icon,{viewBox:"0 0 200 200",children:(0,jsx_runtime.jsx)("path",{fill:"currentColor",d:"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0"})})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Icon viewBox="0 0 200 200">\n      <path\n        fill="currentColor"\n        d="M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0"\n      />\n    </Icon>\n  );\n}'}},Base.parameters)},"./packages/react/src/components/input/input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,InputWithError:()=>InputWithError});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _input__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/input/input.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Input",component:_input__WEBPACK_IMPORTED_MODULE_3__.I};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_3__.I,{placeholder:"Enter postcode"})};Base.displayName="Base";var InputWithError=function InputWithError(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_3__.I,{error:!0})};InputWithError.displayName="InputWithError",Base.parameters=Object.assign({storySource:{source:'() => {\n  return <Input placeholder="Enter postcode" />;\n}'}},Base.parameters),InputWithError.parameters=Object.assign({storySource:{source:"() => {\n  return <Input error />;\n}"}},InputWithError.parameters)},"./packages/react/src/components/label/label.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,PolymorphicLabel:()=>PolymorphicLabel});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _label__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/label/label.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Label",component:_label__WEBPACK_IMPORTED_MODULE_3__._};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_label__WEBPACK_IMPORTED_MODULE_3__._,{htmlFor:"test",children:"A descriptive label"})};Base.displayName="Base";var PolymorphicLabel=function PolymorphicLabel(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_label__WEBPACK_IMPORTED_MODULE_3__._,{as:"p",children:"A descriptive label"})};PolymorphicLabel.displayName="PolymorphicLabel",Base.parameters=Object.assign({storySource:{source:'() => {\n  return <Label htmlFor="test">A descriptive label</Label>;\n}'}},Base.parameters),PolymorphicLabel.parameters=Object.assign({storySource:{source:'() => {\n  return <Label as="p">A descriptive label</Label>;\n}'}},PolymorphicLabel.parameters)},"./packages/react/src/components/link-box/link-box.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,default:()=>link_box_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),center=__webpack_require__("./packages/react/src/components/center/center.tsx"),link_link=__webpack_require__("./packages/react/src/components/link/link.tsx"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/link-box/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const link_box_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","className","override"],_excluded2=["as","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var LinkOverlay=(0,react.forwardRef)((function LinkOverlay(_ref,ref){var _ref$as=_ref.as,LinkOverlayComp=void 0===_ref$as?"div":_ref$as,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(LinkOverlayComp,Object.assign({ref,className:classnames_default()(link_box_styles_module.linkOverlay,(0,width_overrides.Z)(override),className)},props))})),LinkBox=(0,react.forwardRef)((function LinkBox(_ref2,ref){var _ref2$as=_ref2.as,LinkBoxComp=void 0===_ref2$as?"div":_ref2$as,className=_ref2.className,override=_ref2.override,props=_objectWithoutProperties(_ref2,_excluded2);return(0,jsx_runtime.jsx)(LinkBoxComp,Object.assign({ref,className:classnames_default()(link_box_styles_module.linkBox,(0,width_overrides.Z)(override),className)},props))}));try{LinkOverlay.displayName="LinkOverlay",LinkOverlay.__docgenInfo={description:"",displayName:"LinkOverlay",props:{override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/link-box/link-box.tsx#LinkOverlay"]={docgenInfo:LinkOverlay.__docgenInfo,name:"LinkOverlay",path:"packages/react/src/components/link-box/link-box.tsx#LinkOverlay"})}catch(__react_docgen_typescript_loader_error){}try{LinkBox.displayName="LinkBox",LinkBox.__docgenInfo={description:"",displayName:"LinkBox",props:{override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/link-box/link-box.tsx#LinkBox"]={docgenInfo:LinkBox.__docgenInfo,name:"LinkBox",path:"packages/react/src/components/link-box/link-box.tsx#LinkBox"})}catch(__react_docgen_typescript_loader_error){}const link_box_stories={title:"LinkBox",component:LinkBox};var Base=function Base(){return(0,jsx_runtime.jsx)(LinkBox,{style:{border:"2px solid grey",borderRadius:"6px",width:"200px",height:"200px"},children:(0,jsx_runtime.jsxs)(center.M,{style:{height:"100%",width:"100%"},children:[(0,jsx_runtime.jsx)(LinkOverlay,{as:"span",children:(0,jsx_runtime.jsx)(link_link.r,{href:"#main",children:"Main"})}),(0,jsx_runtime.jsx)(link_link.r,{href:"#second",style:{marginTop:0,marginLeft:"10px"},children:"Secondary"})]})})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <LinkBox\n      style={{\n        border: "2px solid grey",\n        borderRadius: "6px",\n        width: "200px",\n        height: "200px",\n      }}\n    >\n      <Center style={{ height: "100%", width: "100%" }}>\n        <LinkOverlay as="span">\n          <Link href="#main">Main</Link>\n        </LinkOverlay>\n        <Link href="#second" style={{ marginTop: 0, marginLeft: "10px" }}>\n          Secondary\n        </Link>\n      </Center>\n    </LinkBox>\n  );\n}'}},Base.parameters)},"./packages/react/src/components/link/link.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,DangerLink:()=>DangerLink,MutedLink:()=>MutedLink,TextColorLink:()=>TextColorLink,NoUnderlineLink:()=>NoUnderlineLink,BackLink:()=>BackLink,ExternalLink:()=>ExternalLink});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _text__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/text/text.tsx"),_link__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/link/link.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Link",component:_link__WEBPACK_IMPORTED_MODULE_3__.r};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/",children:"Home"})};Base.displayName="Base";var DangerLink=function DangerLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/delete",variant:"danger",children:"Delete Record"})};DangerLink.displayName="DangerLink";var MutedLink=function MutedLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/activities",variant:"muted",children:"Past activities"})};MutedLink.displayName="MutedLink";var TextColorLink=function TextColorLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_text__WEBPACK_IMPORTED_MODULE_4__.x,{children:["Read more about"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/mark",variant:"text-colour",children:"Mark"})," ","in our new"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/post/1",variant:"text-colour",children:"blog post"}),"."]})};TextColorLink.displayName="TextColorLink";var NoUnderlineLink=function NoUnderlineLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/",variant:"no-underline",children:"Home"})};NoUnderlineLink.displayName="NoUnderlineLink";var BackLink=function BackLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"/back",variant:"back-link",children:"Home"})};BackLink.displayName="BackLink";var ExternalLink=function ExternalLink(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_link__WEBPACK_IMPORTED_MODULE_3__.r,{href:"http://google.com",isExternal:!0,children:"Google"})};ExternalLink.displayName="ExternalLink",Base.parameters=Object.assign({storySource:{source:'() => {\n  return <Link href="/">Home</Link>;\n}'}},Base.parameters),DangerLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Link href="/delete" variant="danger">\n      Delete Record\n    </Link>\n  );\n}'}},DangerLink.parameters),MutedLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Link href="/activities" variant="muted">\n      Past activities\n    </Link>\n  );\n}'}},MutedLink.parameters),TextColorLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Text>\n      Read more about{" "}\n      <Link href="/mark" variant="text-colour">\n        Mark\n      </Link>{" "}\n      in our new{" "}\n      <Link href="/post/1" variant="text-colour">\n        blog post\n      </Link>\n      .\n    </Text>\n  );\n}'}},TextColorLink.parameters),NoUnderlineLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Link href="/" variant="no-underline">\n      Home\n    </Link>\n  );\n}'}},NoUnderlineLink.parameters),BackLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Link href="/back" variant="back-link">\n      Home\n    </Link>\n  );\n}'}},BackLink.parameters),ExternalLink.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Link href="http://google.com" isExternal>\n      Google\n    </Link>\n  );\n}'}},ExternalLink.parameters)},"./packages/react/src/components/list/list.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,ListWithBullets:()=>ListWithBullets,ListWithNumerals:()=>ListWithNumerals});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _list__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/list/list.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"List",component:_list__WEBPACK_IMPORTED_MODULE_3__.a};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_list__WEBPACK_IMPORTED_MODULE_3__.a,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 3"})]})};Base.displayName="Base";var ListWithBullets=function ListWithBullets(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_list__WEBPACK_IMPORTED_MODULE_3__.a,{variant:"bullet",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 3"})]})};ListWithBullets.displayName="ListWithBullets";var ListWithNumerals=function ListWithNumerals(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_list__WEBPACK_IMPORTED_MODULE_3__.a,{as:"ol",variant:"number",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:"Item 3"})]})};ListWithNumerals.displayName="ListWithNumerals",Base.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <List>\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </List>\n  );\n}"}},Base.parameters),ListWithBullets.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <List variant="bullet">\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </List>\n  );\n}'}},ListWithBullets.parameters),ListWithNumerals.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <List as="ol" variant="number">\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </List>\n  );\n}'}},ListWithNumerals.parameters)},"./packages/react/src/components/number-input/number-input.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,NumberInputWithTypeNumber:()=>NumberInputWithTypeNumber,NumberWithMinMax:()=>NumberWithMinMax});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _number_input__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/number-input/number-input.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Number Input",component:_number_input__WEBPACK_IMPORTED_MODULE_3__.Y};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_number_input__WEBPACK_IMPORTED_MODULE_3__.Y,{placeholder:"Enter number"})};Base.displayName="Base";var NumberInputWithTypeNumber=function NumberInputWithTypeNumber(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_number_input__WEBPACK_IMPORTED_MODULE_3__.Y,{type:"number",placeholder:"Enter number"})};NumberInputWithTypeNumber.displayName="NumberInputWithTypeNumber";var NumberWithMinMax=function NumberWithMinMax(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_number_input__WEBPACK_IMPORTED_MODULE_3__.Y,{placeholder:"Enter Month",min:0,max:12,padStart:2})};NumberWithMinMax.displayName="NumberWithMinMax",Base.parameters=Object.assign({storySource:{source:'() => {\n  return <NumberInput placeholder="Enter number" />;\n}'}},Base.parameters),NumberInputWithTypeNumber.parameters=Object.assign({storySource:{source:'() => {\n  return <NumberInput type="number" placeholder="Enter number" />;\n}'}},NumberInputWithTypeNumber.parameters),NumberWithMinMax.parameters=Object.assign({storySource:{source:'() => {\n  return <NumberInput placeholder="Enter Month" min={0} max={12} padStart={2} />;\n}'}},NumberWithMinMax.parameters)},"./packages/react/src/components/page-announcement/page-announcement.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,PageAnnouncementInfo:()=>PageAnnouncementInfo,PageAnnouncementWarning:()=>PageAnnouncementWarning,PageAnnouncementWithProvider:()=>PageAnnouncementWithProvider,default:()=>page_announcement_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),button_button=__webpack_require__("./packages/react/src/components/button/button.tsx"),jsx_runtime=(__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var PageAnnouncementContext=(0,react.createContext)(void 0);PageAnnouncementContext.displayName="PageAnnouncementContext";var usePageAnnouncement=function usePageAnnouncement(){var context=(0,react.useContext)(PageAnnouncementContext);if(!context){var _Error$captureStackTr,error=new Error("usePageAnnouncementContext: `context` is undefined. Seems you forgot to wrap component within the Provider");throw null===(_Error$captureStackTr=Error.captureStackTrace)||void 0===_Error$captureStackTr||_Error$captureStackTr.call(Error,error,usePageAnnouncement),error}var state=context.state,dispatch=context.dispatch;return{state,addAnnouncement:function addAnnouncement(props){dispatch({type:"ADD",payload:props})},clearAnnouncement:function clearAnnouncement(){dispatch({type:"CLEAR"})}}},PageAnnouncementProvider=function PageAnnouncementProvider(_ref){var sessionKey=_ref.sessionKey,children=_ref.children,initialData=(0,react.useMemo)((function(){if(sessionKey){var data={heading:window.sessionStorage.getItem(sessionKey+":heading")||"",variant:window.sessionStorage.getItem(sessionKey+":variant")||"success",description:window.sessionStorage.getItem(sessionKey+":description")||""};if(data.heading)return window.sessionStorage.removeItem(sessionKey+":heading"),window.sessionStorage.removeItem(sessionKey+":variant"),window.sessionStorage.removeItem(sessionKey+":description"),data}}),[sessionKey]),_useReducer2=_slicedToArray((0,react.useReducer)((function reducer(state,action){switch(action.type){case"ADD":return action.payload;case"CLEAR":default:return}}),initialData),2),state=_useReducer2[0],dispatch=_useReducer2[1];return(0,jsx_runtime.jsx)(PageAnnouncementContext.Provider,{value:{state,dispatch},children})};PageAnnouncementProvider.displayName="PageAnnouncementProvider";try{PageAnnouncementProvider.displayName="PageAnnouncementProvider",PageAnnouncementProvider.__docgenInfo={description:"",displayName:"PageAnnouncementProvider",props:{sessionKey:{defaultValue:null,description:"",name:"sessionKey",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/page-announcement/context.tsx#PageAnnouncementProvider"]={docgenInfo:PageAnnouncementProvider.__docgenInfo,name:"PageAnnouncementProvider",path:"packages/react/src/components/page-announcement/context.tsx#PageAnnouncementProvider"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js");var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/page-announcement/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const page_announcement_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var _excluded=["className"],_excluded2=["heading","description","variant"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var PageAnnouncement=(0,react.forwardRef)((function PageAnnouncement(_ref,ref){var _context$state,_cn,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded),context=(0,react.useContext)(PageAnnouncementContext);if(!(null!=context&&null!==(_context$state=context.state)&&void 0!==_context$state&&_context$state.heading||props.heading))return null;var _context$state$props=Object.assign({},null==context?void 0:context.state,props),heading=_context$state$props.heading,description=_context$state$props.description,_context$state$props$=_context$state$props.variant,variant=void 0===_context$state$props$?"success":_context$state$props$,rest=_objectWithoutProperties(_context$state$props,_excluded2);return(0,jsx_runtime.jsxs)("section",Object.assign({ref,className:classnames_default()(page_announcement_styles_module.lbhPageAnnouncement,(_cn={},_cn[page_announcement_styles_module["lbh-page-announcement--"+variant]]=variant&&"success"!==variant,_cn),className)},rest,{role:"alert",children:[(0,jsx_runtime.jsx)("h3",{className:page_announcement_styles_module.lbhPageAnnouncementTitle,children:heading}),!!description&&(0,jsx_runtime.jsx)("div",{className:page_announcement_styles_module.lbhPageAnnouncementContent,children:description})]}))}));try{PageAnnouncement.displayName="PageAnnouncement",PageAnnouncement.__docgenInfo={description:"",displayName:"PageAnnouncement",props:{heading:{defaultValue:null,description:"",name:"heading",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"warning"'},{value:'"info"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/page-announcement/page-announcement.tsx#PageAnnouncement"]={docgenInfo:PageAnnouncement.__docgenInfo,name:"PageAnnouncement",path:"packages/react/src/components/page-announcement/page-announcement.tsx#PageAnnouncement"})}catch(__react_docgen_typescript_loader_error){}const page_announcement_stories={title:"Page Announcement",component:PageAnnouncement};var Base=function Base(){return(0,jsx_runtime.jsx)(PageAnnouncement,{heading:"Person added",description:"More detail about the announcement."})};Base.displayName="Base";var PageAnnouncementWarning=function PageAnnouncementWarning(){return(0,jsx_runtime.jsx)(PageAnnouncement,{variant:"warning",heading:"Payment unsuccessful",description:"More detail about the announcement."})};PageAnnouncementWarning.displayName="PageAnnouncementWarning";var PageAnnouncementInfo=function PageAnnouncementInfo(){return(0,jsx_runtime.jsx)(PageAnnouncement,{variant:"info",heading:"Info",description:"More detail about the announcement."})};PageAnnouncementInfo.displayName="PageAnnouncementInfo";var PageAnnouncementWithProvider=function PageAnnouncementWithProvider(){var Action=function Action(){var _usePageAnnouncement=usePageAnnouncement(),addAnnouncement=_usePageAnnouncement.addAnnouncement,clearAnnouncement=_usePageAnnouncement.clearAnnouncement;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(button_button.z,{onClick:function onClick(){return addAnnouncement({heading:"Person Added"})},children:"Add"})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(button_button.z,{onClick:function onClick(){return clearAnnouncement()},children:"Clear"})})]})};return(0,jsx_runtime.jsxs)(PageAnnouncementProvider,{sessionKey:"person",children:[(0,jsx_runtime.jsx)(PageAnnouncement,{}),(0,jsx_runtime.jsx)(Action,{})]})};PageAnnouncementWithProvider.displayName="PageAnnouncementWithProvider",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <PageAnnouncement\n      heading="Person added"\n      description="More detail about the announcement."\n    />\n  );\n}'}},Base.parameters),PageAnnouncementWarning.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <PageAnnouncement\n      variant="warning"\n      heading="Payment unsuccessful"\n      description="More detail about the announcement."\n    />\n  );\n}'}},PageAnnouncementWarning.parameters),PageAnnouncementInfo.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <PageAnnouncement\n      variant="info"\n      heading="Info"\n      description="More detail about the announcement."\n    />\n  );\n}'}},PageAnnouncementInfo.parameters),PageAnnouncementWithProvider.parameters=Object.assign({storySource:{source:'() => {\n  const Action = () => {\n    const { addAnnouncement, clearAnnouncement } = usePageAnnouncement();\n    return (\n      <>\n        <div>\n          <Button onClick={() => addAnnouncement({ heading: "Person Added" })}>\n            Add\n          </Button>\n        </div>\n        <div>\n          <Button onClick={() => clearAnnouncement()}>Clear</Button>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <PageAnnouncementProvider sessionKey="person">\n      <PageAnnouncement />\n      <Action />\n    </PageAnnouncementProvider>\n  );\n}'}},PageAnnouncementWithProvider.parameters)},"./packages/react/src/components/pagination/pagination.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,PaginationCenterAligned:()=>PaginationCenterAligned,PaginationWithButtons:()=>PaginationWithButtons,PaginationWithoutSummary:()=>PaginationWithoutSummary,default:()=>pagination_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/pagination/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const pagination_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["className","variant"],_excluded2=["className","children"],_excluded3=["className"],_excluded4=["as","variant","active","className","children"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Pagination=(0,react.forwardRef)((function Pagination(_ref,ref){var _cn,className=_ref.className,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"base":_ref$variant,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)("nav",Object.assign({ref,className:classnames_default()(pagination_styles_module.lbhPagination,(_cn={},_cn[pagination_styles_module.lbhPaginationCenter]="center"===variant,_cn),className)},props))})),PaginationControls=(0,react.forwardRef)((function PaginationControls(_ref2,ref){var className=_ref2.className,children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded2);return(0,jsx_runtime.jsx)("ul",Object.assign({ref,className:classnames_default()(pagination_styles_module.lbhPaginationList,className)},props,{children:react.Children.map(children,(function(child){return child&&(0,jsx_runtime.jsx)("li",{className:pagination_styles_module.lbhPaginationItem,children:child})}))}))})),PaginationSummary=(0,react.forwardRef)((function PaginationSummary(_ref3,ref){var className=_ref3.className,props=_objectWithoutProperties(_ref3,_excluded3);return(0,jsx_runtime.jsx)("div",Object.assign({ref,className:classnames_default()(pagination_styles_module.lbhPaginationSummary,className)},props))})),PaginationButton=(0,react.forwardRef)((function PaginationButton(_ref4,ref){var _cn2,_ref4$as=_ref4.as,PaginationComp=void 0===_ref4$as?"a":_ref4$as,_ref4$variant=_ref4.variant,variant=void 0===_ref4$variant?"base":_ref4$variant,_ref4$active=_ref4.active,active=void 0!==_ref4$active&&_ref4$active,className=_ref4.className,children=_ref4.children,props=_objectWithoutProperties(_ref4,_excluded4);return(0,jsx_runtime.jsxs)(PaginationComp,Object.assign({ref,className:classnames_default()(pagination_styles_module.lbhPaginationLink,(_cn2={},_cn2[pagination_styles_module.lbhPaginationLinkNext]="next"===variant,_cn2[pagination_styles_module.lbhPaginationLinkCurrent]="base"===variant&&active,_cn2),className)},props,{children:["previous"===variant?(0,jsx_runtime.jsxs)("span",{"aria-hidden":"true",role:"presentation",children:["«"," "]}):null,children,"next"===variant?(0,jsx_runtime.jsxs)("span",{"aria-hidden":"true",role:"presentation",children:[" ","»"]}):null]}))}));try{Pagination.displayName="Pagination",Pagination.__docgenInfo={description:"",displayName:"Pagination",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"center"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/pagination/pagination.tsx#Pagination"]={docgenInfo:Pagination.__docgenInfo,name:"Pagination",path:"packages/react/src/components/pagination/pagination.tsx#Pagination"})}catch(__react_docgen_typescript_loader_error){}try{PaginationControls.displayName="PaginationControls",PaginationControls.__docgenInfo={description:"",displayName:"PaginationControls",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/pagination/pagination.tsx#PaginationControls"]={docgenInfo:PaginationControls.__docgenInfo,name:"PaginationControls",path:"packages/react/src/components/pagination/pagination.tsx#PaginationControls"})}catch(__react_docgen_typescript_loader_error){}try{PaginationSummary.displayName="PaginationSummary",PaginationSummary.__docgenInfo={description:"",displayName:"PaginationSummary",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/pagination/pagination.tsx#PaginationSummary"]={docgenInfo:PaginationSummary.__docgenInfo,name:"PaginationSummary",path:"packages/react/src/components/pagination/pagination.tsx#PaginationSummary"})}catch(__react_docgen_typescript_loader_error){}try{PaginationButton.displayName="PaginationButton",PaginationButton.__docgenInfo={description:"",displayName:"PaginationButton",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"next"'},{value:'"previous"'}]}},active:{defaultValue:{value:"false"},description:"",name:"active",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/pagination/pagination.tsx#PaginationButton"]={docgenInfo:PaginationButton.__docgenInfo,name:"PaginationButton",path:"packages/react/src/components/pagination/pagination.tsx#PaginationButton"})}catch(__react_docgen_typescript_loader_error){}const pagination_stories={title:"Pagination",component:Pagination};var Base=function Base(){return(0,jsx_runtime.jsxs)(Pagination,{children:[(0,jsx_runtime.jsx)(PaginationSummary,{children:"Showing 101—150 of 246 results"}),(0,jsx_runtime.jsxs)(PaginationControls,{children:[(0,jsx_runtime.jsx)(PaginationButton,{variant:"previous",href:"/2",children:"Previous"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/1",children:"1"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"2"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/3",active:!0,children:"3"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/4",children:"4"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/5",children:"5"}),(0,jsx_runtime.jsx)(PaginationButton,{variant:"next",href:"/4",children:"Next"})]})]})};Base.displayName="Base";var PaginationWithButtons=function PaginationWithButtons(){return(0,jsx_runtime.jsxs)(Pagination,{children:[(0,jsx_runtime.jsx)(PaginationSummary,{children:"Showing 101—150 of 246 results"}),(0,jsx_runtime.jsxs)(PaginationControls,{children:[(0,jsx_runtime.jsx)(PaginationButton,{as:"button",variant:"previous",children:"Previous"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"1"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"2"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",active:!0,children:"3"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"4"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"5"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",variant:"next",children:"Next"})]})]})};PaginationWithButtons.displayName="PaginationWithButtons";var PaginationWithoutSummary=function PaginationWithoutSummary(){return(0,jsx_runtime.jsx)(Pagination,{children:(0,jsx_runtime.jsxs)(PaginationControls,{children:[(0,jsx_runtime.jsx)(PaginationButton,{variant:"previous",href:"/2",children:"Previous"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/1",children:"1"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"2"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/3",active:!0,children:"3"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/4",children:"4"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/5",children:"5"}),(0,jsx_runtime.jsx)(PaginationButton,{variant:"next",href:"/4",children:"Next"})]})})};PaginationWithoutSummary.displayName="PaginationWithoutSummary";var PaginationCenterAligned=function PaginationCenterAligned(){return(0,jsx_runtime.jsx)(Pagination,{variant:"center",children:(0,jsx_runtime.jsxs)(PaginationControls,{children:[(0,jsx_runtime.jsx)(PaginationButton,{variant:"previous",href:"/2",children:"Previous"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/1",children:"1"}),(0,jsx_runtime.jsx)(PaginationButton,{as:"button",children:"2"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/3",active:!0,children:"3"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/4",children:"4"}),(0,jsx_runtime.jsx)(PaginationButton,{href:"/5",children:"5"}),(0,jsx_runtime.jsx)(PaginationButton,{variant:"next",href:"/4",children:"Next"})]})})};PaginationCenterAligned.displayName="PaginationCenterAligned",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Pagination>\n      <PaginationSummary>Showing 101—150 of 246 results</PaginationSummary>\n      <PaginationControls>\n        <PaginationButton variant="previous" href="/2">\n          Previous\n        </PaginationButton>\n        <PaginationButton href="/1">1</PaginationButton>\n        <PaginationButton as="button">2</PaginationButton>\n        <PaginationButton href="/3" active>\n          3\n        </PaginationButton>\n        <PaginationButton href="/4">4</PaginationButton>\n        <PaginationButton href="/5">5</PaginationButton>\n        <PaginationButton variant="next" href="/4">\n          Next\n        </PaginationButton>\n      </PaginationControls>\n    </Pagination>\n  );\n}'}},Base.parameters),PaginationWithButtons.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Pagination>\n      <PaginationSummary>Showing 101—150 of 246 results</PaginationSummary>\n      <PaginationControls>\n        <PaginationButton as="button" variant="previous">\n          Previous\n        </PaginationButton>\n        <PaginationButton as="button">1</PaginationButton>\n        <PaginationButton as="button">2</PaginationButton>\n        <PaginationButton as="button" active>\n          3\n        </PaginationButton>\n        <PaginationButton as="button">4</PaginationButton>\n        <PaginationButton as="button">5</PaginationButton>\n        <PaginationButton as="button" variant="next">\n          Next\n        </PaginationButton>\n      </PaginationControls>\n    </Pagination>\n  );\n}'}},PaginationWithButtons.parameters),PaginationWithoutSummary.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Pagination>\n      <PaginationControls>\n        <PaginationButton variant="previous" href="/2">\n          Previous\n        </PaginationButton>\n        <PaginationButton href="/1">1</PaginationButton>\n        <PaginationButton as="button">2</PaginationButton>\n        <PaginationButton href="/3" active>\n          3\n        </PaginationButton>\n        <PaginationButton href="/4">4</PaginationButton>\n        <PaginationButton href="/5">5</PaginationButton>\n        <PaginationButton variant="next" href="/4">\n          Next\n        </PaginationButton>\n      </PaginationControls>\n    </Pagination>\n  );\n}'}},PaginationWithoutSummary.parameters),PaginationCenterAligned.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <Pagination variant="center">\n      <PaginationControls>\n        <PaginationButton variant="previous" href="/2">\n          Previous\n        </PaginationButton>\n        <PaginationButton href="/1">1</PaginationButton>\n        <PaginationButton as="button">2</PaginationButton>\n        <PaginationButton href="/3" active>\n          3\n        </PaginationButton>\n        <PaginationButton href="/4">4</PaginationButton>\n        <PaginationButton href="/5">5</PaginationButton>\n        <PaginationButton variant="next" href="/4">\n          Next\n        </PaginationButton>\n      </PaginationControls>\n    </Pagination>\n  );\n}'}},PaginationCenterAligned.parameters)},"./packages/react/src/components/radios/radios.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,RadiosWithDivider:()=>RadiosWithDivider,RadiosWithConditional:()=>RadiosWithConditional});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _form_group__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/form-group/form-group.tsx"),_input__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/react/src/components/input/input.tsx"),_radios__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/radios/radios.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Radios",component:_radios__WEBPACK_IMPORTED_MODULE_3__.Y8};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radios__WEBPACK_IMPORTED_MODULE_3__.Ee,{name:"radio",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.Y8,{id:"radio-1",children:"Option 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.Y8,{id:"radio-2",children:"Option 2"})]})};Base.displayName="Base";var RadiosWithDivider=function RadiosWithDivider(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radios__WEBPACK_IMPORTED_MODULE_3__.Ee,{name:"radio",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.Y8,{id:"radio-1",children:"Option 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.bY,{children:"or"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.Y8,{id:"radio-2",children:"Option 2"})]})};RadiosWithDivider.displayName="RadiosWithDivider";var RadiosWithConditional=function RadiosWithConditional(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_radios__WEBPACK_IMPORTED_MODULE_3__.Ee,{name:"contact",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.Y8,{id:"radio-1","aria-controls":"email",children:"Email"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.$b,{id:"email",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_4__.c,{id:"input",label:"Email",name:"email",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_5__.I,{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.Y8,{id:"radio-2","aria-controls":"phone",children:"Phone"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_radios__WEBPACK_IMPORTED_MODULE_3__.$b,{id:"phone",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_4__.c,{id:"input",label:"Phone",name:"phone",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_input__WEBPACK_IMPORTED_MODULE_5__.I,{})})})]})};RadiosWithConditional.displayName="RadiosWithConditional",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <RadioGroup name="radio">\n      <Radio id="radio-1">Option 1</Radio>\n      <Radio id="radio-2">Option 2</Radio>\n    </RadioGroup>\n  );\n}'}},Base.parameters),RadiosWithDivider.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <RadioGroup name="radio">\n      <Radio id="radio-1">Option 1</Radio>\n      <RadioDivider>or</RadioDivider>\n      <Radio id="radio-2">Option 2</Radio>\n    </RadioGroup>\n  );\n}'}},RadiosWithDivider.parameters),RadiosWithConditional.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <RadioGroup name="contact">\n      <Radio id="radio-1" aria-controls="email">\n        Email\n      </Radio>\n      <RadioConditional id="email">\n        <FormGroup id="input" label="Email" name="email">\n          <Input />\n        </FormGroup>\n      </RadioConditional>\n      <Radio id="radio-2" aria-controls="phone">\n        Phone\n      </Radio>\n      <RadioConditional id="phone">\n        <FormGroup id="input" label="Phone" name="phone">\n          <Input />\n        </FormGroup>\n      </RadioConditional>\n    </RadioGroup>\n  );\n}'}},RadiosWithConditional.parameters)},"./packages/react/src/components/select/select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,SelectWithError:()=>SelectWithError,SelectWithOverride:()=>SelectWithOverride,default:()=>select_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/select/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const select_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["error","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Select=(0,react.forwardRef)((function Select(_ref,ref){var _classNames,error=_ref.error,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),selectClasses=classnames_default()(select_styles_module.govukSelect,select_styles_module.lbhSelect,((_classNames={})[select_styles_module.govukSelectError]=error,_classNames),(0,width_overrides.Z)(override),className);return(0,jsx_runtime.jsx)("select",Object.assign({ref,className:selectClasses},props))}));try{Select.displayName="Select",Select.__docgenInfo={description:"",displayName:"Select",props:{error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/select/select.tsx#Select"]={docgenInfo:Select.__docgenInfo,name:"Select",path:"packages/react/src/components/select/select.tsx#Select"})}catch(__react_docgen_typescript_loader_error){}const select_stories={title:"Select",component:Select};var Base=function Base(){return(0,jsx_runtime.jsxs)(Select,{children:[(0,jsx_runtime.jsx)("option",{children:"Option 1"}),(0,jsx_runtime.jsx)("option",{children:"Option 2"}),(0,jsx_runtime.jsx)("option",{children:"Option 3"})]})};Base.displayName="Base";var SelectWithError=function SelectWithError(){return(0,jsx_runtime.jsxs)(Select,{error:!0,children:[(0,jsx_runtime.jsx)("option",{children:"Option 1"}),(0,jsx_runtime.jsx)("option",{children:"Option 2"}),(0,jsx_runtime.jsx)("option",{children:"Option 3"})]})};SelectWithError.displayName="SelectWithError";var SelectWithOverride=function SelectWithOverride(){return(0,jsx_runtime.jsxs)(Select,{override:.5,children:[(0,jsx_runtime.jsx)("option",{children:"Option 1"}),(0,jsx_runtime.jsx)("option",{children:"Option 2"}),(0,jsx_runtime.jsx)("option",{children:"Option 3"})]})};SelectWithOverride.displayName="SelectWithOverride",Base.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <Select>\n      <option>Option 1</option>\n      <option>Option 2</option>\n      <option>Option 3</option>\n    </Select>\n  );\n}"}},Base.parameters),SelectWithError.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <Select error>\n      <option>Option 1</option>\n      <option>Option 2</option>\n      <option>Option 3</option>\n    </Select>\n  );\n}"}},SelectWithError.parameters),SelectWithOverride.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <Select override={1 / 2}>\n      <option>Option 1</option>\n      <option>Option 2</option>\n      <option>Option 3</option>\n    </Select>\n  );\n}"}},SelectWithOverride.parameters)},"./packages/react/src/components/simple-pagination/simple-pagination.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,PolymorphicSimplePaginationButton:()=>PolymorphicSimplePaginationButton,SimplePaginationWithSingleButton:()=>SimplePaginationWithSingleButton,default:()=>simple_pagination_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/simple-pagination/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const simple_pagination_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["className"],_excluded2=["as","variant","className","title","children"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var SimplePagination=(0,react.forwardRef)((function SimplePagination(_ref,ref){var className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)("nav",Object.assign({ref,className:classnames_default()(simple_pagination_styles_module.lbhSimplePagination,className)},props))})),SimplePaginationButton=(0,react.forwardRef)((function SimplePaginationButton(_ref2,ref){var _cn,_ref2$as=_ref2.as,SimplePaginationComp=void 0===_ref2$as?"a":_ref2$as,variant=_ref2.variant,className=_ref2.className,title=_ref2.title,children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded2);return(0,jsx_runtime.jsxs)(SimplePaginationComp,Object.assign({ref,className:classnames_default()(simple_pagination_styles_module.lbhSimplePaginationLink,(_cn={},_cn[simple_pagination_styles_module.lbhSimplePaginationLinkNext]="next"===variant,_cn),className)},props,{children:["previous"===variant?(0,jsx_runtime.jsx)("svg",{width:"11",height:"19",viewBox:"0 0 11 19",fill:"none",children:(0,jsx_runtime.jsx)("path",{d:"M10 1L2 9.5L10 18",strokeWidth:"2"})}):null,children,title?(0,jsx_runtime.jsx)("span",{className:simple_pagination_styles_module.lbhSimplePaginationTitle,children:title}):null,"next"===variant?(0,jsx_runtime.jsx)("svg",{width:"11",height:"19",viewBox:"0 0 11 19",fill:"none",children:(0,jsx_runtime.jsx)("path",{d:"M1 18L9 9.5L1 1",strokeWidth:"2"})}):null]}))}));try{SimplePagination.displayName="SimplePagination",SimplePagination.__docgenInfo={description:"",displayName:"SimplePagination",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/simple-pagination/simple-pagination.tsx#SimplePagination"]={docgenInfo:SimplePagination.__docgenInfo,name:"SimplePagination",path:"packages/react/src/components/simple-pagination/simple-pagination.tsx#SimplePagination"})}catch(__react_docgen_typescript_loader_error){}try{SimplePaginationButton.displayName="SimplePaginationButton",SimplePaginationButton.__docgenInfo={description:"",displayName:"SimplePaginationButton",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"enum",value:[{value:'"next"'},{value:'"previous"'}]}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/simple-pagination/simple-pagination.tsx#SimplePaginationButton"]={docgenInfo:SimplePaginationButton.__docgenInfo,name:"SimplePaginationButton",path:"packages/react/src/components/simple-pagination/simple-pagination.tsx#SimplePaginationButton"})}catch(__react_docgen_typescript_loader_error){}const simple_pagination_stories={title:"Simple Pagination",component:SimplePaginationButton};var Base=function Base(){return(0,jsx_runtime.jsxs)(SimplePagination,{children:[(0,jsx_runtime.jsx)(SimplePaginationButton,{title:"Blog Post 1",variant:"previous",children:"Previous"}),(0,jsx_runtime.jsx)(SimplePaginationButton,{title:"Blog Post 2",variant:"next",children:"Next"})]})};Base.displayName="Base";var SimplePaginationWithSingleButton=function SimplePaginationWithSingleButton(){return(0,jsx_runtime.jsx)(SimplePagination,{children:(0,jsx_runtime.jsx)(SimplePaginationButton,{variant:"next",children:"Next"})})};SimplePaginationWithSingleButton.displayName="SimplePaginationWithSingleButton";var PolymorphicSimplePaginationButton=function PolymorphicSimplePaginationButton(){return(0,jsx_runtime.jsxs)(SimplePagination,{children:[(0,jsx_runtime.jsx)(SimplePaginationButton,{as:"button",title:"Blog Post 1",variant:"previous",children:"Previous"}),(0,jsx_runtime.jsx)(SimplePaginationButton,{as:"button",title:"Blog Post 2",variant:"next",children:"Next"})]})};PolymorphicSimplePaginationButton.displayName="PolymorphicSimplePaginationButton",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SimplePagination>\n      <SimplePaginationButton title="Blog Post 1" variant="previous">\n        Previous\n      </SimplePaginationButton>\n      <SimplePaginationButton title="Blog Post 2" variant="next">\n        Next\n      </SimplePaginationButton>\n    </SimplePagination>\n  );\n}'}},Base.parameters),SimplePaginationWithSingleButton.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SimplePagination>\n      <SimplePaginationButton variant="next">Next</SimplePaginationButton>\n    </SimplePagination>\n  );\n}'}},SimplePaginationWithSingleButton.parameters),PolymorphicSimplePaginationButton.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SimplePagination>\n      <SimplePaginationButton as="button" title="Blog Post 1" variant="previous">\n        Previous\n      </SimplePaginationButton>\n      <SimplePaginationButton as="button" title="Blog Post 2" variant="next">\n        Next\n      </SimplePaginationButton>\n    </SimplePagination>\n  );\n}'}},PolymorphicSimplePaginationButton.parameters)},"./packages/react/src/components/summary-list/summary-list.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,SummaryListWithActions:()=>SummaryListWithActions,SummaryListWithBorder:()=>SummaryListWithBorder,SummaryListWithOverrides:()=>SummaryListWithOverrides,default:()=>summary_list_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),link_link=__webpack_require__("./packages/react/src/components/link/link.tsx"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.string.trim.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/summary-list/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const summary_list_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["title","actions","children","className","fallback","overrides"],_excluded2=["variant","className","overrides","children"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var SummaryListItem=(0,react.forwardRef)((function SummaryListItem(_ref,ref){var title=_ref.title,actions=_ref.actions,children=_ref.children,className=_ref.className,fallback=_ref.fallback,_ref$overrides=_ref.overrides,overrides=void 0===_ref$overrides?[]:_ref$overrides,props=_objectWithoutProperties(_ref,_excluded),value=(0,react.useMemo)((function(){return"string"==typeof children?children.trim():children}),[children]);return(0,jsx_runtime.jsxs)("div",Object.assign({ref,className:classnames_default()(summary_list_styles_module.govukSummaryListRow,className)},props,{children:[(0,jsx_runtime.jsx)("dt",{className:classnames_default()(summary_list_styles_module.govukSummaryListKey,(0,width_overrides.Z)(overrides[0])),children:title}),(0,jsx_runtime.jsx)("dd",{className:classnames_default()(summary_list_styles_module.govukSummaryListValue,(0,width_overrides.Z)(overrides[1])),children:value||fallback||"N/A"}),actions&&(0,jsx_runtime.jsx)("dd",{className:classnames_default()(summary_list_styles_module.govukSummaryListActions,(0,width_overrides.Z)(overrides[2])),children:(0,jsx_runtime.jsx)("ul",{className:summary_list_styles_module.govukSummaryListActionsList,children:react.Children.map(actions,(function(action){return(0,jsx_runtime.jsx)("li",{className:summary_list_styles_module.govukSummaryListActionsListItem,children:action},action.key)}))})})]}))})),SummaryList=(0,react.forwardRef)((function SummaryList(_ref2,ref){var _cn,_ref2$variant=_ref2.variant,variant=void 0===_ref2$variant?"base":_ref2$variant,className=_ref2.className,overrides=_ref2.overrides,children=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded2);return(0,jsx_runtime.jsx)("dl",Object.assign({ref,className:classnames_default()(summary_list_styles_module.govukSummaryList,(_cn={},_cn[summary_list_styles_module.govukSummaryListNoBorder]="border"!==variant,_cn),summary_list_styles_module.lbhSummaryList,className)},props,{children:react.Children.map(children,(function(child,index){return child&&(0,react.isValidElement)(child)&&(0,react.cloneElement)(child,{overrides:child.props.overrides||0!==index?child.props.overrides:overrides})}))}))}));try{SummaryListItem.displayName="SummaryListItem",SummaryListItem.__docgenInfo={description:"",displayName:"SummaryListItem",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},actions:{defaultValue:null,description:"",name:"actions",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | ReactElement<any, string | JSXElementConstructor<any>>[]"}},overrides:{defaultValue:{value:"[]"},description:"",name:"overrides",required:!1,type:{name:"number[]"}},fallback:{defaultValue:null,description:"",name:"fallback",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/summary-list/summary-list.tsx#SummaryListItem"]={docgenInfo:SummaryListItem.__docgenInfo,name:"SummaryListItem",path:"packages/react/src/components/summary-list/summary-list.tsx#SummaryListItem"})}catch(__react_docgen_typescript_loader_error){}try{SummaryList.displayName="SummaryList",SummaryList.__docgenInfo={description:"",displayName:"SummaryList",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"border"'}]}},overrides:{defaultValue:{value:"[]"},description:"",name:"overrides",required:!1,type:{name:"number[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/summary-list/summary-list.tsx#SummaryList"]={docgenInfo:SummaryList.__docgenInfo,name:"SummaryList",path:"packages/react/src/components/summary-list/summary-list.tsx#SummaryList"})}catch(__react_docgen_typescript_loader_error){}const summary_list_stories={title:"Summary List",component:SummaryList};var Base=function Base(){return(0,jsx_runtime.jsxs)(SummaryList,{children:[(0,jsx_runtime.jsx)(SummaryListItem,{title:"Name",children:"John Smith"}),(0,jsx_runtime.jsx)(SummaryListItem,{title:"Date of birth",children:"12/08/1980"})]})};Base.displayName="Base";var SummaryListWithBorder=function SummaryListWithBorder(){return(0,jsx_runtime.jsxs)(SummaryList,{variant:"border",children:[(0,jsx_runtime.jsx)(SummaryListItem,{title:"Name",children:"John Smith"}),(0,jsx_runtime.jsx)(SummaryListItem,{title:"Date of birth",children:"12/08/1980"})]})};SummaryListWithBorder.displayName="SummaryListWithBorder";var SummaryListWithActions=function SummaryListWithActions(){return(0,jsx_runtime.jsxs)(SummaryList,{variant:"border",overrides:[.5,.5],children:[(0,jsx_runtime.jsx)(SummaryListItem,{title:"Name",actions:[(0,jsx_runtime.jsx)(link_link.r,{href:"/edit",children:"Edit"}),(0,jsx_runtime.jsx)(link_link.r,{as:"button",children:"Delete"})],children:"John Smith"}),(0,jsx_runtime.jsx)(SummaryListItem,{title:"Date of birth",actions:[(0,jsx_runtime.jsx)(link_link.r,{href:"/edit",children:"Edit"}),(0,jsx_runtime.jsx)(link_link.r,{as:"button",children:"Delete"})],children:"12/08/1980"})]})};SummaryListWithActions.displayName="SummaryListWithActions";var SummaryListWithOverrides=function SummaryListWithOverrides(){return(0,jsx_runtime.jsxs)(SummaryList,{variant:"border",overrides:[.5,.5],children:[(0,jsx_runtime.jsx)(SummaryListItem,{title:"Name",children:"John Smith"}),(0,jsx_runtime.jsx)(SummaryListItem,{title:"Date of birth",children:"12/08/1980"})]})};SummaryListWithOverrides.displayName="SummaryListWithOverrides",Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SummaryList>\n      <SummaryListItem title="Name">John Smith</SummaryListItem>\n      <SummaryListItem title="Date of birth">12/08/1980</SummaryListItem>\n    </SummaryList>\n  );\n}'}},Base.parameters),SummaryListWithBorder.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SummaryList variant="border">\n      <SummaryListItem title="Name">John Smith</SummaryListItem>\n      <SummaryListItem title="Date of birth">12/08/1980</SummaryListItem>\n    </SummaryList>\n  );\n}'}},SummaryListWithBorder.parameters),SummaryListWithActions.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SummaryList variant="border" overrides={[1 / 2, 1 / 2]}>\n      <SummaryListItem\n        title="Name"\n        actions={[<Link href="/edit">Edit</Link>, <Link as="button">Delete</Link>]}\n      >\n        John Smith\n      </SummaryListItem>\n      <SummaryListItem\n        title="Date of birth"\n        actions={[<Link href="/edit">Edit</Link>, <Link as="button">Delete</Link>]}\n      >\n        12/08/1980\n      </SummaryListItem>\n    </SummaryList>\n  );\n}'}},SummaryListWithActions.parameters),SummaryListWithOverrides.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <SummaryList variant="border" overrides={[1 / 2, 1 / 2]}>\n      <SummaryListItem title="Name">John Smith</SummaryListItem>\n      <SummaryListItem title="Date of birth">12/08/1980</SummaryListItem>\n    </SummaryList>\n  );\n}'}},SummaryListWithOverrides.parameters)},"./packages/react/src/components/text-area/text-area.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Base:()=>Base,TextareaWithCharacterCount:()=>TextareaWithCharacterCount,default:()=>text_area_stories});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),form_group=__webpack_require__("./packages/react/src/components/form-group/form-group.tsx"),classnames=(__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts");const pluralize=function(word,value){return word+(1!==Math.abs(value)?"s":"")};var error_message=__webpack_require__("./packages/react/src/components/error-message/error-message.tsx"),hint=__webpack_require__("./packages/react/src/components/hint/hint.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/text-area/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const text_area_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["maxLength","error","className","onChange","override"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var getLengthOfValue=function getLengthOfValue(initialValue){return"string"==typeof initialValue?initialValue.length:Array.isArray(initialValue)?initialValue.join(",").length:String(initialValue||"").length},TextArea=(0,react.forwardRef)((function TextArea(_ref,ref){var _classNames,maxLength=_ref.maxLength,error=_ref.error,className=_ref.className,onChange=_ref.onChange,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),value=props.value,defaultValue=props.defaultValue,isControlled=void 0!==value,initialValue=value||defaultValue,_useState2=_slicedToArray((0,react.useState)(getLengthOfValue(initialValue)),2),characterCount=_useState2[0],setCharacterCount=_useState2[1],onChangeHandler=(0,react.useCallback)((function(event){var _event$currentTarget;void 0===(null==event||null===(_event$currentTarget=event.currentTarget)||void 0===_event$currentTarget?void 0:_event$currentTarget.value)||isControlled||void 0===maxLength||setCharacterCount(String(event.currentTarget.value).length),"function"==typeof onChange&&onChange(event)}),[onChange,maxLength,isControlled]),exceedingValue=(0,react.useMemo)((function(){return void 0!==maxLength&&maxLength-(isControlled?getLengthOfValue(value):characterCount)}),[maxLength,characterCount,value,isControlled]),textareaClasses=classnames_default()(text_area_styles_module.govukTextarea,text_area_styles_module.lbhTextarea,((_classNames={})[text_area_styles_module.govukTextareaError]=error,_classNames),text_area_styles_module.govukCharacterCount,text_area_styles_module.lbhCharacterCount,(0,width_overrides.Z)(override),className),messageClasses=classnames_default()(text_area_styles_module.govukCharacterCountMessage,(0,width_overrides.Z)(override)),component=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("textarea",Object.assign({ref,className:textareaClasses,onChange:onChangeHandler},props)),void 0!==maxLength&&!1!==exceedingValue&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:exceedingValue>=0?(0,jsx_runtime.jsxs)(hint.k,{className:messageClasses,"aria-live":"polite",children:["You have ",exceedingValue," ",pluralize("character",exceedingValue)," remaining"]}):(0,jsx_runtime.jsxs)(error_message.B,{className:messageClasses,"aria-live":"polite",children:["You have ",Math.abs(exceedingValue)," ",pluralize("character",exceedingValue)," ","too many"]})})]});return void 0!==maxLength?(0,jsx_runtime.jsx)("div",{className:text_area_styles_module.govukCharacterCount,children:component}):component}));try{TextArea.displayName="TextArea",TextArea.__docgenInfo={description:"",displayName:"TextArea",props:{maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/text-area/text-area.tsx#TextArea"]={docgenInfo:TextArea.__docgenInfo,name:"TextArea",path:"packages/react/src/components/text-area/text-area.tsx#TextArea"})}catch(__react_docgen_typescript_loader_error){}const text_area_stories={title:"Textarea",component:TextArea};var Base=function Base(){return(0,jsx_runtime.jsx)(TextArea,{rows:5})};Base.displayName="Base";var TextareaWithCharacterCount=function TextareaWithCharacterCount(){return(0,jsx_runtime.jsx)(form_group.c,{id:"count",label:"Comment",children:(0,jsx_runtime.jsx)(TextArea,{maxLength:200})})};TextareaWithCharacterCount.displayName="TextareaWithCharacterCount",Base.parameters=Object.assign({storySource:{source:"() => {\n  return <TextArea rows={5} />;\n}"}},Base.parameters),TextareaWithCharacterCount.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <FormGroup id="count" label="Comment">\n      <TextArea maxLength={200} />\n    </FormGroup>\n  );\n}'}},TextareaWithCharacterCount.parameters)},"./packages/react/src/components/text/text.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base,PolymorphicText:()=>PolymorphicText});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _text__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/text/text.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Text",component:_text__WEBPACK_IMPORTED_MODULE_3__.x};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_text__WEBPACK_IMPORTED_MODULE_3__.x,{variant:"lg",children:"Lorem ipsum dolor sit amet"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_text__WEBPACK_IMPORTED_MODULE_3__.x,{children:"Lorem ipsum dolor sit amet"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_text__WEBPACK_IMPORTED_MODULE_3__.x,{variant:"sm",children:"Lorem ipsum dolor sit amet"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_text__WEBPACK_IMPORTED_MODULE_3__.x,{variant:"xs",children:"Lorem ipsum dolor sit amet"})]})},PolymorphicText=function PolymorphicText(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_text__WEBPACK_IMPORTED_MODULE_3__.x,{children:["Inline component"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_text__WEBPACK_IMPORTED_MODULE_3__.x,{as:"span",variant:"lg",children:"as span"})]})})};Base.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <>\n      <Text variant="lg">Lorem ipsum dolor sit amet</Text>\n      <Text>Lorem ipsum dolor sit amet</Text>\n      <Text variant="sm">Lorem ipsum dolor sit amet</Text>\n      <Text variant="xs">Lorem ipsum dolor sit amet</Text>\n    </>\n  );\n}'}},Base.parameters),PolymorphicText.parameters=Object.assign({storySource:{source:'() => {\n  return (\n    <>\n      <Text>\n        Inline component{" "}\n        <Text as="span" variant="lg">\n          as span\n        </Text>\n      </Text>\n    </>\n  );\n}'}},PolymorphicText.parameters)},"./packages/react/src/components/visually-hidden/visually-hidden.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,Base:()=>Base});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _text__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/react/src/components/text/text.tsx"),_visually_hidden__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/visually-hidden/visually-hidden.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Visually Hidden",component:_visually_hidden__WEBPACK_IMPORTED_MODULE_3__.T};var Base=function Base(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_text__WEBPACK_IMPORTED_MODULE_4__.x,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_visually_hidden__WEBPACK_IMPORTED_MODULE_3__.T,{children:"Error: "}),"Something has gone wrong"]})};Base.displayName="Base",Base.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <Text>\n      <VisuallyHidden>Error: </VisuallyHidden>Something has gone wrong\n    </Text>\n  );\n}"}},Base.parameters)},"./packages/react/src/components/button/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>Button});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/button/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const button_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","variant","isLoading","loadingText","isDisabled","children","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Button=(0,react.forwardRef)((function Button(_ref,ref){var _cn,_ref$as=_ref.as,ButtonComp=void 0===_ref$as?"button":_ref$as,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"primary":_ref$variant,_ref$isLoading=_ref.isLoading,isLoading=void 0!==_ref$isLoading&&_ref$isLoading,loadingText=_ref.loadingText,isDisabled=_ref.isDisabled,children=_ref.children,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),buttonClasses=classnames_default()(button_styles_module.govukButton,button_styles_module.lbhButton,((_cn={})[button_styles_module.govukButtonSecondary+" "+button_styles_module.lbhButtonSecondary]="secondary"===variant,_cn[button_styles_module.govukButtonDisabled+" "+button_styles_module.lbhButtonDisabled]=isDisabled,_cn),(0,width_overrides.Z)(override),className),disabled=isDisabled||isLoading||void 0;return(0,jsx_runtime.jsxs)(ButtonComp,Object.assign({ref,className:buttonClasses,type:"button"===ButtonComp?"button":void 0,disabled:"button"===ButtonComp?disabled:void 0,"aria-disabled":disabled},props,{children:[isLoading&&(0,jsx_runtime.jsx)("span",{className:button_styles_module.buttonLoadingIndicator,children:(0,jsx_runtime.jsx)("span",{children:"Loading..."})}),isLoading&&loadingText?loadingText:children]}))}));try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{variant:{defaultValue:{value:"primary"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},isLoading:{defaultValue:{value:"false"},description:"",name:"isLoading",required:!1,type:{name:"boolean"}},isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean"}},loadingText:{defaultValue:null,description:"",name:"loadingText",required:!1,type:{name:"string"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/button/button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"packages/react/src/components/button/button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/center/center.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{M:()=>Center});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/center/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const center_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","horizontally","vertically","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Center=(0,react.forwardRef)((function Center(_ref,ref){var _cn,_ref$as=_ref.as,CenterComp=void 0===_ref$as?"div":_ref$as,_ref$horizontally=_ref.horizontally,horizontally=void 0===_ref$horizontally||_ref$horizontally,_ref$vertically=_ref.vertically,vertically=void 0===_ref$vertically||_ref$vertically,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(CenterComp,Object.assign({ref,className:classnames_default()(center_styles_module.center,(_cn={},_cn[center_styles_module.centerHorizontal]=horizontally,_cn[center_styles_module.centerVertical]=vertically,_cn),(0,width_overrides.Z)(override),className)},props))}));try{Center.displayName="Center",Center.__docgenInfo={description:"",displayName:"Center",props:{horizontally:{defaultValue:{value:"true"},description:"",name:"horizontally",required:!1,type:{name:"boolean"}},vertically:{defaultValue:{value:"true"},description:"",name:"vertically",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/center/center.tsx#Center"]={docgenInfo:Center.__docgenInfo,name:"Center",path:"packages/react/src/components/center/center.tsx#Center"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/date-input/date-input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>DateInput});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),label=__webpack_require__("./packages/react/src/components/label/label.tsx"),number_input=__webpack_require__("./packages/react/src/components/number-input/number-input.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/date-input/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const date_input_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["id","dayProps","monthProps","yearProps","dayLabel","monthLabel","yearLabel","error","required","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var DateInput=(0,react.forwardRef)((function DateInput(_ref,ref){var _ref$id=_ref.id,id=void 0===_ref$id?"date-input":_ref$id,dayProps=_ref.dayProps,monthProps=_ref.monthProps,yearProps=_ref.yearProps,_ref$dayLabel=_ref.dayLabel,dayLabel=void 0===_ref$dayLabel?"Day":_ref$dayLabel,_ref$monthLabel=_ref.monthLabel,monthLabel=void 0===_ref$monthLabel?"Month":_ref$monthLabel,_ref$yearLabel=_ref.yearLabel,yearLabel=void 0===_ref$yearLabel?"Year":_ref$yearLabel,required=(_ref.error,_ref.required),className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsxs)("div",Object.assign({ref,className:classnames_default()(date_input_styles_module.govukDateInput,date_input_styles_module.lbhDateInput,className)},props,{children:[(0,jsx_runtime.jsxs)("div",{className:date_input_styles_module.govukDateInputItem,children:[(0,jsx_runtime.jsx)(label._,{htmlFor:id+"-day",children:dayLabel}),(0,jsx_runtime.jsx)(number_input.Y,Object.assign({id:id+"-day",className:classnames_default()(date_input_styles_module.govukDateInputInput,date_input_styles_module.govukInputWidth2),name:"day",required,maxLength:2,min:1,max:31,padStart:2},dayProps))]}),(0,jsx_runtime.jsxs)("div",{className:date_input_styles_module.govukDateInputItem,children:[(0,jsx_runtime.jsx)(label._,{htmlFor:id+"-month",children:monthLabel}),(0,jsx_runtime.jsx)(number_input.Y,Object.assign({id:id+"-month",className:classnames_default()(date_input_styles_module.govukDateInputInput,date_input_styles_module.govukInputWidth2),name:"month",required,maxLength:2,min:1,max:12,padStart:2},monthProps))]}),(0,jsx_runtime.jsxs)("div",{className:date_input_styles_module.govukDateInputItem,children:[(0,jsx_runtime.jsx)(label._,{htmlFor:id+"-year",children:yearLabel}),(0,jsx_runtime.jsx)(number_input.Y,Object.assign({id:id+"-year",className:classnames_default()(date_input_styles_module.govukDateInputInput,date_input_styles_module.govukInputWidth4),name:"year",required,maxLength:4,padStart:4},yearProps))]})]}))}));try{DateInput.displayName="DateInput",DateInput.__docgenInfo={description:"",displayName:"DateInput",props:{id:{defaultValue:{value:"date-input"},description:"",name:"id",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},dayProps:{defaultValue:null,description:"",name:"dayProps",required:!1,type:{name:"NumberInputProps"}},monthProps:{defaultValue:null,description:"",name:"monthProps",required:!1,type:{name:"NumberInputProps"}},yearProps:{defaultValue:null,description:"",name:"yearProps",required:!1,type:{name:"NumberInputProps"}},dayLabel:{defaultValue:{value:"Day"},description:"",name:"dayLabel",required:!1,type:{name:"string"}},monthLabel:{defaultValue:{value:"Month"},description:"",name:"monthLabel",required:!1,type:{name:"string"}},yearLabel:{defaultValue:{value:"Year"},description:"",name:"yearLabel",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/date-input/date-input.tsx#DateInput"]={docgenInfo:DateInput.__docgenInfo,name:"DateInput",path:"packages/react/src/components/date-input/date-input.tsx#DateInput"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/error-message/error-message.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{B:()=>ErrorMessage});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),visually_hidden=__webpack_require__("./packages/react/src/components/visually-hidden/visually-hidden.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/error-message/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const error_message_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","assistiveText","className","children"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ErrorMessage=(0,react.forwardRef)((function ErrorMessage(_ref,ref){var _ref$as=_ref.as,ErrorMessageComp=void 0===_ref$as?"span":_ref$as,_ref$assistiveText=_ref.assistiveText,assistiveText=void 0===_ref$assistiveText?"Error":_ref$assistiveText,className=_ref.className,children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsxs)(ErrorMessageComp,Object.assign({ref,className:classnames_default()(error_message_styles_module.govukErrorMessage,error_message_styles_module.lbhErrorMessage,className)},props,{children:[assistiveText&&(0,jsx_runtime.jsxs)(visually_hidden.T,{children:[assistiveText,":"]}),children]}))}));try{ErrorMessage.displayName="ErrorMessage",ErrorMessage.__docgenInfo={description:"",displayName:"ErrorMessage",props:{assistiveText:{defaultValue:{value:"Error"},description:"",name:"assistiveText",required:!1,type:{name:"string"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/error-message/error-message.tsx#ErrorMessage"]={docgenInfo:ErrorMessage.__docgenInfo,name:"ErrorMessage",path:"packages/react/src/components/error-message/error-message.tsx#ErrorMessage"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/field/field.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{gN:()=>Field,_9:()=>InlineField,Nn:()=>DateField});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/react/index.js"),formik__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),_date_input__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./packages/react/src/components/date-input/date-input.tsx"),_form_group__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./packages/react/src/components/form-group/form-group.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["id","label","children","name","type"],_excluded2=["children","name","type"],_excluded3=["name"],_excluded4=["name"],_excluded5=["name"],_excluded6=["dayProps","monthProps","yearProps"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Field=function Field(_ref){var id=_ref.id,label=_ref.label,children=_ref.children,name=_ref.name,type=_ref.type,props=_objectWithoutProperties(_ref,_excluded),_useField2=_slicedToArray((0,formik__WEBPACK_IMPORTED_MODULE_15__.U$)({name,type,value:children.props.value}),2),field=_useField2[0],meta=_useField2[1],comp="checkbox"===type||"radio"===type?"fieldset":"div";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_17__.c,Object.assign({as:comp,id,label,error:meta.error},props,{children:(0,react__WEBPACK_IMPORTED_MODULE_14__.cloneElement)(children,Object.assign({},field))}))};Field.displayName="Field";var InlineField=function InlineField(_ref2){var children=_ref2.children,name=_ref2.name,type=_ref2.type,props=_objectWithoutProperties(_ref2,_excluded2),_useField4=_slicedToArray((0,formik__WEBPACK_IMPORTED_MODULE_15__.U$)({name,type,value:children.props.value}),2),field=_useField4[0],meta=_useField4[1];return(0,react__WEBPACK_IMPORTED_MODULE_14__.cloneElement)(children,Object.assign({},field,props,{error:meta.error}))},DateField=function DateField(_ref3){var _ref3$dayProps=_ref3.dayProps,dayName=_ref3$dayProps.name,dayProps=_objectWithoutProperties(_ref3$dayProps,_excluded3),_ref3$monthProps=_ref3.monthProps,monthName=_ref3$monthProps.name,monthProps=_objectWithoutProperties(_ref3$monthProps,_excluded4),_ref3$yearProps=_ref3.yearProps,yearName=_ref3$yearProps.name,yearProps=_objectWithoutProperties(_ref3$yearProps,_excluded5),props=_objectWithoutProperties(_ref3,_excluded6),_useField6=_slicedToArray((0,formik__WEBPACK_IMPORTED_MODULE_15__.U$)(dayName),2),dayField=_useField6[0],dayMeta=_useField6[1],_useField8=_slicedToArray((0,formik__WEBPACK_IMPORTED_MODULE_15__.U$)(monthName),2),monthField=_useField8[0],monthMeta=_useField8[1],_useField10=_slicedToArray((0,formik__WEBPACK_IMPORTED_MODULE_15__.U$)(yearName),2),yearField=_useField10[0],yearMeta=_useField10[1],error=dayMeta.error||monthMeta.error||yearMeta.error;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(_form_group__WEBPACK_IMPORTED_MODULE_17__.c,Object.assign({as:"fieldset",error},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx)(_date_input__WEBPACK_IMPORTED_MODULE_18__.W,{dayProps:Object.assign({},dayField,dayProps,{error:!!dayMeta.error}),monthProps:Object.assign({},monthField,monthProps,{error:!!monthMeta.error}),yearProps:Object.assign({},yearField,yearProps,{error:!!yearMeta.error})})}))};DateField.displayName="DateField";try{Field.displayName="Field",Field.__docgenInfo={description:"",displayName:"Field",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'},{value:'"checkbox"'},{value:'"radio"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/field/field.tsx#Field"]={docgenInfo:Field.__docgenInfo,name:"Field",path:"packages/react/src/components/field/field.tsx#Field"})}catch(__react_docgen_typescript_loader_error){}try{InlineField.displayName="InlineField",InlineField.__docgenInfo={description:"",displayName:"InlineField",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'},{value:'"checkbox"'},{value:'"radio"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/field/field.tsx#InlineField"]={docgenInfo:InlineField.__docgenInfo,name:"InlineField",path:"packages/react/src/components/field/field.tsx#InlineField"})}catch(__react_docgen_typescript_loader_error){}try{DateField.displayName="DateField",DateField.__docgenInfo={description:"",displayName:"DateField",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},dayProps:{defaultValue:null,description:"",name:"dayProps",required:!0,type:{name:"DateInputFieldProps"}},monthProps:{defaultValue:null,description:"",name:"monthProps",required:!0,type:{name:"DateInputFieldProps"}},yearProps:{defaultValue:null,description:"",name:"yearProps",required:!0,type:{name:"DateInputFieldProps"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/field/field.tsx#DateField"]={docgenInfo:DateField.__docgenInfo,name:"DateField",path:"packages/react/src/components/field/field.tsx#DateField"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/form-group/form-group.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>FormGroup});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),error_message=__webpack_require__("./packages/react/src/components/error-message/error-message.tsx"),hint_hint=__webpack_require__("./packages/react/src/components/hint/hint.tsx"),label_label=__webpack_require__("./packages/react/src/components/label/label.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/form-group/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const form_group_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","id","name","label","hint","error","required","children","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var FormGroup=(0,react.forwardRef)((function FormGroup(_ref,ref){var _classNames,_ref$as=_ref.as,FormGroupComp=void 0===_ref$as?"div":_ref$as,id=_ref.id,name=_ref.name,label=_ref.label,hint=_ref.hint,error=_ref.error,required=_ref.required,children=_ref.children,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),formGroupClasses=classnames_default()(form_group_styles_module.govukFormGroup,((_classNames={})[form_group_styles_module.govukFormGroupError]=!!error,_classNames),form_group_styles_module.lbhFormGroup,(0,width_overrides.Z)(override),className),describedBy=(0,react.useMemo)((function(){var ids=[];return hint&&ids.push(id+"-hint"),error&&ids.push(id+"-error"),ids.join(" ")||void 0}),[id,hint,error]),labelComp="string"==typeof FormGroupComp&&"fieldset"===FormGroupComp?"legend":"label";return(0,jsx_runtime.jsxs)(FormGroupComp,Object.assign({ref,id,className:formGroupClasses,"aria-describedby":"legend"===labelComp?describedBy:void 0},props,{children:[!!label&&(0,jsx_runtime.jsxs)(label_label._,{as:labelComp,htmlFor:"label"===labelComp?id+"-field":void 0,children:[label,required?(0,jsx_runtime.jsx)("sup",{"aria-hidden":"true",children:"*"}):""]}),!!hint&&(0,jsx_runtime.jsx)(hint_hint.k,{id:id+"-hint",children:hint}),!!error&&(0,jsx_runtime.jsx)(error_message.B,{id:id+"-error",children:error}),!!children&&react.Children.only((0,react.cloneElement)(children,Object.assign({id:id+"-field",name,required,error:!!error,"aria-describedby":"label"===labelComp?describedBy:void 0},children.props)))]}))}));try{FormGroup.displayName="FormGroup",FormGroup.__docgenInfo={description:"",displayName:"FormGroup",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string | false"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/form-group/form-group.tsx#FormGroup"]={docgenInfo:FormGroup.__docgenInfo,name:"FormGroup",path:"packages/react/src/components/form-group/form-group.tsx#FormGroup"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/heading/heading.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{X:()=>Heading});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/heading/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const heading_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","variant","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Heading=(0,react.forwardRef)((function Heading(_ref,ref){var HeadingComp=_ref.as,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"h1":_ref$variant,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded),Comp=HeadingComp||variant;return(0,jsx_runtime.jsx)(Comp,Object.assign({ref,className:classnames_default()(heading_styles_module["lbh-heading-"+variant],className)},props))}));try{Heading.displayName="Heading",Heading.__docgenInfo={description:"",displayName:"Heading",props:{variant:{defaultValue:{value:"h1"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'}]}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/heading/heading.tsx#Heading"]={docgenInfo:Heading.__docgenInfo,name:"Heading",path:"packages/react/src/components/heading/heading.tsx#Heading"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/hint/hint.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>Hint});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/hint/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const hint_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Hint=(0,react.forwardRef)((function Hint(_ref,ref){var _ref$as=_ref.as,HintComp=void 0===_ref$as?"span":_ref$as,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(HintComp,Object.assign({ref,className:classnames_default()(hint_styles_module.govukHint,hint_styles_module.lbhHint,className)},props))}));try{Hint.displayName="Hint",Hint.__docgenInfo={description:"",displayName:"Hint",props:{as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/hint/hint.tsx#Hint"]={docgenInfo:Hint.__docgenInfo,name:"Hint",path:"packages/react/src/components/hint/hint.tsx#Hint"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/input/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{I:()=>Input});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/input/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const input_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["error","className","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Input=(0,react.forwardRef)((function Input(_ref,ref){var _classNames,error=_ref.error,className=_ref.className,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),inputClasses=classnames_default()(input_styles_module.govukInput,input_styles_module.lbhInput,((_classNames={})[input_styles_module.govukInputError]=error,_classNames),(0,width_overrides.Z)(override),className);return(0,jsx_runtime.jsx)("input",Object.assign({ref,className:inputClasses},props))}));try{Input.displayName="Input",Input.__docgenInfo={description:"",displayName:"Input",props:{error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/input/input.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"packages/react/src/components/input/input.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/label/label.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{_:()=>Label});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/label/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const label_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","variant","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Label=(0,react.forwardRef)((function Label(_ref,ref){var _cn,_ref$as=_ref.as,LabelComp=void 0===_ref$as?"label":_ref$as,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"base":_ref$variant,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(LabelComp,Object.assign({ref,className:classnames_default()(label_styles_module.govukLabel,(_cn={},_cn[label_styles_module.govukLabelS]="sm"===variant,_cn[label_styles_module.govukLabelM]="md"===variant,_cn[label_styles_module.govukLabelL]="lg"===variant,_cn[label_styles_module.govukLabelXL]="xl"===variant,_cn),label_styles_module.lbhLabel,className)},props))}));try{Label.displayName="Label",Label.__docgenInfo={description:"",displayName:"Label",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/label/label.tsx#Label"]={docgenInfo:Label.__docgenInfo,name:"Label",path:"packages/react/src/components/label/label.tsx#Label"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/link/link.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>Link});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),width_overrides=__webpack_require__("./packages/react/src/utils/width-overrides/width-overrides.ts"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/link/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const link_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","variant","isExternal","className","rel","target","override"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Link=(0,react.forwardRef)((function Link(_ref,ref){var _ref2,_ref$as=_ref.as,LinkComp=void 0===_ref$as?"a":_ref$as,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"link":_ref$variant,_ref$isExternal=_ref.isExternal,isExternal=void 0!==_ref$isExternal&&_ref$isExternal,className=_ref.className,rel=_ref.rel,target=_ref.target,override=_ref.override,props=_objectWithoutProperties(_ref,_excluded),linkClasses=classnames_default()("native"!==variant&&((_ref2={})[link_styles_module.govukLink+" "+link_styles_module.lbhLink]="back-link"!==variant,_ref2[link_styles_module.govukBackLink+" "+link_styles_module.lbhBackLink]="back-link"===variant,_ref2[link_styles_module["lbh-link--"+variant]]="link"!==variant&&"back-link"!==variant,_ref2[link_styles_module.lbhLinkNoVisitedState]=!isExternal&&!["danger","muted","text-colour"].includes(variant),_ref2),(0,width_overrides.Z)(override),className);return(0,jsx_runtime.jsx)(LinkComp,Object.assign({ref,className:linkClasses,rel:isExternal?"noopener noreferrer":rel,target:isExternal?"_blank":target},props))}));try{Link.displayName="Link",Link.__docgenInfo={description:"",displayName:"Link",props:{variant:{defaultValue:{value:"link"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"muted"'},{value:'"danger"'},{value:'"text-colour"'},{value:'"back-link"'},{value:'"no-underline"'},{value:'"native"'}]}},isExternal:{defaultValue:{value:"false"},description:"",name:"isExternal",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/link/link.tsx#Link"]={docgenInfo:Link.__docgenInfo,name:"Link",path:"packages/react/src/components/link/link.tsx#Link"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/list/list.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{a:()=>List});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/list/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const list_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","variant","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var List=(0,react.forwardRef)((function List(_ref,ref){var _cn,_ref$as=_ref.as,ListComp=void 0===_ref$as?"ul":_ref$as,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"base":_ref$variant,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(ListComp,Object.assign({ref,className:classnames_default()(list_styles_module.lbhList,(_cn={},_cn[list_styles_module.lbhListBullet]="bullet"===variant,_cn[list_styles_module.lbhListNumber]="number"===variant,_cn),className)},props))}));try{List.displayName="List",List.__docgenInfo={description:"",displayName:"List",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"base"'},{value:'"bullet"'}]}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/list/list.tsx#List"]={docgenInfo:List.__docgenInfo,name:"List",path:"packages/react/src/components/list/list.tsx#List"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/number-input/number-input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Y:()=>NumberInput});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.pad-start.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.parse-int.js"),__webpack_require__("./node_modules/core-js/modules/es.number.is-nan.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/react/index.js"),_input__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__("./packages/react/src/components/input/input.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["onChange","onBlur","min","max","value","defaultValue","maxLength","padStart","type"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var NumberInput=(0,react__WEBPACK_IMPORTED_MODULE_20__.forwardRef)((function NumberInput(_ref,ref){var _ref2,_onChange=_ref.onChange,_onBlur=_ref.onBlur,min=_ref.min,max=_ref.max,value=_ref.value,defaultValue=_ref.defaultValue,maxLength=_ref.maxLength,_ref$padStart=_ref.padStart,padStart=void 0===_ref$padStart?0:_ref$padStart,_ref$type=_ref.type,type=void 0===_ref$type?"number":_ref$type,props=_objectWithoutProperties(_ref,_excluded),parser=(0,react__WEBPACK_IMPORTED_MODULE_20__.useCallback)((function(num){var numString=String(num).replace(/[^\d]+/g,"");return void 0!==maxLength&&maxLength<numString.length&&(numString=numString.slice(0,maxLength)),numString}),[maxLength]),formatter=(0,react__WEBPACK_IMPORTED_MODULE_20__.useCallback)((function(num){if(""===num)return"";var numInt=parseInt(String(num),10);return void 0!==max&&numInt>max&&(numInt=max),void 0!==min&&numInt<min&&(numInt=min),String(numInt).padStart(padStart,"0")}),[min,max,padStart]),_useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_20__.useState)(parser(null!==(_ref2=null!=defaultValue?defaultValue:value)&&void 0!==_ref2?_ref2:"")),2),output=_useState2[0],setOutput=_useState2[1],outputInt=(0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)((function(){var target=parseInt(output,10);return Number.isNaN(target)?void 0:target}),[output]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_21__.jsx)(_input__WEBPACK_IMPORTED_MODULE_22__.I,Object.assign({ref,role:"spinbutton",type,"aria-valuemin":min,"aria-valuemax":max,"aria-valuenow":outputInt,"aria-valuetext":output||void 0,value:output,onChange:function onChange(e){var update=parser(e.target.value);e.target.value=update,e.currentTarget.value=update,setOutput(update),_onChange&&_onChange(e)},onBlur:function onBlur(e){var update=formatter(e.target.value);e.target.value=update,e.currentTarget.value=update,setOutput(update),_onChange&&_onChange(e),_onBlur&&_onBlur(e)}},props))}));try{NumberInput.displayName="NumberInput",NumberInput.__docgenInfo={description:"",displayName:"NumberInput",props:{min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | number"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | number"}},maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},padStart:{defaultValue:{value:"0"},description:"",name:"padStart",required:!1,type:{name:"number"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},override:{defaultValue:null,description:"",name:"override",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/number-input/number-input.tsx#NumberInput"]={docgenInfo:NumberInput.__docgenInfo,name:"NumberInput",path:"packages/react/src/components/number-input/number-input.tsx#NumberInput"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/radios/radios.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Y8:()=>Radio,$b:()=>RadioConditional,bY:()=>RadioDivider,Ee:()=>RadioGroup});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react_merge_refs_esm=__webpack_require__("./node_modules/react-merge-refs/dist/react-merge-refs.esm.js"),hint_hint=__webpack_require__("./packages/react/src/components/hint/hint.tsx"),label=__webpack_require__("./packages/react/src/components/label/label.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/radios/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const radios_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["id","className","type","hint","children","conditionalId","error"],_excluded2=["className"],_excluded3=["variant","inline","name","children","error","required"];function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Radio=(0,react.forwardRef)((function Radio(_ref,ref){var id=_ref.id,className=_ref.className,_ref$type=_ref.type,type=void 0===_ref$type?"radio":_ref$type,hint=_ref.hint,children=_ref.children,conditionalId=_ref.conditionalId,props=(_ref.error,_objectWithoutProperties(_ref,_excluded));return(0,jsx_runtime.jsxs)("div",{className:classnames_default()(radios_styles_module.govukRadiosItem,className),children:[(0,jsx_runtime.jsx)("input",Object.assign({ref,id,className:radios_styles_module.govukRadiosInput,type,"aria-describedby":hint?id+"-hint":void 0,"data-aria-controls":conditionalId},props)),(0,jsx_runtime.jsx)(label._,{className:radios_styles_module.govukRadiosLabel,htmlFor:id,children}),hint?(0,jsx_runtime.jsx)(hint_hint.k,{id:id+"-hint",className:radios_styles_module.govukRadiosHint,children:hint}):null]})})),RadioDivider=(0,react.forwardRef)((function RadioDivider(_ref2,ref){var className=_ref2.className,props=_objectWithoutProperties(_ref2,_excluded2);return(0,jsx_runtime.jsx)("div",Object.assign({ref,className:classnames_default()(radios_styles_module.govukRadiosDivider,className)},props))})),RadioConditional=(0,react.forwardRef)((function RadioConditional(props,ref){return(0,jsx_runtime.jsx)("div",Object.assign({ref,className:classnames_default()(radios_styles_module.govukRadiosConditional,"govuk-radios__conditional","govuk-radios__conditional--hidden")},props))})),RadioGroup=(0,react.forwardRef)((function RadioGroup(_ref3,ref){var _cn,_ref3$variant=_ref3.variant,variant=void 0===_ref3$variant?"base":_ref3$variant,_ref3$inline=_ref3.inline,inline=void 0!==_ref3$inline&&_ref3$inline,name=_ref3.name,children=_ref3.children,required=(_ref3.error,_ref3.required),props=_objectWithoutProperties(_ref3,_excluded3),localRef=(0,react.useRef)();(0,react.useEffect)((function(){var init=function(){var _ref4=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(ref){var _yield$import,LBHRadios;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return _context.next=2,__webpack_require__.e(263).then(__webpack_require__.bind(__webpack_require__,"./packages/react/node_modules/lbh-frontend/lbh/components/lbh-radios/radios.js"));case 2:_yield$import=_context.sent,LBHRadios=_yield$import.default,new LBHRadios(ref).init();case 6:case"end":return _context.stop()}}),_callee)})));return function init(_x){return _ref4.apply(this,arguments)}}();localRef.current&&void 0!==window&&init(localRef.current)}),[]);var hasConditionals=(0,react.useMemo)((function(){return react.Children.toArray(children).some((function(child){return(0,react.isValidElement)(child)&&child.type===RadioConditional}))}),[children]);return(0,jsx_runtime.jsx)("div",Object.assign({ref:(0,react_merge_refs_esm.Z)([localRef,ref]),className:classnames_default()(radios_styles_module.govukRadios,(_cn={},_cn[radios_styles_module.govukRadiosSmall]="sm"===variant,_cn[radios_styles_module.govukRadiosInline]=inline,_cn[radios_styles_module.govukRadiosConditionals]=hasConditionals,_cn),radios_styles_module.lbhRadios)},props,{children:react.Children.map(children,(function(child){return child&&(0,react.isValidElement)(child)&&(0,react.cloneElement)(child,Object.assign({name,required},child.props))}))}))}));try{Radio.displayName="Radio",Radio.__docgenInfo={description:"",displayName:"Radio",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},conditionalId:{defaultValue:null,description:"",name:"conditionalId",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/radios/radios.tsx#Radio"]={docgenInfo:Radio.__docgenInfo,name:"Radio",path:"packages/react/src/components/radios/radios.tsx#Radio"})}catch(__react_docgen_typescript_loader_error){}try{RadioDivider.displayName="RadioDivider",RadioDivider.__docgenInfo={description:"",displayName:"RadioDivider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/radios/radios.tsx#RadioDivider"]={docgenInfo:RadioDivider.__docgenInfo,name:"RadioDivider",path:"packages/react/src/components/radios/radios.tsx#RadioDivider"})}catch(__react_docgen_typescript_loader_error){}try{RadioConditional.displayName="RadioConditional",RadioConditional.__docgenInfo={description:"",displayName:"RadioConditional",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/radios/radios.tsx#RadioConditional"]={docgenInfo:RadioConditional.__docgenInfo,name:"RadioConditional",path:"packages/react/src/components/radios/radios.tsx#RadioConditional"})}catch(__react_docgen_typescript_loader_error){}try{RadioGroup.displayName="RadioGroup",RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{variant:{defaultValue:{value:"base"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"base"'},{value:'"sm"'}]}},inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/radios/radios.tsx#RadioGroup"]={docgenInfo:RadioGroup.__docgenInfo,name:"RadioGroup",path:"packages/react/src/components/radios/radios.tsx#RadioGroup"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/text/text.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>Text});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/text/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const text_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","variant","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Text=(0,react.forwardRef)((function Heading(_ref,ref){var _cn,_ref$as=_ref.as,TextComp=void 0===_ref$as?"p":_ref$as,_ref$variant=_ref.variant,variant=void 0===_ref$variant?"md":_ref$variant,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(TextComp,Object.assign({ref,className:classnames_default()((_cn={},_cn[text_styles_module.lbhBodyXs]="xs"===variant,_cn[text_styles_module.lbhBodyS]="sm"===variant,_cn[text_styles_module.lbhBodyM]="md"===variant,_cn[text_styles_module.lbhBodyL]="lg"===variant,_cn),className)},props))}));try{Text.displayName="Text",Text.__docgenInfo={description:"",displayName:"Text",props:{variant:{defaultValue:{value:"md"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xs"'}]}},as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/text/text.tsx#Text"]={docgenInfo:Text.__docgenInfo,name:"Text",path:"packages/react/src/components/text/text.tsx#Text"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/visually-hidden/visually-hidden.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{T:()=>VisuallyHidden});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/visually-hidden/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const visually_hidden_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["as","className"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var VisuallyHidden=(0,react.forwardRef)((function VisuallyHidden(_ref,ref){var _ref$as=_ref.as,VisuallyHiddenComp=void 0===_ref$as?"span":_ref$as,className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);return(0,jsx_runtime.jsx)(VisuallyHiddenComp,Object.assign({ref,className:classnames_default()(visually_hidden_styles_module.visuallyHidden,className)},props))}));try{VisuallyHidden.displayName="VisuallyHidden",VisuallyHidden.__docgenInfo={description:"",displayName:"VisuallyHidden",props:{as:{defaultValue:null,description:"",name:"as",required:!0,type:{name:'"symbol" | "object" | "div" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | ... 156 more ... | FunctionComponent<...>'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/visually-hidden/visually-hidden.tsx#VisuallyHidden"]={docgenInfo:VisuallyHidden.__docgenInfo,name:"VisuallyHidden",path:"packages/react/src/components/visually-hidden/visually-hidden.tsx#VisuallyHidden"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/utils/width-overrides/width-overrides.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>width_overrides});var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/utils/width-overrides/styles.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const width_overrides_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0,width_overrides=function(width){switch(width){case 1:return width_overrides_styles_module["govuk-!-width-full"];case.5:return width_overrides_styles_module["govuk-!-width-one-half"];case 1/3:return width_overrides_styles_module["govuk-!-width-one-third"];case 2/3:return width_overrides_styles_module["govuk-!-width-two-thirds"];case 1/4:return width_overrides_styles_module["govuk-!-width-one-quarter"];case 3/4:return width_overrides_styles_module["govuk-!-width-three-quarters"];default:return""}}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/accordion/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-accordion-2imxb{margin-bottom:20px}@media (min-width: 40.0625em){.govuk-accordion-2imxb{margin-bottom:30px}}.govuk-accordion__section-1KsVR{padding-top:15px}.govuk-accordion__section-header-22VM_{padding-top:15px;padding-bottom:15px}.govuk-accordion__section-heading-1hNuS{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-top:0;margin-bottom:0}@media print{.govuk-accordion__section-heading-1hNuS{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-accordion__section-heading-1hNuS{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-accordion__section-heading-1hNuS{font-size:18pt;line-height:1.15}}.govuk-accordion__section-button-3LaHC{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;display:inline-block;margin-bottom:0;padding-top:15px}@media print{.govuk-accordion__section-button-3LaHC{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-accordion__section-button-3LaHC{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-accordion__section-button-3LaHC{font-size:18pt;line-height:1.15}}.govuk-accordion__section-summary-186ZM{margin-top:10px;margin-bottom:0}.govuk-accordion__section-content-1b1Th>:last-child{margin-bottom:0}.js-enabled .govuk-accordion-2imxb{border-bottom:1px solid #b1b4b6}.js-enabled .govuk-accordion__section-1KsVR{padding-top:0}.js-enabled .govuk-accordion__section-content-1b1Th{display:none;padding-top:15px;padding-bottom:15px}@media (min-width: 40.0625em){.js-enabled .govuk-accordion__section-content-1b1Th{padding-top:15px}}@media (min-width: 40.0625em){.js-enabled .govuk-accordion__section-content-1b1Th{padding-bottom:15px}}.js-enabled .govuk-accordion__section--expanded-WWAlc .govuk-accordion__section-content-1b1Th{display:block}.js-enabled .govuk-accordion__open-all-1xTWS{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:14px;font-size:.875rem;line-height:1.14286;position:relative;z-index:1;margin:0;padding:0;border-width:0;color:#025ea6;background:none;cursor:pointer;-webkit-appearance:none;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:underline}@media print{.js-enabled .govuk-accordion__open-all-1xTWS{font-family:sans-serif}}@media (min-width: 40.0625em){.js-enabled .govuk-accordion__open-all-1xTWS{font-size:16px;font-size:1rem;line-height:1.25}}@media print{.js-enabled .govuk-accordion__open-all-1xTWS{font-size:14pt;line-height:1.2}}@media print{.js-enabled .govuk-accordion__open-all-1xTWS{font-family:sans-serif}}.js-enabled .govuk-accordion__open-all-1xTWS:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.js-enabled .govuk-accordion__open-all-1xTWS:link{color:#025ea6}.js-enabled .govuk-accordion__open-all-1xTWS:visited{color:#4c2c92}.js-enabled .govuk-accordion__open-all-1xTWS:hover{color:#003078}.js-enabled .govuk-accordion__open-all-1xTWS:active{color:#0b0c0c}.js-enabled .govuk-accordion__open-all-1xTWS:focus{color:#0b0c0c}.js-enabled .govuk-accordion__open-all-1xTWS::-moz-focus-inner{padding:0;border:0}.js-enabled .govuk-accordion__section-header-22VM_{position:relative;padding-right:40px;border-top:1px solid #b1b4b6;cursor:pointer}.js-enabled .govuk-accordion__section-button-3LaHC{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;margin-top:0;margin-bottom:0;margin-left:0;padding:0;border-width:0;color:#025ea6;background:none;text-align:left;cursor:pointer;-webkit-appearance:none}@media print{.js-enabled .govuk-accordion__section-button-3LaHC{font-family:sans-serif}}.js-enabled .govuk-accordion__section-button-3LaHC:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.js-enabled .govuk-accordion__section-button-3LaHC::-moz-focus-inner{padding:0;border:0}.js-enabled .govuk-accordion__section-button-3LaHC:after{content:"";position:absolute;top:0;right:0;bottom:0;left:0}.js-enabled .govuk-accordion__section-button-3LaHC:hover:not(:focus){color:#003078;text-decoration:underline;text-underline-offset:.1em}@media (hover: none){.js-enabled .govuk-accordion__section-button-3LaHC:hover{text-decoration:none}}.js-enabled .govuk-accordion__controls-aeTMO{text-align:right}.js-enabled .govuk-accordion__icon-2m2mQ{position:absolute;top:50%;right:15px;width:16px;height:16px;margin-top:-8px}.js-enabled .govuk-accordion__icon-2m2mQ:after,.js-enabled .govuk-accordion__icon-2m2mQ:before{content:"";box-sizing:border-box;position:absolute;top:0;right:0;bottom:0;left:0;width:25%;height:25%;margin:auto;border:2px solid transparent;background-color:#0b0c0c}.js-enabled .govuk-accordion__icon-2m2mQ:before{width:100%}.js-enabled .govuk-accordion__icon-2m2mQ:after{height:100%}.js-enabled .govuk-accordion__section--expanded-WWAlc .govuk-accordion__icon-2m2mQ:after{content:" ";display:none}.lbh-accordion-14OIE{z-index:1}.lbh-accordion-14OIE .govuk-accordion__section-1KsVR+.govuk-accordion__section-1KsVR{margin-top:0}.lbh-accordion-14OIE .govuk-accordion__section-button-3LaHC{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:16px;font-size:1rem;line-height:19px;line-height:1.1875rem}@media (min-width: 40.0625em){.lbh-accordion-14OIE .govuk-accordion__section-button-3LaHC{font-size:18px;font-size:1.125rem;line-height:22px;line-height:1.375rem}}.lbh-accordion-14OIE .govuk-accordion__section-content-1b1Th{margin-top:0}.lbh-accordion-14OIE .govuk-accordion__section-summary-186ZM,.lbh-accordion-14OIE .govuk-accordion__section-content-1b1Th{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-accordion-14OIE .govuk-accordion__section-summary-186ZM,.lbh-accordion-14OIE .govuk-accordion__section-content-1b1Th{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.visually-hidden-2obRR .govuk-accordion__open-all-1xTWS{position:absolute !important;width:1px !important;height:1px !important;margin:0 !important;overflow:hidden !important;clip:rect(0 0 0 0) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;white-space:nowrap !important}.visually-hidden-2obRR .govuk-accordion__open-all-1xTWS:active,.visually-hidden-2obRR .govuk-accordion__open-all-1xTWS:focus{position:static !important;width:auto !important;height:auto !important;margin:inherit !important;overflow:visible !important;clip:auto !important;-webkit-clip-path:none !important;clip-path:none !important;white-space:inherit !important}.govuk-accordion__section-1KsVR[data-state="open"] .govuk-accordion__section-content-1b1Th{display:block}.govuk-accordion__section-1KsVR[data-state="open"] .govuk-accordion__icon-2m2mQ:after{content:none}.js-enabled .govuk-accordion__section-button-3LaHC:hover:not(.focus-fo690){color:inherit}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/accordion/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_links.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-accordion/_accordion.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_depth-index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/src/components/accordion/styles.module.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_visually-hidden.scss"],names:[],mappings:"AACE,uBCuFM,kBCxBM,CCoKN,8BHnON,uBC8FQ,kBC9BM,CF9Db,CAGD,gCACE,gBEOK,CFNN,uCAGC,gBEGK,CFFL,mBEEK,CFDN,wCIED,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CJ5DvC,YAAa,CACb,eAAgB,CG+MZ,aHrNN,wCIeE,sBE8BgC,CNtCjC,CG8MK,8BHrNN,wCI8IM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CJ1DxC,CG8MK,aHrNN,wCIyIM,cGhBa,CHiBb,gBGhBe,CPnHpB,CAGD,uCIVA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CJrDvC,oBAAqB,CACrB,eAAgB,CAChB,gBEfK,CCsND,aH3MN,uCIKE,sBE8BgC,CN9BjC,CGsMK,8BH3MN,uCIoIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CJlDxC,CGsMK,aH3MN,uCI+HM,cGhBa,CHiBb,gBGhBe,CP3GpB,CAED,wCACE,eEpBK,CFqBL,eAAgB,CACjB,oDAIC,eAAgB,CACjB,mCAMG,+BSCe,CTJnB,4CAQI,aAAc,CARlB,oDAaI,YAAa,CCgCX,gBCpCM,CDoCN,mBCpCM,CCgLN,8BHzLN,oDCoDQ,gBC1CM,CFMX,CGyKG,8BHzLN,oDCoDQ,mBC1CM,CFMX,CAhBH,8FAoBI,aAAc,CApBlB,6CI5BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGWe,CHTb,iBIjIuC,CJmIzC,mBArEqC,CJXrC,iBAAkB,CAClB,SAAU,CACV,QAAS,CACT,SAAU,CACV,cAAe,CACf,aUnCe,CVoCf,eAAgB,CAChB,cAAe,CACf,uBAAwB,CI9D5B,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,COalC,yBAA0B,CRsMpB,aHzLN,6CIbE,sBE8BgC,CN2B/B,CG6IG,8BHzLN,6CIkHM,cGGa,CHDX,cI7IqC,CJ+IvC,gBAjFmC,CJOtC,CG6IG,aHzLN,6CI6GM,cGYa,CHXb,eGYc,CP9EjB,CG6IG,aHzLN,6CIbE,sBE8BgC,CN2B/B,CWrEH,mDCCE,6BAA6C,CAE/C,aFMmB,CELnB,wBFW4B,CEV5B,uCFImB,CEDnB,oBAAqB,CDNpB,kDA4DC,aDzCiB,CC0ClB,qDAGC,aFzCe,CE0ChB,mDAGC,aF/CkB,CEgDnB,oDAGC,aF/Cc,CEgDf,mDAKC,aDvEiB,CCwElB,+DXfK,SAAU,CACV,QAAS,CA1Cf,mDAgDI,iBAAkB,CAElB,kBAAmB,CACnB,4BS/Ce,CTgDf,cAAe,CApDnB,mDI5BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CJoF9B,YAAa,CACb,eAAgB,CAChB,aAAc,CACd,SAAU,CACV,cAAe,CACf,aUnEe,CVoEf,eAAgB,CAChB,eAAgB,CAChB,cAAe,CACf,uBAAwB,CGsHtB,aHzLN,mDIbE,sBE8BgC,CN6D/B,CA9EH,yDYxBE,6BAA6C,CAE/C,aFMmB,CELnB,wBFW4B,CEV5B,uCFImB,CEDnB,oBAAqB,CZiBrB,qEA2EM,SAAU,CACV,QAAS,CA5Ef,yDAkFI,UAAW,CACX,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,QAAS,CACT,MAAO,CAvFX,qEA2FI,aS7FgB,CT8FhB,yBAA0B,CAK1B,0Ba/F4B,CbgG7B,qBAlGH,yDAwGM,oBAAqB,CACtB,CAzGL,6CA6GI,gBAAiB,CA7GrB,yCAmHI,iBAAkB,CAClB,OAAQ,CACR,UAAW,CACX,UAAW,CACX,WAAY,CACZ,eAAgB,CAxHpB,+FA6HI,UAAW,CACX,qBAAsB,CACtB,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,QAAS,CACT,MAAO,CACP,SAAU,CACV,UAAW,CACX,WAAY,CACZ,4BAA6B,CAC7B,wBStIY,CTFhB,gDA4II,UAAW,CA5If,+CAgJI,WAAY,CAhJhB,yFAqJI,WAAY,CACZ,YAAa,Cc9LjB,qBACE,SCSY,CDVd,qFAII,YAAa,CAJjB,4DEMA,uBXL2B,CWM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aNeoB,CMdpB,eCU0B,CCf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,qBARc,CfgNR,8BWjON,4DIwBA,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,oBARc,CJRX,CATH,6DAYI,YAAa,CAZjB,0HEMA,uBXL2B,CWM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aNnFoB,CQnBpB,cAhBa,CAiBb,cARc,CF+Gd,eCnFyB,CCrBzB,gBAhBa,CAiBb,oBARc,CfgNR,8BWjON,0HIwBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CJCX,CKjBL,wDC8CE,4BAA4C,CAE5C,oBAAoC,CACpC,qBAAqC,CAGrC,mBAAmC,CAEnC,0BAA0C,CAC1C,6BAA6C,CAC7C,uCAAuD,CAC/C,+BAA+C,CAKvD,6BAA6C,CD9D/C,6HCkEI,0BAA0C,CAE1C,qBAAqC,CACrC,sBAAsC,CACtC,yBAAyC,CAEzC,2BAA2C,CAC3C,oBAAoC,CACpC,iCAAiD,CACzC,yBAAyC,CAEjD,8BAA8C,CDvElD,2FAEI,aAAc,CAFlB,sFAKI,YAAa,CACd,2EAKC,aAAc",sourcesContent:['@include govuk-exports("govuk/component/accordion") {\n  .govuk-accordion {\n    @include govuk-responsive-margin(6, "bottom");\n  }\n\n  // Borders between accordion sections\n  .govuk-accordion__section {\n    padding-top: govuk-spacing(3);\n  }\n\n  .govuk-accordion__section-header {\n    padding-top: govuk-spacing(3);\n    padding-bottom: govuk-spacing(3);\n  }\n\n  .govuk-accordion__section-heading {\n    // Override browser defaults to ensure consistent element height\n    // Font size is set in .govuk-accordion__section-button\n    @include govuk-font(24);\n\n    margin-top: 0; // Override browser default\n    margin-bottom: 0; // Override browser default\n  }\n\n  // Buttons within the sections don’t need default styling\n  .govuk-accordion__section-button {\n    @include govuk-font($size: 24, $weight: bold);\n    display: inline-block;\n    margin-bottom: 0;\n    padding-top: govuk-spacing(3);\n  }\n\n  .govuk-accordion__section-summary {\n    margin-top: govuk-spacing(2);\n    margin-bottom: 0;\n  }\n\n  // Remove the bottom margin from the last item inside the content\n  .govuk-accordion__section-content > :last-child {\n    margin-bottom: 0;\n  }\n\n  // JavaScript enabled\n  .js-enabled {\n    .govuk-accordion {\n      // Border at the bottom of the whole accordion\n      border-bottom: 1px solid $govuk-border-colour;\n    }\n\n    // Borders between accordion sections\n    .govuk-accordion__section {\n      padding-top: 0;\n    }\n\n    // Hide the body of collapsed sections\n    .govuk-accordion__section-content {\n      display: none;\n      @include govuk-responsive-padding(3, "top");\n      @include govuk-responsive-padding(3, "bottom");\n    }\n\n    // Show the body of expanded sections\n    .govuk-accordion__section--expanded .govuk-accordion__section-content {\n      display: block;\n    }\n\n    // This is styled to look like a link not a button\n    .govuk-accordion__open-all {\n      @include govuk-font($size: 16);\n      position: relative;\n      z-index: 1;\n      margin: 0;\n      padding: 0;\n      border-width: 0;\n      color: $govuk-link-colour;\n      background: none;\n      cursor: pointer;\n      -webkit-appearance: none;\n\n      @include govuk-link-common;\n      @include govuk-link-style-default;\n\n      // Remove default button focus outline in Firefox\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n    }\n\n    // Section headers have a pointer cursor as an additional affordance\n    .govuk-accordion__section-header {\n      position: relative;\n      // Safe area on the right to avoid clashing with icon\n      padding-right: 40px;\n      border-top: 1px solid $govuk-border-colour;\n      cursor: pointer;\n    }\n\n    // Buttons within the headers don’t need default styling\n    .govuk-accordion__section-button {\n      @include govuk-typography-common;\n      margin-top: 0;\n      margin-bottom: 0;\n      margin-left: 0;\n      padding: 0;\n      border-width: 0;\n      color: $govuk-link-colour;\n      background: none;\n      text-align: left;\n      cursor: pointer;\n      -webkit-appearance: none;\n\n      &:focus {\n        @include govuk-focused-text;\n      }\n\n      // Remove default button focus outline in Firefox\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n    }\n\n    // Extend the touch area of the button to span the section header\n    .govuk-accordion__section-button:after {\n      content: "";\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    .govuk-accordion__section-button:hover:not(:focus) {\n      color: $govuk-link-hover-colour;\n      text-decoration: underline;\n\n      // This needs to come after the text-decoration property otherwise\n      // text-decoration, as a shorthand property, resets it to auto\n      @include govuk-link-hover-decoration;\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n\n    // For devices that can\'t hover such as touch devices,\n    // remove hover state as it can be stuck in that state (iOS).\n    @media (hover: none) {\n      .govuk-accordion__section-button:hover {\n        text-decoration: none;\n      }\n    }\n\n    .govuk-accordion__controls {\n      text-align: right;\n    }\n\n    // Display an icon to the right of each header to indicate open/closed status,\n    // and as an additional affordance.\n    .govuk-accordion__icon {\n      position: absolute;\n      top: 50%;\n      right: 15px;\n      width: 16px;\n      height: 16px;\n      margin-top: -8px;\n    }\n\n    .govuk-accordion__icon:after,\n    .govuk-accordion__icon:before {\n      content: "";\n      box-sizing: border-box;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 25%;\n      height: 25%;\n      margin: auto;\n      border: 2px solid transparent;\n      background-color: govuk-colour("black");\n    }\n\n    .govuk-accordion__icon:before {\n      width: 100%;\n    }\n\n    .govuk-accordion__icon:after {\n      height: 100%;\n    }\n\n    // Vertical bar should be hidden when section is open, to display a \'-\' icon\n    .govuk-accordion__section--expanded .govuk-accordion__icon:after {\n      content: " ";\n      display: none;\n    }\n  }\n}\n','////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if ($govuk-new-link-styles) {\n    @if ($govuk-link-underline-thickness) {\n      text-decoration-thickness: $govuk-link-underline-thickness;\n    }\n\n    @if ($govuk-link-underline-offset) {\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if ($govuk-new-link-styles and $govuk-link-hover-underline-thickness) {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven\'t\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it\'s\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover {\n    color: rgba($govuk-text-colour, .99);\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you\'re displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour("white");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour("white"), .99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it\'s not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it. This has no effect in Internet Explorer 8 (IE8),\n/// because IE8 does not support `:not`.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^="/"],\n    &[href^="http://"],\n    &[href^="https://"] {\n      &:after {\n        content: " (" attr(href) ")";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n','////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the "underline"\n  text-decoration: none;\n}\n',"////\n/// @group settings/links\n////\n\n/// Enable new link styles\n///\n/// If enabled, the link styles will change. Underlines will:\n///\n/// - be consistently thinner and a bit further away from the link text\n/// - have a clearer hover state, where the underline gets thicker to make the\n///   link stand out to users\n///\n/// You should only enable the new link styles if both:\n///\n/// - you've made sure your whole service will use the new style consistently\n/// - you do not have links in a multi-column CSS layout - there's [a Chromium\n///   bug that affects links](https://github.com/alphagov/govuk-frontend/issues/2204)\n///\n/// @type Boolean\n/// @access public\n\n$govuk-new-link-styles: false !default;\n\n/// Thickness of link underlines\n///\n/// The default will be either:\n///\n///  - 1px\n///  - 0.0625rem, if it's thicker than 1px because the user has changed the text\n///    size in their browser\n///\n/// Set this variable to `false` to avoid setting a thickness.\n///\n/// @type Number\n/// @access public\n\n$govuk-link-underline-thickness: unquote(\"max(1px, .0625rem)\") !default;\n\n/// Offset of link underlines from text baseline\n///\n/// Set this variable to `false` to avoid setting an offset.\n///\n/// @type Number\n/// @access public\n\n$govuk-link-underline-offset: .1em !default;\n\n/// Thickness of link underlines in hover state\n///\n/// The default for each link will be the thickest of the following:\n///\n///  - 3px\n///  - 0.1875rem, if it's thicker than 3px because the user has changed the text\n///    size in their browser\n///  - 0.12em (relative to the link's text size)\n///\n/// Set this variable to `false` to avoid setting a thickness.\n///\n/// @type Number\n/// @access public\n\n$govuk-link-hover-underline-thickness: unquote(\"max(3px, .1875rem, .12em)\") !default;\n",'@import "node_modules/govuk-frontend/govuk/components/accordion/accordion";\n\n@include lbh-exports("lbh/component/accordion") {\n  .lbh-accordion {\n    z-index: lbh-depth-index("accordion");\n\n    .govuk-accordion__section + .govuk-accordion__section {\n      margin-top: 0;\n    }\n\n    .govuk-accordion__section-button {\n      @include lbh-heading-h5;\n    }\n\n    .govuk-accordion__section-content {\n      margin-top: 0;\n    }\n\n    .govuk-accordion__section-summary,\n    .govuk-accordion__section-content {\n      @include lbh-body-m;\n    }\n  }\n}\n','////\n/// @group settings/depth-index\n////\n\n/// Depth index\n///\n/// @type Map\n///\n/// @prop $element - Depth of a given $element\n///\n/// @access public\n\n$lbh-depth-index: (\n  "accordion": 1,\n  "map": 2,\n  "back-to-top": 3,\n  "header": 4,\n  "cookie-banner": 5\n) !default;\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-accordion/accordion";\n@import "~govuk-frontend/govuk/helpers/visually-hidden";\n\n.visually-hidden {\n  .govuk-accordion__open-all {\n    @include govuk-visually-hidden-focusable;\n  }\n}\n\n.govuk-accordion__section[data-state="open"] {\n  .govuk-accordion__section-content {\n    display: block;\n  }\n  .govuk-accordion__icon:after {\n    content: none;\n  }\n}\n\n:global .js-enabled {\n  :local .govuk-accordion__section-button:hover:not(.focus) {\n    color: inherit;\n  }\n}\n',"////\n/// @group helpers/accessibility\n////\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// This is slightly less opinionated about borders and padding to make it\n/// easier to style the focussed element.\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  &:active,\n  &:focus {\n    position: static if($important, !important, null);\n\n    width: auto if($important, !important, null);\n    height: auto if($important, !important, null);\n    margin: inherit if($important, !important, null);\n\n    overflow: visible if($important, !important, null);\n    clip: auto if($important, !important, null);\n    -webkit-clip-path: none if($important, !important, null);\n            clip-path: none if($important, !important, null);\n\n    white-space: inherit if($important, !important, null);\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-accordion":"govuk-accordion-2imxb",govukAccordion:"govuk-accordion-2imxb","govuk-accordion__section":"govuk-accordion__section-1KsVR",govukAccordionSection:"govuk-accordion__section-1KsVR","govuk-accordion__section-header":"govuk-accordion__section-header-22VM_",govukAccordionSectionHeader:"govuk-accordion__section-header-22VM_","govuk-accordion__section-heading":"govuk-accordion__section-heading-1hNuS",govukAccordionSectionHeading:"govuk-accordion__section-heading-1hNuS","govuk-accordion__section-button":"govuk-accordion__section-button-3LaHC",govukAccordionSectionButton:"govuk-accordion__section-button-3LaHC","govuk-accordion__section-summary":"govuk-accordion__section-summary-186ZM",govukAccordionSectionSummary:"govuk-accordion__section-summary-186ZM","govuk-accordion__section-content":"govuk-accordion__section-content-1b1Th",govukAccordionSectionContent:"govuk-accordion__section-content-1b1Th","js-enabled":"js-enabled",jsEnabled:"js-enabled","govuk-accordion__section--expanded":"govuk-accordion__section--expanded-WWAlc",govukAccordionSectionExpanded:"govuk-accordion__section--expanded-WWAlc","govuk-accordion__open-all":"govuk-accordion__open-all-1xTWS",govukAccordionOpenAll:"govuk-accordion__open-all-1xTWS","govuk-accordion__controls":"govuk-accordion__controls-aeTMO",govukAccordionControls:"govuk-accordion__controls-aeTMO","govuk-accordion__icon":"govuk-accordion__icon-2m2mQ",govukAccordionIcon:"govuk-accordion__icon-2m2mQ","lbh-accordion":"lbh-accordion-14OIE",lbhAccordion:"lbh-accordion-14OIE","visually-hidden":"visually-hidden-2obRR",visuallyHidden:"visually-hidden-2obRR",focus:"focus-fo690"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/button/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-button-2Xhmv{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.1875;box-sizing:border-box;display:inline-block;position:relative;width:100%;margin-top:0;margin-right:0;margin-left:0;margin-bottom:22px;padding:8px 10px 7px;border:2px solid transparent;border-radius:0;color:#fff;background-color:#00703c;box-shadow:0 2px 0 #002d18;text-align:center;vertical-align:top;cursor:pointer;-webkit-appearance:none}@media print{.govuk-button-2Xhmv{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-button-2Xhmv{font-size:19px;font-size:1.1875rem;line-height:1}}@media print{.govuk-button-2Xhmv{font-size:14pt;line-height:19px}}@media (min-width: 40.0625em){.govuk-button-2Xhmv{margin-bottom:32px}}@media (min-width: 40.0625em){.govuk-button-2Xhmv{width:auto}}.govuk-button-2Xhmv:link,.govuk-button-2Xhmv:visited,.govuk-button-2Xhmv:active,.govuk-button-2Xhmv:hover{color:#fff;text-decoration:none}.govuk-button-2Xhmv::-moz-focus-inner{padding:0;border:0}.govuk-button-2Xhmv:hover{background-color:#005a30}.govuk-button-2Xhmv:active{top:2px}.govuk-button-2Xhmv:focus{border-color:#ffc845;outline:3px solid transparent;box-shadow:inset 0 0 0 1px #ffc845}.govuk-button-2Xhmv:focus:not(:active):not(:hover){border-color:#ffc845;color:#0b0c0c;background-color:#ffc845;box-shadow:0 2px 0 #0b0c0c}.govuk-button-2Xhmv:before{content:"";display:block;position:absolute;top:-2px;right:-2px;bottom:-4px;left:-2px;background:transparent}.govuk-button-2Xhmv:active:before{top:-4px}.govuk-button--disabled-3Wr-V,.govuk-button-2Xhmv[disabled="disabled"],.govuk-button-2Xhmv[disabled]{opacity:0.5}.govuk-button--disabled-3Wr-V:hover,.govuk-button-2Xhmv[disabled="disabled"]:hover,.govuk-button-2Xhmv[disabled]:hover{background-color:#00703c;cursor:default}.govuk-button--disabled-3Wr-V:focus,.govuk-button-2Xhmv[disabled="disabled"]:focus,.govuk-button-2Xhmv[disabled]:focus{outline:none}.govuk-button--disabled-3Wr-V:active,.govuk-button-2Xhmv[disabled="disabled"]:active,.govuk-button-2Xhmv[disabled]:active{top:0;box-shadow:0 2px 0 #002d18}.govuk-button--secondary-12soh{background-color:#f3f2f1;box-shadow:0 2px 0 #929191}.govuk-button--secondary-12soh,.govuk-button--secondary-12soh:link,.govuk-button--secondary-12soh:visited,.govuk-button--secondary-12soh:active,.govuk-button--secondary-12soh:hover{color:#0b0c0c}.govuk-button--secondary-12soh:hover{background-color:#dbdad9}.govuk-button--secondary-12soh:hover[disabled]{background-color:#f3f2f1}.govuk-button--warning-_RNaX{background-color:#d4351c;box-shadow:0 2px 0 #55150b}.govuk-button--warning-_RNaX,.govuk-button--warning-_RNaX:link,.govuk-button--warning-_RNaX:visited,.govuk-button--warning-_RNaX:active,.govuk-button--warning-_RNaX:hover{color:#fff}.govuk-button--warning-_RNaX:hover{background-color:#aa2a16}.govuk-button--warning-_RNaX:hover[disabled]{background-color:#d4351c}.govuk-button--start-1dM9o{font-weight:700;font-size:18px;font-size:1.125rem;line-height:1;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;min-height:auto;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}@media (min-width: 40.0625em){.govuk-button--start-1dM9o{font-size:24px;font-size:1.5rem;line-height:1}}@media print{.govuk-button--start-1dM9o{font-size:18pt;line-height:1}}.govuk-button__start-icon-pTwjs{margin-left:5px;vertical-align:middle;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center}@media (min-width: 48.0625em){.govuk-button__start-icon-pTwjs{margin-left:10px}}.lbh-button-26Fhd{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;margin-top:1.5em;margin-bottom:0;padding:12px 22px 10px;padding:.75rem 1.375rem .625rem;border-radius:4px;background:#00664f;font-size:19px;font-size:1.1875rem;font-weight:400;line-height:23px;line-height:1.4375rem}.lbh-button-26Fhd:not(.lbh-button--warning-3ULNb):not(.lbh-button--disabled-qoH4k):not([disabled]):hover{background:#00513f}.lbh-button-26Fhd:disabled,.lbh-button-26Fhd:hover[disabled],.lbh-button--disabled-qoH4k,.lbh-button--disabled-qoH4k:hover{opacity:1;background:#7fb2a7;box-shadow:0 2px 0 #328472}.lbh-button--start-3aHSo{padding:15px 24px 13px;padding:.9375rem 1.5rem .8125rem;font-size:27px;font-size:1.6875rem;font-weight:600;line-height:30px;line-height:1.875rem}.lbh-button--start-3aHSo .govuk-button__start-icon-pTwjs{margin-left:24px;margin-left:1.5rem}.lbh-button--add-1EIpx svg{margin-right:10px}.lbh-button--add-1EIpx svg path{fill:#00664f}.lbh-button--add-1EIpx:hover svg path{fill:#fff}.lbh-button--add-1EIpx,.lbh-button--secondary-3eRQn,.lbh-button--secondary-3eRQn:link,.lbh-button--secondary-3eRQn:visited{padding:13px 22px 11px;padding:.8125rem 1.375rem .6875rem;border:1px solid #00664f;color:#00664f;background:#fff}.lbh-button--add-1EIpx:hover,.lbh-button--secondary-3eRQn:hover,.lbh-button--secondary-3eRQn:link:hover,.lbh-button--secondary-3eRQn:visited:hover{color:#fff;background:#00664f}.lbh-button--add-1EIpx:disabled,.lbh-button--add-1EIpx.lbh-button--disabled-qoH4k,.lbh-button--add-1EIpx:hover[disabled],.lbh-button--add-1EIpx.lbh-button--disabled-qoH4k:hover,.lbh-button--secondary-3eRQn:disabled,.lbh-button--secondary-3eRQn.lbh-button--disabled-qoH4k,.lbh-button--secondary-3eRQn:hover[disabled],.lbh-button--secondary-3eRQn.lbh-button--disabled-qoH4k:hover,.lbh-button--secondary-3eRQn:link:disabled,.lbh-button--secondary-3eRQn:link.lbh-button--disabled-qoH4k,.lbh-button--secondary-3eRQn:link:hover[disabled],.lbh-button--secondary-3eRQn:link.lbh-button--disabled-qoH4k:hover,.lbh-button--secondary-3eRQn:visited:disabled,.lbh-button--secondary-3eRQn:visited.lbh-button--disabled-qoH4k,.lbh-button--secondary-3eRQn:visited:hover[disabled],.lbh-button--secondary-3eRQn:visited.lbh-button--disabled-qoH4k:hover{opacity:1;color:#6f777b;background:#dee0e2}.lbh-button--warning-3ULNb,.lbh-button--warning-3ULNb[disabled],.lbh-button--warning-3ULNb:hover[disabled]{background:#be3a34}.lbh-button--warning-3ULNb:disabled,.lbh-button--warning-3ULNb:disabled:hover,.lbh-button--warning-3ULNb.lbh-button--disabled-qoH4k,.lbh-button--warning-3ULNb.lbh-button--disabled-qoH4k:hover{opacity:0.5}.button-loading-indicator-3iC-C{display:inline-block;border-top:2px solid currentcolor;border-right:2px solid currentcolor;border-bottom-style:solid;border-left-style:solid;border-radius:50%;border-bottom-width:2px;border-left-width:2px;border-bottom-color:transparent;border-left-color:transparent;width:1em;height:1em;color:currentColor;margin-right:1em;vertical-align:middle;animation:buttonLoadingIndicatorRotation-nwsDq 0.45s linear 0s infinite normal none running}.button-loading-indicator-3iC-C span{border:0px;clip:rect(0px, 0px, 0px, 0px);height:1px;width:1px;margin:-1px;padding:0px;overflow:hidden;white-space:nowrap;position:absolute}@keyframes buttonLoadingIndicatorRotation-nwsDq{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/button/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_colour.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_measurements.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-button/_button.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/src/components/button/styles.module.scss"],names:[],mappings:"AAuBE,oBCRA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,kBArEqC,CDtDvC,qBAAsB,CACtB,oBAAqB,CACrB,iBAAkB,CAClB,UAAW,CACX,YAAa,CACb,cAAe,CACf,aAAc,CMwDV,kBATgD,CN7CpD,oBAAiK,CACjK,4BAA0D,CAC1D,eAAgB,CAChB,UOYc,CPXd,wBOCc,CPAd,0BQ2CwC,CR1CxC,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,uBAAwB,CSyLpB,aT7MN,oBCOE,sBE8BgC,CHwFjC,CSgFK,8BT7MN,oBCsIM,cGXa,CHaX,mBI7IqC,CJ+IvC,aAjFmC,CDoExC,CSgFK,aT7MN,oBCiIM,cGFa,CHGb,gBDjI6C,CA4HlD,CSgFK,8BT7MN,oBMwEQ,kBAhB8C,CNqErD,CSgFK,8BT7MN,oBA2BI,UAAW,CAkGd,CA7HD,0GAmCI,UOTY,CPUZ,oBAAqB,CApCzB,sCAyCI,SAAU,CACV,QAAS,CA1Cb,0BA8CI,wBQasC,CR3D1C,2BAmDI,OUD+B,CVlDnC,0BA2DI,oBWjDwB,CXuDtB,6BAA6C,CAO/C,kCW9DwB,CXV5B,mDAuFI,oBW7EwB,CX8ExB,aWpFe,CXqFf,wBW/EwB,CXgFxB,0BWtFe,CXJnB,2BAmGI,UAAW,CACX,aAAc,CAEd,iBAAkB,CAElB,QUtD+B,CVuD/B,UUvD+B,CVwD/B,WAAgE,CAChE,SUzD+B,CV2D/B,sBAAuB,CA7G3B,kCA2HI,QAA6D,CAC9D,qGAMD,WAAa,CAHf,uHAMI,wBOrHY,CPsHZ,cAAe,CAPnB,uHAWI,YAAa,CAXjB,0HAeI,KAAM,CACN,0BQpFsC,CRwFvC,+BAID,wBO9HmB,CP+HnB,0BQ7FwC,CR2F1C,qLASI,aOzIY,CPgIhB,qCAwBI,wBQnHsC,CR2F1C,+CA2BM,wBOxJe,CPyJhB,6BAKH,wBOzKY,CP0KZ,0BQ7HwC,CR2H1C,2KASI,UOrKY,CP4JhB,mCAwBI,wBQnJsC,CR2H1C,6CA2BM,wBOnMQ,CPoMT,2BCxKL,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,aD0FsE,CAExE,0BAA2B,CAE3B,2BAA4B,CAE5B,0BAA2B,CAE3B,mBAAoB,CACpB,eAAgB,CAEhB,uBAAwB,CAExB,8BAA+B,CAE3B,oBAAqB,CAEjB,sBAAuB,CS5B3B,8BTSN,2BChFM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,aD8EoE,CAkBzE,CS7BK,aTSN,2BCrFM,cGhBa,CHiBb,aDsFoE,CAkBzE,CAED,gCACE,eYxPI,CZ6PJ,qBAAsB,CACtB,qBAAsB,CAClB,mBAAoB,CAChB,aAAc,CACtB,yBAA0B,CACtB,0BAA2B,CACvB,iBAAkB,CS3CtB,8BT+BN,gCAII,gBY1PG,CZmQN,Ca7QD,kBCMA,uBZL2B,CYM3B,kCAAmC,CACnC,iCAAkC,CDNhC,gBAAiB,CACjB,eAAgB,CEqBlB,sBAhBa,CAiBb,+BARc,CFZZ,iBAAkB,CAClB,kBFKgB,CIalB,cAhBa,CAiBb,mBARc,CFTZ,eGmByB,CDH3B,gBAhBa,CAiBb,qBARc,CFjBd,yGAYI,kBFiBwB,CE7B5B,2HAmBI,SAAU,CACV,kBFW2B,CEV3B,0BFWwC,CEVzC,yBEEH,sBAhBa,CAiBb,gCARc,CAOd,cAhBa,CAiBb,mBARc,CFUV,eGYsB,CDf1B,gBAhBa,CAiBb,oBARc,CFOX,yDEAH,gBAhBa,CAiBb,kBARc,CFeT,2BAKC,iBAAkB,CAFrB,gCAKG,YFbuB,CEQ1B,sCAQG,SFVyB,CEW1B,2HEpBL,sBAhBa,CAiBb,kCARc,CFmCV,wBFzCc,CE0Cd,aF1Cc,CE2Cd,eFNgB,CEDjB,mJAUG,UFTc,CEUd,kBF/BuB,CEoB1B,g0BAkBG,SAAU,CACV,aFtBe,CEuBf,kBFhC2B,CEiC5B,2GAOC,kBFlCc,CE8BjB,gMAWK,WAAY,CIlFtB,gCACE,oBAAqB,CACrB,iCAAkC,CAClC,mCAAoC,CACpC,yBAA0B,CAC1B,uBAAwB,CACxB,iBAAkB,CAClB,uBAAwB,CACxB,qBAAsB,CACtB,+BAAgC,CAChC,6BAA8B,CAC9B,SAAU,CACV,UAAW,CACX,kBAAmB,CACnB,gBAAiB,CACjB,qBAAsB,CACtB,2FAAsF,CAhBxF,qCAmBI,UAAW,CACX,6BAA8B,CAC9B,UAAW,CACX,SAAU,CACV,WAAY,CACZ,WAAY,CACZ,eAAgB,CAChB,kBAAmB,CACnB,iBAAkB,CACnB,gDAID,GACE,sBAAuB,CAGzB,KACE,wBAAyB,CAAA",sourcesContent:['@include govuk-exports("govuk/component/button") {\n  $govuk-button-colour: govuk-colour("green", $legacy: #00823b);\n  $govuk-button-hover-colour: govuk-shade($govuk-button-colour, 20%);\n  $govuk-button-shadow-colour: govuk-shade($govuk-button-colour, 60%);\n  $govuk-button-text-colour: govuk-colour("white");\n\n  // Secondary button variables\n  $govuk-secondary-button-colour: govuk-colour("light-grey", $legacy: "grey-3");\n  $govuk-secondary-button-hover-colour: govuk-shade($govuk-secondary-button-colour, 10%);\n  $govuk-secondary-button-shadow-colour: govuk-shade($govuk-secondary-button-colour, 40%);\n  $govuk-secondary-button-text-colour: govuk-colour("black");\n\n  // Warning button variables\n  $govuk-warning-button-colour: govuk-colour("red");\n  $govuk-warning-button-hover-colour: govuk-shade($govuk-warning-button-colour, 20%);\n  $govuk-warning-button-shadow-colour: govuk-shade($govuk-warning-button-colour, 60%);\n  $govuk-warning-button-text-colour: govuk-colour("white");\n\n  // Because the shadow (s0) is visually \'part of\' the button, we need to reduce\n  // the height of the button to compensate by adjusting its padding (s1) and\n  // increase the bottom margin to include it (s2).\n  $button-shadow-size: $govuk-border-width-form-element;\n\n  .govuk-button {\n    @include govuk-font($size: 19, $line-height: 19px);\n\n    box-sizing: border-box;\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    margin-top: 0;\n    margin-right: 0;\n    margin-left: 0;\n    @include govuk-responsive-margin(6, "bottom", $adjustment: $button-shadow-size); // s2\n    padding: (govuk-spacing(2) - $govuk-border-width-form-element) govuk-spacing(2) (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2)); // s1\n    border: $govuk-border-width-form-element solid transparent;\n    border-radius: 0;\n    color: $govuk-button-text-colour;\n    background-color: $govuk-button-colour;\n    box-shadow: 0 $button-shadow-size 0 $govuk-button-shadow-colour; // s0\n    text-align: center;\n    vertical-align: top;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n    @include govuk-if-ie8 {\n      border-bottom: $button-shadow-size solid $govuk-button-shadow-colour;\n    }\n\n    @include govuk-media-query($from: tablet) {\n      width: auto;\n    }\n\n    // Ensure that any global link styles are overridden\n    &:link,\n    &:visited,\n    &:active,\n    &:hover {\n      color: $govuk-button-text-colour;\n      text-decoration: none;\n    }\n\n    // Fix unwanted button padding in Firefox\n    &::-moz-focus-inner {\n      padding: 0;\n      border: 0;\n    }\n\n    &:hover {\n      background-color: $govuk-button-hover-colour;\n    }\n\n    &:active {\n      // Bump the button down so it looks like its being pressed in\n      top: $button-shadow-size;\n\n      @include govuk-if-ie8 {\n        border-bottom-width: 0;\n      }\n    }\n\n    &:focus {\n      border-color: $govuk-focus-colour;\n      // When colours are overridden, for example when users have a dark mode,\n      // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n      // transparent outline which will be set to a visible colour.\n      // Since Internet Explorer 8 does not support box-shadow, we want to force the user-agent outlines\n      @include govuk-not-ie8 {\n        outline: $govuk-focus-width solid transparent;\n      }\n      // Since Internet Explorer does not support `:not()` we set a clearer focus style to match user-agent outlines.\n      @include govuk-if-ie8 {\n        color: $govuk-focus-text-colour;\n        background-color: $govuk-focus-colour;\n      }\n      box-shadow: inset 0 0 0 1px $govuk-focus-colour;\n    }\n\n    // alphagov/govuk_template includes a specific a:link:focus selector\n    // designed to make unvisited links a slightly darker blue when focussed, so\n    // we need to override the text colour for that combination of selectors so\n    // so that unvisited links styled as buttons do not end up with dark blue\n    // text when focussed.\n    @include govuk-compatibility(govuk_template) {\n      &:link:focus {\n        color: $govuk-button-text-colour;\n      }\n    }\n\n    &:focus:not(:active):not(:hover) {\n      border-color: $govuk-focus-colour;\n      color: $govuk-focus-text-colour;\n      background-color: $govuk-focus-colour;\n      box-shadow: 0 2px 0 $govuk-focus-text-colour;\n    }\n\n    // The following adjustments do not work for <input type="button"> as\n    // non-container elements cannot include pseudo elements (i.e. ::before).\n\n    // Use a pseudo element to expand the click target area to include the\n    // button\'s shadow as well, in case users try to click it.\n    &:before {\n      content: "";\n      display: block;\n\n      position: absolute;\n\n      top: -$govuk-border-width-form-element;\n      right: -$govuk-border-width-form-element;\n      bottom: -($govuk-border-width-form-element + $button-shadow-size);\n      left: -$govuk-border-width-form-element;\n\n      background: transparent;\n    }\n\n    // When the button is active it is shifted down by $button-shadow-size to\n    // denote a \'pressed\' state. If the user happened to click at the very top\n    // of the button, their mouse is no longer over the button (because it has\n    // \'moved beneath them\') and so the click event is not fired.\n    //\n    // This corrects that by shifting the top of the pseudo element so that it\n    // continues to cover the area that the user originally clicked, which means\n    // the click event is still fired.\n    //\n    // 🎉\n    &:active:before {\n      top: -($govuk-border-width-form-element + $button-shadow-size);\n    }\n  }\n\n  .govuk-button--disabled,\n  .govuk-button[disabled="disabled"],\n  .govuk-button[disabled] {\n    opacity: (.5);\n\n    &:hover {\n      background-color: $govuk-button-colour;\n      cursor: default;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    &:active {\n      top: 0;\n      box-shadow: 0 $button-shadow-size 0 $govuk-button-shadow-colour; // s0\n      @include govuk-if-ie8 {\n        border-bottom: $button-shadow-size solid $govuk-button-shadow-colour; // s0\n      }\n    }\n  }\n\n  .govuk-button--secondary {\n    background-color: $govuk-secondary-button-colour;\n    box-shadow: 0 $button-shadow-size 0 $govuk-secondary-button-shadow-colour;\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:hover {\n      color: $govuk-secondary-button-text-colour;\n    }\n\n    // alphagov/govuk_template includes a specific a:link:focus selector\n    // designed to make unvisited links a slightly darker blue when focussed, so\n    // we need to override the text colour for that combination of selectors so\n    // so that unvisited links styled as buttons do not end up with dark blue\n    // text when focussed.\n    @include govuk-compatibility(govuk_template) {\n      &:link:focus {\n        color: $govuk-secondary-button-text-colour;\n      }\n    }\n\n    &:hover {\n      background-color: $govuk-secondary-button-hover-colour;\n\n      &[disabled] {\n        background-color: $govuk-secondary-button-colour;\n      }\n    }\n  }\n\n  .govuk-button--warning {\n    background-color: $govuk-warning-button-colour;\n    box-shadow: 0 $button-shadow-size 0 $govuk-warning-button-shadow-colour;\n\n    &,\n    &:link,\n    &:visited,\n    &:active,\n    &:hover {\n      color: $govuk-warning-button-text-colour;\n    }\n\n    // alphagov/govuk_template includes a specific a:link:focus selector\n    // designed to make unvisited links a slightly darker blue when focussed, so\n    // we need to override the text colour for that combination of selectors so\n    // so that unvisited links styled as buttons do not end up with dark blue\n    // text when focussed.\n    @include govuk-compatibility(govuk_template) {\n      &:link:focus {\n        color: $govuk-warning-button-text-colour;\n      }\n    }\n\n    &:hover {\n      background-color: $govuk-warning-button-hover-colour;\n\n      &[disabled] {\n        background-color: $govuk-warning-button-colour;\n      }\n    }\n  }\n\n  .govuk-button--start {\n    @include govuk-typography-weight-bold;\n    @include govuk-typography-responsive($size: 24, $override-line-height: 1);\n\n    display: -webkit-inline-box;\n\n    display: -webkit-inline-flex;\n\n    display: -ms-inline-flexbox;\n\n    display: inline-flex;\n    min-height: auto;\n\n    -webkit-box-pack: center;\n\n    -webkit-justify-content: center;\n\n        -ms-flex-pack: center;\n\n            justify-content: center;\n  }\n\n  .govuk-button__start-icon {\n    margin-left: govuk-spacing(1);\n\n    @include govuk-media-query($from: desktop) {\n      margin-left: govuk-spacing(2);\n    }\n    vertical-align: middle;\n    -webkit-flex-shrink: 0;\n        -ms-flex-negative: 0;\n            flex-shrink: 0;\n    -webkit-align-self: center;\n        -ms-flex-item-align: center;\n            align-self: center;\n  }\n\n  @if $govuk-use-legacy-font {\n    // Begin adjustments for font baseline offset when using v1 of nta\n    $offset: 2;\n\n    .govuk-button {\n      padding-top: (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2) + $offset); // s1\n      padding-bottom: (govuk-spacing(2) - $govuk-border-width-form-element - ($button-shadow-size / 2) - $offset + 1); // s1\n    }\n\n    .govuk-button__start-icon {\n      margin-top: -3px;\n    }\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n",'////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n','@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n','@import "../settings/compatibility";\n@import "../settings/colours-palette";\n@import "../settings/colours-organisations";\n\n////\n/// @group helpers/colour\n////\n\n/// Get colour\n///\n/// @param {String} $colour - Name of colour from the colour palette\n///   (`$govuk-colours`)\n/// @param {String} $legacy - Either the name of colour from the legacy palette\n///   or a colour literal, to return instead when in \'legacy mode\' - matching\n///   the palette from GOV.UK Template, Elements or Frontend Toolkit\n/// @return {Colour} Representation of named colour\n///\n/// @example scss - Using legacy colours from the palette\n///  .foo {\n///    background-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n///  }\n///\n/// @example scss - Using legacy colour literals\n///  .foo {\n///    background-colour: govuk-colour("green", $legacy: #BADA55);\n///  }\n///\n/// @throw if `$colour` is not a colour from the colour palette\n/// @access public\n\n@function govuk-colour($colour, $legacy: false) {\n  @if ($govuk-use-legacy-palette and $legacy) {\n    @if (type-of($legacy) == "color") {\n      @return $legacy;\n    }\n    $colour: $legacy;\n  }\n\n  $colour: quote($colour);\n\n  @if not map-has-key($govuk-colours, $colour) {\n    @error "Unknown colour `#{$colour}`";\n  }\n\n  @return map-get($govuk-colours, $colour);\n}\n\n/// Get the colour for a government organisation\n///\n/// @param {String} $organisation - Organisation name, lowercase, hyphenated\n/// @param {Boolean} $websafe [true] - By default a \'websafe\' version of the\n///   colour will be returned which meets contrast requirements . If you want to\n///   use the non-websafe version you can set this to `false` but your should\n///   ensure that you still meets contrast requirements for accessibility - for\n///   example, do not use the non-websafe version for text.\n///\n/// @return {Colour} Representation of colour for organisation\n/// @throw if `$organisation` is not a known organisation\n/// @access public\n\n@function govuk-organisation-colour($organisation, $websafe: true) {\n  @if not map-has-key($govuk-colours-organisations, $organisation) {\n    @error "Unknown organisation `#{$organisation}`";\n  }\n\n  $org-colour: map-get($govuk-colours-organisations, $organisation);\n\n  @if ($websafe and map-has-key($org-colour, colour-websafe)) {\n    @return map-get($org-colour, colour-websafe);\n  } @else {\n    @return map-get($org-colour, colour);\n  }\n}\n\n/// Make a colour darker by mixing it with black\n///\n/// @param {Colour} $colour - colour to shade\n/// @param {Number} $percentage - percentage of `$colour` in returned color\n/// @return {Colour}\n/// @access public\n\n@function govuk-shade($colour, $percentage) {\n  @return mix(#000000, $colour, $percentage);\n}\n\n/// Make a colour lighter by mixing it with white\n///\n/// @param {Colour} $colour - colour to tint\n/// @param {Number} $percentage - percentage of `$colour` in returned color\n/// @return {Colour}\n/// @access public\n\n@function govuk-tint($colour, $percentage) {\n  @return mix(govuk-colour("white"), $colour, $percentage);\n}\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","////\n/// @group settings/measurements\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: 25%,\n  one-third: 33.3333%,\n  one-half: 50%,\n  two-thirds: 66.6666%,\n  three-quarters: 75%,\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form control border width when in error state\n///\n/// @type Number\n/// @access public\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\n///   difference in thickness for inputs in the error state, in order to\n///   maintain a distinct focus state.\n\n$govuk-border-width-form-element-error: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "node_modules/govuk-frontend/govuk/components/button/button";\n\n@include lbh-exports("lbh/component/button") {\n  .lbh-button {\n    @include lbh-font;\n    margin-top: 1.5em;\n    margin-bottom: 0;\n    @include lbh-rem(padding, 12, 22, 10);\n    border-radius: 4px;\n    background: lbh-colour("lbh-a01");\n    @include lbh-rem(font-size, 19);\n    font-weight: $lbh-font-weight-regular;\n    @include lbh-rem(line-height, 23);\n\n    &:not(&--warning):not(&--disabled):not([disabled]):hover {\n      background: lbh-colour("lbh-primary-hover");\n    }\n\n    &:disabled,\n    &:hover[disabled],\n    &--disabled,\n    &--disabled:hover {\n      opacity: 1;\n      background: lbh-colour("lbh-primary-disabled");\n      box-shadow: 0 2px 0 lbh-colour("lbh-primary-disabled-inner-shadow");\n    }\n\n    &--start {\n      @include lbh-rem(padding, 15, 24, 13);\n      @include lbh-rem(font-size, 27);\n      font-weight: $lbh-font-weight-medium;\n      @include lbh-rem(line-height, 30);\n\n      .govuk-button__start-icon {\n        @include lbh-rem(margin-left, 24);\n      }\n    }\n\n    &--add {\n      svg {\n        margin-right: 10px;\n      }\n      svg path {\n        fill: lbh-colour("lbh-primary-button");\n      }\n      &:hover svg path {\n        fill: lbh-colour("lbh-secondary-button");\n      }\n    }\n\n    &--add,\n    &--secondary,\n    &--secondary:link,\n    &--secondary:visited {\n      @include lbh-rem(padding, 13, 22, 11);\n      border: 1px solid lbh-colour("lbh-a01");\n      color: lbh-colour("lbh-a01");\n      background: lbh-colour("lbh-white");\n\n      &:hover {\n        color: lbh-colour("lbh-white");\n        background: lbh-colour("lbh-primary-button");\n      }\n\n      &:disabled,\n      &.lbh-button--disabled,\n      &:hover[disabled],\n      &.lbh-button--disabled:hover {\n        opacity: 1;\n        color: lbh-colour("lbh-grey-1");\n        background: lbh-colour("lbh-secondary-disabled");\n      }\n    }\n\n    &--warning {\n      &,\n      &[disabled],\n      &:hover[disabled] {\n        background: lbh-colour("lbh-error");\n      }\n\n      &:disabled,\n      &.lbh-button--disabled {\n        &,\n        &:hover {\n          opacity: 0.5;\n        }\n      }\n    }\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-button/button";\n\n.button-loading-indicator {\n  display: inline-block;\n  border-top: 2px solid currentcolor;\n  border-right: 2px solid currentcolor;\n  border-bottom-style: solid;\n  border-left-style: solid;\n  border-radius: 50%;\n  border-bottom-width: 2px;\n  border-left-width: 2px;\n  border-bottom-color: transparent;\n  border-left-color: transparent;\n  width: 1em;\n  height: 1em;\n  color: currentColor;\n  margin-right: 1em;\n  vertical-align: middle;\n  animation: buttonLoadingIndicatorRotation 0.45s linear 0s infinite normal none running;\n\n  span {\n    border: 0px;\n    clip: rect(0px, 0px, 0px, 0px);\n    height: 1px;\n    width: 1px;\n    margin: -1px;\n    padding: 0px;\n    overflow: hidden;\n    white-space: nowrap;\n    position: absolute;\n  }\n}\n\n@keyframes buttonLoadingIndicatorRotation {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-button":"govuk-button-2Xhmv",govukButton:"govuk-button-2Xhmv","govuk-button--disabled":"govuk-button--disabled-3Wr-V",govukButtonDisabled:"govuk-button--disabled-3Wr-V","govuk-button--secondary":"govuk-button--secondary-12soh",govukButtonSecondary:"govuk-button--secondary-12soh","govuk-button--warning":"govuk-button--warning-_RNaX",govukButtonWarning:"govuk-button--warning-_RNaX","govuk-button--start":"govuk-button--start-1dM9o",govukButtonStart:"govuk-button--start-1dM9o","govuk-button__start-icon":"govuk-button__start-icon-pTwjs",govukButtonStartIcon:"govuk-button__start-icon-pTwjs","lbh-button":"lbh-button-26Fhd",lbhButton:"lbh-button-26Fhd","lbh-button--warning":"lbh-button--warning-3ULNb",lbhButtonWarning:"lbh-button--warning-3ULNb","lbh-button--disabled":"lbh-button--disabled-qoH4k",lbhButtonDisabled:"lbh-button--disabled-qoH4k","lbh-button--start":"lbh-button--start-3aHSo",lbhButtonStart:"lbh-button--start-3aHSo","lbh-button--add":"lbh-button--add-1EIpx",lbhButtonAdd:"lbh-button--add-1EIpx","lbh-button--secondary":"lbh-button--secondary-3eRQn",lbhButtonSecondary:"lbh-button--secondary-3eRQn","button-loading-indicator":"button-loading-indicator-3iC-C",buttonLoadingIndicator:"button-loading-indicator-3iC-C",buttonLoadingIndicatorRotation:"buttonLoadingIndicatorRotation-nwsDq"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/center/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".center-1GkBO{display:flex}.center--vertical-26oXG{align-items:center}.center--horizontal-1l3dY{justify-content:center}\n","",{version:3,sources:["webpack://./packages/react/src/components/center/styles.module.scss"],names:[],mappings:"AAAA,cACE,YAAa,CAEb,wBACE,kBAAmB,CACpB,0BAGC,sBAAuB",sourcesContent:[".center {\n  display: flex;\n\n  &--vertical {\n    align-items: center;\n  }\n\n  &--horizontal {\n    justify-content: center;\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={center:"center-1GkBO","center--vertical":"center--vertical-26oXG",centerVertical:"center--vertical-26oXG","center--horizontal":"center--horizontal-1l3dY",centerHorizontal:"center--horizontal-1l3dY"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/checkboxes/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-2kLLy{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-2kLLy{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-2kLLy{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-2kLLy{font-size:14pt;line-height:1.15}}.govuk-label-3ghpa:not(.govuk-label--m-FqQJ9):not(.govuk-label--l-1be2c):not(.govuk-label--xl-3sWbb)+.govuk-hint-2kLLy{margin-bottom:10px}.govuk-fieldset__legend-2JGUG:not(.govuk-fieldset__legend--m-Cx2QX):not(.govuk-fieldset__legend--l-yfrKO):not(.govuk-fieldset__legend--xl-2WNnv)+.govuk-hint-2kLLy{margin-bottom:10px}.govuk-fieldset__legend-2JGUG+.govuk-hint-2kLLy{margin-top:-5px}.lbh-hint-3imoL{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-3imoL{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-error-message-2H2vX{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-2H2vX{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-2H2vX{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-2H2vX{font-size:14pt;line-height:1.15}}.lbh-error-message-3jyIP,.lbh-form-group-21vwJ .govuk-error-message-2H2vX{margin-top:0;margin-bottom:0;color:#be3a34;font-weight:600}.lbh-error-message-3jyIP .govuk-input--error-xSvdP,.lbh-form-group-21vwJ .govuk-input--error-xSvdP{border-color:#be3a34}.lbh-error-message-3jyIP .govuk-form-group--error-2NBkw,.lbh-form-group-21vwJ.govuk-form-group--error-2NBkw{border-color:#be3a34}.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG+.lbh-error-message-3jyIP,.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG+.govuk-error-message-2H2vX{margin-top:6px;margin-top:.375rem}.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG+.govuk-hint-2kLLy+.lbh-error-message-3jyIP,.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG+.govuk-hint-2kLLy+.govuk-error-message-2H2vX{margin-top:12px;margin-top:.75rem}.lbh-error-message-3jyIP+.lbh-input-2D3UI,.lbh-error-message-3jyIP+.lbh-textarea-1rBNv{margin-top:6px;margin-top:.375rem}.govuk-visually-hidden-261FO{position:absolute !important;width:1px !important;height:1px !important;margin:0 !important;padding:0 !important;overflow:hidden !important;clip:rect(0 0 0 0) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;border:0 !important;white-space:nowrap !important}.govuk-fieldset-3gy_x{min-width:0;margin:0;padding:0;border:0}.govuk-fieldset-3gy_x:after{content:"";display:block;clear:both}@supports not (caret-color: auto){.govuk-fieldset-3gy_x,x:-moz-any-link{display:table-cell}}.govuk-fieldset__legend-2JGUG{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;box-sizing:border-box;display:table;max-width:100%;margin-bottom:10px;padding:0;white-space:normal}@media print{.govuk-fieldset__legend-2JGUG{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend-2JGUG{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-fieldset__legend-2JGUG{font-size:14pt;line-height:1.15}}@media print{.govuk-fieldset__legend-2JGUG{color:#000}}.govuk-fieldset__legend--xl-2WNnv{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-fieldset__legend--xl-2WNnv{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--xl-2WNnv{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-fieldset__legend--xl-2WNnv{font-size:32pt;line-height:1.15}}.govuk-fieldset__legend--l-yfrKO{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-fieldset__legend--l-yfrKO{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--l-yfrKO{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-fieldset__legend--l-yfrKO{font-size:24pt;line-height:1.05}}.govuk-fieldset__legend--m-Cx2QX{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:15px}@media print{.govuk-fieldset__legend--m-Cx2QX{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--m-Cx2QX{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-fieldset__legend--m-Cx2QX{font-size:18pt;line-height:1.15}}.govuk-fieldset__legend--s-1nJVq{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-fieldset__legend--s-1nJVq{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--s-1nJVq{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-fieldset__legend--s-1nJVq{font-size:14pt;line-height:1.15}}.govuk-fieldset__heading-2hWoh{margin:0;font-size:inherit;font-weight:inherit}.lbh-fieldset-3GQZP{margin-top:1.5em}.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem;margin-bottom:0}@media (min-width: 40.0625em){.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG{font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}}.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--l-yfrKO,.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--xl-2WNnv,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--l-yfrKO,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--xl-2WNnv{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:32px;font-size:2rem;line-height:38px;line-height:2.375rem}@media (min-width: 40.0625em){.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--l-yfrKO,.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--xl-2WNnv,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--l-yfrKO,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--xl-2WNnv{font-size:48px;font-size:3rem;line-height:58px;line-height:3.625rem}}.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--m-Cx2QX,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--m-Cx2QX{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--m-Cx2QX,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG.govuk-fieldset__legend--m-Cx2QX{font-size:30px;font-size:1.875rem;line-height:36px;line-height:2.25rem}}.lbh-form-group-21vwJ .govuk-fieldset__legend-2JGUG+.govuk-hint-2kLLy,.lbh-fieldset-3GQZP .govuk-fieldset__legend-2JGUG+.govuk-hint-2kLLy{margin-top:12px;margin-top:.75rem}.govuk-label-3ghpa{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-3ghpa{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-3ghpa{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-3ghpa{font-size:14pt;line-height:1.15}}@media print{.govuk-label-3ghpa{color:#000}}.govuk-label--xl-3sWbb{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-3sWbb{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-3sWbb{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-3sWbb{font-size:32pt;line-height:1.15}}.govuk-label--l-1be2c{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-1be2c{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-1be2c{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-1be2c{font-size:24pt;line-height:1.05}}.govuk-label--m-FqQJ9{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-FqQJ9{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-FqQJ9{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-FqQJ9{font-size:18pt;line-height:1.15}}.govuk-label--s-2eM-k{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2eM-k{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2eM-k{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2eM-k{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-gU-lr{margin:0}.lbh-label-SwQx3{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:6px;margin-bottom:.375rem}@media (min-width: 40.0625em){.lbh-label-SwQx3{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-label--xl-3sWbb{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-3sWbb{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-3sWbb{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-3sWbb{font-size:32pt;line-height:1.15}}.govuk-label--l-1be2c{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-1be2c{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-1be2c{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-1be2c{font-size:24pt;line-height:1.05}}.govuk-label--m-FqQJ9{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-FqQJ9{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-FqQJ9{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-FqQJ9{font-size:18pt;line-height:1.15}}.govuk-label--s-2eM-k{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2eM-k{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2eM-k{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2eM-k{font-size:14pt;line-height:1.15}}.govuk-checkboxes__item-3uo-C{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;position:relative;min-height:40px;margin-bottom:10px;padding-left:40px;clear:left}@media print{.govuk-checkboxes__item-3uo-C{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-checkboxes__item-3uo-C{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-checkboxes__item-3uo-C{font-size:14pt;line-height:1.15}}.govuk-checkboxes__item-3uo-C:last-child,.govuk-checkboxes__item-3uo-C:last-of-type{margin-bottom:0}.govuk-checkboxes__input-3ZlZo{cursor:pointer;position:absolute;z-index:1;top:-2px;left:-2px;width:44px;height:44px;margin:0;opacity:0}.govuk-checkboxes__label-2IEKW{display:inline-block;margin-bottom:0;padding:8px 15px 5px;cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation}.govuk-checkboxes__label-2IEKW:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:40px;height:40px;border:2px solid currentColor;background:transparent}.govuk-checkboxes__label-2IEKW:after{content:"";box-sizing:border-box;position:absolute;top:11px;left:9px;width:23px;height:12px;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);border:solid;border-width:0 0 5px 5px;border-top-color:transparent;opacity:0;background:transparent}.govuk-checkboxes__hint-k9xXs{display:block;padding-right:15px;padding-left:15px}.govuk-checkboxes__input-3ZlZo:focus+.govuk-checkboxes__label-2IEKW:before{border-width:4px;box-shadow:0 0 0 3px #ffc845}.govuk-checkboxes__input-3ZlZo:checked+.govuk-checkboxes__label-2IEKW:after{opacity:1}.govuk-checkboxes__input-3ZlZo:disabled,.govuk-checkboxes__input-3ZlZo:disabled+.govuk-checkboxes__label-2IEKW{cursor:default}.govuk-checkboxes__input-3ZlZo:disabled+.govuk-checkboxes__label-2IEKW{opacity:.5}.govuk-checkboxes__divider-cSiX5{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;width:40px;margin-bottom:10px;text-align:center}@media print{.govuk-checkboxes__divider-cSiX5{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-checkboxes__divider-cSiX5{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-checkboxes__divider-cSiX5{font-size:14pt;line-height:1.15}}@media print{.govuk-checkboxes__divider-cSiX5{color:#000}}.govuk-checkboxes__conditional-3O1tS{margin-bottom:15px;margin-left:18px;padding-left:33px;border-left:4px solid #b1b4b6}@media (min-width: 40.0625em){.govuk-checkboxes__conditional-3O1tS{margin-bottom:20px}}.js-enabled .govuk-checkboxes__conditional--hidden-3Ao51{display:none}.govuk-checkboxes__conditional-3O1tS>:last-child{margin-bottom:0}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__item-3uo-C{min-height:0;margin-bottom:0;padding-left:34px;float:left}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__item-3uo-C:after{content:"";display:block;clear:both}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__input-3ZlZo{left:-10px}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__label-2IEKW{margin-top:-2px;padding:13px 15px 13px 1px;float:left}@media (min-width: 40.0625em){.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__label-2IEKW{padding:11px 15px 10px 1px}}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__label-2IEKW:before{top:8px;width:24px;height:24px}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__label-2IEKW:after{top:15px;left:6px;width:12px;height:6.5px;border-width:0 0 3px 3px}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__hint-k9xXs{padding:0;clear:both}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__conditional-3O1tS{margin-left:10px;padding-left:20px;clear:both}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__item-3uo-C:hover .govuk-checkboxes__input-3ZlZo:not(:disabled)+.govuk-checkboxes__label-2IEKW:before{box-shadow:0 0 0 10px #b1b4b6}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__item-3uo-C:hover .govuk-checkboxes__input-3ZlZo:focus+.govuk-checkboxes__label-2IEKW:before{box-shadow:0 0 0 3px #ffc845,0 0 0 10px #b1b4b6}@media (hover: none), (pointer: coarse){.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__item-3uo-C:hover .govuk-checkboxes__input-3ZlZo:not(:disabled)+.govuk-checkboxes__label-2IEKW:before{box-shadow:initial}.govuk-checkboxes--small-V_wt_ .govuk-checkboxes__item-3uo-C:hover .govuk-checkboxes__input-3ZlZo:focus+.govuk-checkboxes__label-2IEKW:before{box-shadow:0 0 0 3px #ffc845}}.lbh-checkboxes-1rsX_{margin-bottom:0}.lbh-checkboxes-1rsX_ .govuk-checkboxes__label-2IEKW{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:6px;margin-bottom:.375rem;margin-top:0;padding-top:9px;padding-top:.5625rem;padding-bottom:8px;padding-bottom:.5rem}@media (min-width: 40.0625em){.lbh-checkboxes-1rsX_ .govuk-checkboxes__label-2IEKW{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-checkboxes-1rsX_ .govuk-checkboxes__item-3uo-C{margin-top:0;margin-bottom:12px;margin-bottom:.75rem}.lbh-checkboxes-1rsX_ .govuk-hint-2kLLy{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-checkboxes-1rsX_ .govuk-hint-2kLLy{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-checkboxes-1rsX_ .govuk-input-ci9mf{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:0}@media (min-width: 40.0625em){.lbh-checkboxes-1rsX_ .govuk-input-ci9mf{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-checkboxes__label-2IEKW{margin-top:0}.govuk-checkboxes__conditional-3O1tS{}.govuk-checkboxes__conditional--hidden{display:none}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-error-message/_error-message.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_visually-hidden.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/fieldset/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_clearfix.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-fieldset/_fieldset.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-label/_label.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/checkboxes/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-checkboxes/_checkboxes.scss","webpack://./packages/react/src/components/checkboxes/styles.module.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb,CKXD,2BbcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,Ca5EvC,aAAc,CACd,kBRSK,CQRL,UAAW,CAEX,aP6BY,CC+LR,aMnON,2Bb6BE,sBE8BgC,CWnDjC,CN2NK,8BMnON,2Bb4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CavExC,CN2NK,aMnON,2BbuJM,cGFa,CHGb,gBGFe,CU9IpB,CCND,0EAEE,YAAa,CACb,eAAgB,CAChB,aJqCkB,CIpClB,eFkCwB,CEjCzB,mGAIC,oBJ+BkB,CI9BnB,4GAIC,oBJ0BkB,CIzBnB,4JHQD,cAhBa,CAiBb,kBARc,CGIb,gMHGD,eAhBa,CAiBb,iBARc,CGSb,uFHFD,cAhBa,CAiBb,kBARc,CGcb,6BClBD,4BAA4C,CAE5C,oBAAoC,CACpC,qBAAqC,CAGrC,mBAAmC,CACnC,oBAAoC,CAEpC,0BAA0C,CAC1C,6BAA6C,CAC7C,uCAAuD,CAC/C,+BAA+C,CAEvD,mBAAmC,CAKnC,6BAA6C,CDI5C,sBErCC,WAAY,CACZ,QAAS,CACT,SAAU,CACV,QAAS,CCIX,4BACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,kCDDC,sCAEE,kBAAmB,CACpB,CAGH,8BhBHA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CUpBd,qBAAsB,CACtB,aAAc,CACd,cAAe,CACf,kBXfK,CWgBL,SAAU,CAEV,kBAAmB,CTqMf,aSlNN,8BhBYE,sBE8BgC,Cc5BjC,CToMK,8BSlNN,8BhB2IM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgBhDxC,CToMK,aSlNN,8BhBsIM,cGFa,CHGb,gBGFe,CavHpB,CToMK,aSlNN,8BhB0BE,UkBI6B,CFhB9B,CAID,kChBrBA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CgB1CvC,kBXxBK,CEsND,aShMN,kChBNE,sBE8BgC,CcrBjC,CT6LK,8BShMN,kChByHM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CgBzCxC,CT6LK,aShMN,kChBoHM,cG1Da,CH2Db,gBG1De,CaxDpB,CAED,iChB1BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CgBrCvC,kBX7BK,CEsND,aS3LN,iChBXE,sBE8BgC,CchBjC,CTwLK,8BS3LN,iChBoHM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CgBpCxC,CTwLK,aS3LN,iChB+GM,cG5Ca,CH6Cb,gBG5Ce,CajEpB,CAED,iChB/BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CgBhCvC,kBXlCK,CEsND,aStLN,iChBhBE,sBE8BgC,CcXjC,CTmLK,8BStLN,iChB+GM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CgB/BxC,CTmLK,aStLN,iChB0GM,cGhBa,CHiBb,gBGhBe,CaxFpB,CAED,iChBpCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aSjLN,iChBrBE,sBE8BgC,CcPjC,CT+KK,8BSjLN,iChB0GM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgB3BxC,CT+KK,aSjLN,iChBqGM,cGFa,CHGb,gBGFe,CalGpB,CAKD,+BACE,QAAS,CACT,iBAAkB,CAClB,mBAAoB,CG1DtB,oBACE,gBAAiB,CAClB,sGVID,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CQVZ,eAAgB,CZ0NZ,8BY7NN,sGRoBA,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CQIb,CAjBD,8UVEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CJgNR,8BY7NN,8URoBA,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CQLX,CARH,sKVEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CJgNR,8BY7NN,sKRoBA,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,mBARc,CQDX,CAZH,0IRoBA,eAhBa,CAiBb,iBARc,CQGX,mBnBRH,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CcxCd,aAAc,CAEd,iBfKI,CEwNA,aanON,mBpB6BE,sBE8BgC,CkBpDjC,Cb4NK,8BanON,mBpB4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CoBxExC,Cb4NK,aanON,mBpBuJM,cGFa,CHGb,gBGFe,CiB/IpB,Cb4NK,aanON,mBpB2CE,UkBI6B,CExC9B,CAID,uBpBGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CoBlEvC,kBfAK,CEsND,aaxNN,uBpBkBE,sBE8BgC,CkB7CjC,CbqNK,8BaxNN,uBpBiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CoBjExC,CbqNK,aaxNN,uBpB4IM,cG1Da,CH2Db,gBG1De,CiBhFpB,CAED,sBpBFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CoB7DvC,kBfLK,CEsND,aanNN,sBpBaE,sBE8BgC,CkBxCjC,CbgNK,8BanNN,sBpB4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CoB5DxC,CbgNK,aanNN,sBpBuIM,cG5Ca,CH6Cb,gBG5Ce,CiBzFpB,CAED,sBpBPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CoBxDvC,kBfXK,CEuND,aa9MN,sBpBQE,sBE8BgC,CkBnCjC,Cb2MK,8Ba9MN,sBpBuIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CoBvDxC,Cb2MK,aa9MN,sBpBkIM,cGhBa,CHiBb,gBGhBe,CiBhHpB,CAED,sBpBZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aazMN,sBpBGE,sBE8BgC,CkB/BjC,CbuMK,8BazMN,sBpBkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CoBnDxC,CbuMK,aazMN,sBpB6HM,cGFa,CHGb,gBGFe,CiB1HpB,CAQD,2BACE,QAAS,CC9BX,iBZCA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CAOd,iBAhBa,CAiBb,qBARc,CJgNR,8Bc5NN,iBVmBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CUVb,CAID,uBrBCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CqBhEvC,kBhBFK,CEsND,actNN,uBrBgBE,sBE8BgC,CmB3CjC,CdmNK,8BctNN,uBrB+IM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CqB/DxC,CdmNK,actNN,uBrB0IM,cG1Da,CH2Db,gBG1De,CkB9EpB,CAED,sBrBJA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CqB3DvC,kBhBPK,CEsND,acjNN,sBrBWE,sBE8BgC,CmBtCjC,Cd8MK,8BcjNN,sBrB0IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CqB1DxC,Cd8MK,acjNN,sBrBqIM,cG5Ca,CH6Cb,gBG5Ce,CkBvFpB,CAED,sBrBTA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CqBtDvC,kBhBbK,CEuND,ac5MN,sBrBME,sBE8BgC,CmBjCjC,CdyMK,8Bc5MN,sBrBqIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CqBrDxC,CdyMK,ac5MN,sBrBgIM,cGhBa,CHiBb,gBGhBe,CkB9GpB,CAED,sBrBdA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,acvMN,sBrBCE,sBE8BgC,CmB7BjC,CdqMK,8BcvMN,sBrBgIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CqBjDxC,CdqMK,acvMN,sBrB2HM,cGFa,CHGb,gBGFe,CkBxHpB,CCnBD,8BtBGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CsBjEvC,aAAc,CACd,iBAAkB,CAElB,eAV0B,CAY1B,kBjBPK,CiBQL,iBAb0B,CAe1B,UAAW,Cf6MP,aexNN,8BtBkBE,sBE8BgC,CoBpCjC,Cf4MK,8BexNN,8BtBiJM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CsBxDxC,Cf4MK,aexNN,8BtB4IM,cGFa,CHGb,gBGFe,CmB/HpB,CAED,oFAEE,eAAgB,CACjB,+BAKC,cAAe,CAKb,iBAAkB,CAElB,SAAU,CACV,QAAuB,CACvB,SAAwB,CAExB,UAtC0B,CAuC1B,WAvC0B,CAwC1B,QAAS,CAET,SAAU,CAcb,+BAGC,oBAAqB,CACrB,eAAgB,CAChB,oBjBxDI,CiByDJ,cAAe,CAEf,6BAA8B,CAC1B,yBAA0B,CAC/B,sCAKG,UAAW,CACX,qBAAsB,CACtB,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,UA3EwB,CA4ExB,WA5EwB,CA6ExB,6BAA2D,CAC3D,sBAAuB,CACxB,qCAOC,UAAW,CACX,qBAAsB,CAEtB,iBAAkB,CAClB,QAAS,CACT,QAAS,CACT,UAAW,CACX,WAAY,CAEZ,gCAAiC,CAE7B,4BAA6B,CAEzB,wBAAyB,CACjC,YAAa,CACb,wBAAyB,CAGzB,4BAA6B,CAE7B,SAAU,CAEV,sBAAuB,CACxB,8BAID,aAAc,CACd,kBjB5GK,CiB6GL,iBjB7GK,CiB8GN,2EAIC,gBAAiB,CACjB,4BZhG0B,CYiG3B,4EAIC,SAAU,CACX,+GAKC,cAAe,CAChB,uEAGC,UAAW,CACZ,iCtBlID,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CgB8Gd,UAnJ0B,CAoJ1B,kBjB/IK,CiBgJL,iBAAkB,CfuEd,ae7EN,iCtBzHE,sBE8BgC,CoBkGjC,CfsEK,8Be7EN,iCtBMM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CsB8ExC,CfsEK,ae7EN,iCtBCM,cGFa,CHGb,gBGFe,CmBOpB,CfsEK,ae7EN,iCtB3GE,UkBI6B,CI8G9B,CAgBD,qCCtFM,kBlBhCM,CiBwHV,gBARyF,CASzF,iBALiG,CAMjG,6BhBnIiB,CCqLb,8BetDN,qCC/EQ,kBlBtCM,CiBkIb,CAPC,yDACE,YAAa,CAPjB,iDAWI,eAAgB,CACjB,6DAcC,YAAa,CACb,eAAgB,CAChB,iBANqD,CAOrD,UAAW,CLlMf,mEACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,8DK4MK,UAAwB,CAxB9B,8DAsCI,eAAgB,CAChB,0BAAuC,CACvC,UAAW,CfLT,8BenCN,8DA2CM,0BAAuC,CAE1C,CA7CH,qEAoDI,OAAqD,CACrD,UA7O8B,CA8O9B,WA9O8B,CAwLlC,oEA6DI,QAAS,CACT,QAAS,CACT,UAAW,CACX,YAAa,CACb,wBAAyB,CAjE7B,6DA6EI,SAAU,CACV,UAAW,CA9Ef,oEAoFI,gBADkF,CAElF,iBAAwE,CACxE,UAAW,CAtFf,uJAgGI,6BhBlPe,CgBkJnB,8IAyGI,+ChB3Pe,CgB8PhB,wCA5GH,uJAsHM,kBAAmB,CAtHzB,8IA0HM,4BZ1RsB,CY2RvB,CErTL,sBACE,eAAgB,CADlB,qDfEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CAOd,iBAhBa,CAiBb,qBARc,CaRV,YAAa,CbejB,eAhBa,CAiBb,oBARc,CAOd,kBAhBa,CAiBb,oBARc,CJgNR,8BiB7NN,qDboBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CaLX,CARH,oDAWI,YAAa,CbSjB,kBAhBa,CAiBb,oBARc,Cabd,wCfEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BiB7NN,wCboBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CaIX,CAjBH,yCfEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CaQV,eAAgB,CjBwMd,8BiB7NN,yCboBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CaSX,CC1BL,+BACE,YAAa,CACd,qCAGwC,CACxC,uCAIG,YAAa",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n','@import "node_modules/govuk-frontend/govuk/components/error-message/error-message";\n\n@include lbh-exports("lbh/component/error-message") {\n  .lbh-error-message,\n  .lbh-form-group .govuk-error-message {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: lbh-colour("lbh-error");\n    font-weight: $lbh-font-weight-medium;\n  }\n\n  .lbh-error-message .govuk-input--error,\n  .lbh-form-group .govuk-input--error {\n    border-color: lbh-colour("lbh-error");\n  }\n\n  .lbh-error-message .govuk-form-group--error,\n  .lbh-form-group.govuk-form-group--error {\n    border-color: lbh-colour("lbh-error");\n  }\n\n  .lbh-form-group .govuk-fieldset__legend + .lbh-error-message,\n  .lbh-form-group .govuk-fieldset__legend + .govuk-error-message {\n    @include lbh-rem(margin-top, 6);\n  }\n\n  .lbh-form-group .govuk-fieldset__legend + .govuk-hint + .lbh-error-message,\n  .lbh-form-group .govuk-fieldset__legend + .govuk-hint + .govuk-error-message {\n    @include lbh-rem(margin-top, 12);\n  }\n\n  .lbh-error-message + .lbh-input,\n  .lbh-error-message + .lbh-textarea {\n    @include lbh-rem(margin-top, 6);\n  }\n\n  // Needed so that it is hidden when this component is imported individually\n  .govuk-visually-hidden {\n    @include govuk-visually-hidden;\n  }\n}\n',"////\n/// @group helpers/accessibility\n////\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// This is slightly less opinionated about borders and padding to make it\n/// easier to style the focussed element.\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  &:active,\n  &:focus {\n    position: static if($important, !important, null);\n\n    width: auto if($important, !important, null);\n    height: auto if($important, !important, null);\n    margin: inherit if($important, !important, null);\n\n    overflow: visible if($important, !important, null);\n    clip: auto if($important, !important, null);\n    -webkit-clip-path: none if($important, !important, null);\n            clip-path: none if($important, !important, null);\n\n    white-space: inherit if($important, !important, null);\n  }\n}\n",'@include govuk-exports("govuk/component/fieldset") {\n  .govuk-fieldset {\n    min-width: 0;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    @include govuk-clearfix;\n  }\n\n  // Fix for Firefox < 53\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=504622\n  @supports not (caret-color: auto) {\n    .govuk-fieldset,\n    x:-moz-any-link { // stylelint-disable-line selector-type-no-unknown\n      display: table-cell;\n    }\n  }\n\n  .govuk-fieldset__legend {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    // Fix legend text wrapping in Edge and IE\n    // 1. IE9-11 & Edge 12-13\n    // 2. IE8-11\n    box-sizing: border-box; // 1\n    display: table;         // 2\n    max-width: 100%;        // 1\n    margin-bottom: govuk-spacing(2);\n    padding: 0;\n\n    white-space: normal;    // 1\n  }\n\n  // Modifiers that make legends look more like their equivalent headings\n\n  .govuk-fieldset__legend--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the legend contains an H1, we want the H1 to inherit all styles from\n  // the legend. Effectively we want to be able to treat the heading as if it is\n  // not there.\n  .govuk-fieldset__heading {\n    margin: 0;\n    font-size: inherit;\n    font-weight: inherit;\n  }\n}\n','////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &:after {\n    content: "";\n    display: block;\n    clear: both;\n  }\n}\n','////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "node_modules/govuk-frontend/govuk/components/fieldset/fieldset";\n\n@include lbh-exports("lbh/component/fieldset") {\n  .lbh-fieldset {\n    margin-top: 1.5em;\n  }\n\n  .lbh-form-group .govuk-fieldset__legend,\n  .lbh-fieldset .govuk-fieldset__legend {\n    @include lbh-heading-h3;\n    margin-bottom: 0;\n\n    &.govuk-fieldset__legend--l,\n    &.govuk-fieldset__legend--xl {\n      @include lbh-heading-h1;\n    }\n\n    &.govuk-fieldset__legend--m {\n      @include lbh-heading-h2;\n    }\n\n    & + .govuk-hint {\n      @include lbh-rem(margin-top, 12);\n    }\n  }\n}\n',"@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'@import "node_modules/govuk-frontend/govuk/components/label/label";\n\n@mixin lbh-label {\n  @include lbh-body-m;\n  @include lbh-rem(margin-bottom, 6);\n}\n\n@include lbh-exports("lbh/component/label") {\n  .lbh-label {\n    @include lbh-label;\n  }\n\n  // copied these over from govuk frontend because i couldn\'t see any other way to win the specificity battle\n  // solves: https://github.com/LBHackney-IT/lbh-frontend/issues/147\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n}\n',"@import \"../error-message/index\";\n@import \"../fieldset/index\";\n@import \"../hint/index\";\n@import \"../label/index\";\n\n@include govuk-exports(\"govuk/component/checkboxes\") {\n\n  $govuk-touch-target-size: 44px;\n  $govuk-checkboxes-size: 40px;\n  $govuk-small-checkboxes-size: 24px;\n  $govuk-checkboxes-label-padding-left-right: govuk-spacing(3);\n\n  .govuk-checkboxes__item {\n    @include govuk-font($size: 19);\n\n    display: block;\n    position: relative;\n\n    min-height: $govuk-checkboxes-size;\n\n    margin-bottom: govuk-spacing(2);\n    padding-left: $govuk-checkboxes-size;\n\n    clear: left;\n  }\n\n  .govuk-checkboxes__item:last-child,\n  .govuk-checkboxes__item:last-of-type {\n    margin-bottom: 0;\n  }\n\n  .govuk-checkboxes__input {\n    $input-offset: ($govuk-touch-target-size - $govuk-checkboxes-size) / 2;\n\n    cursor: pointer;\n\n    // IE8 doesn’t support pseudo-elements, so we don’t want to hide native\n    // elements there.\n    @include govuk-not-ie8 {\n      position: absolute;\n\n      z-index: 1;\n      top: $input-offset * -1;\n      left: $input-offset * -1;\n\n      width: $govuk-touch-target-size;\n      height: $govuk-touch-target-size;\n      margin: 0;\n\n      opacity: 0;\n    }\n\n    @include govuk-if-ie8 {\n      margin-top: 10px;\n      margin-right: $govuk-checkboxes-size / -2;\n      margin-left: $govuk-checkboxes-size / -2;\n      float: left;\n\n      // add focus outline to input\n      &:focus {\n        outline: $govuk-focus-width solid $govuk-focus-colour;\n      }\n    }\n  }\n\n  .govuk-checkboxes__label {\n    display: inline-block;\n    margin-bottom: 0;\n    padding: 8px $govuk-checkboxes-label-padding-left-right govuk-spacing(1);\n    cursor: pointer;\n    // remove 300ms pause on mobile\n    -ms-touch-action: manipulation;\n        touch-action: manipulation;\n  }\n\n  @include govuk-not-ie8 {\n    // [ ] Check box\n    .govuk-checkboxes__label:before {\n      content: \"\";\n      box-sizing: border-box;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: $govuk-checkboxes-size;\n      height: $govuk-checkboxes-size;\n      border: $govuk-border-width-form-element solid currentColor;\n      background: transparent;\n    }\n\n    // ✔ Check mark\n    //\n    // The check mark is a box with a border on the left and bottom side (└──),\n    // rotated 45 degrees\n    .govuk-checkboxes__label:after {\n      content: \"\";\n      box-sizing: border-box;\n\n      position: absolute;\n      top: 11px;\n      left: 9px;\n      width: 23px;\n      height: 12px;\n\n      -webkit-transform: rotate(-45deg);\n\n          -ms-transform: rotate(-45deg);\n\n              transform: rotate(-45deg);\n      border: solid;\n      border-width: 0 0 5px 5px;\n      // Fix bug in IE11 caused by transform rotate (-45deg).\n      // See: alphagov/govuk_elements/issues/518\n      border-top-color: transparent;\n\n      opacity: 0;\n\n      background: transparent;\n    }\n  }\n\n  .govuk-checkboxes__hint {\n    display: block;\n    padding-right: $govuk-checkboxes-label-padding-left-right;\n    padding-left: $govuk-checkboxes-label-padding-left-right;\n  }\n\n  // Focused state\n  .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\n    border-width: 4px;\n    box-shadow: 0 0 0 $govuk-focus-width $govuk-focus-colour;\n  }\n\n  // Selected state\n  .govuk-checkboxes__input:checked + .govuk-checkboxes__label:after {\n    opacity: 1;\n  }\n\n  // Disabled state\n  .govuk-checkboxes__input:disabled,\n  .govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\n    cursor: default;\n  }\n\n  .govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\n    opacity: .5;\n  }\n\n  // =========================================================\n  // Dividers ('or')\n  // =========================================================\n\n  .govuk-checkboxes__divider {\n    $govuk-divider-size: $govuk-checkboxes-size !default;\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n    width: $govuk-divider-size;\n    margin-bottom: govuk-spacing(2);\n    text-align: center;\n  }\n\n  // =========================================================\n  // Conditional reveals\n  // =========================================================\n\n  // The narrow border is used in the conditional reveals because the border has\n  // to be an even number in order to be centred under the 40px checkbox or radio.\n  $conditional-border-width: $govuk-border-width-narrow;\n  // Calculate the amount of padding needed to keep the border centered against the checkbox.\n  $conditional-border-padding: ($govuk-checkboxes-size / 2) - ($conditional-border-width / 2);\n  // Move the border centered with the checkbox\n  $conditional-margin-left: $conditional-border-padding;\n  // Move the contents of the conditional inline with the label\n  $conditional-padding-left: $conditional-border-padding + $govuk-checkboxes-label-padding-left-right;\n\n  .govuk-checkboxes__conditional {\n    @include govuk-responsive-margin(4, \"bottom\");\n    margin-left: $conditional-margin-left;\n    padding-left: $conditional-padding-left;\n    border-left: $conditional-border-width solid $govuk-border-colour;\n\n    .js-enabled &--hidden {\n      display: none;\n    }\n\n    & > :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  // =========================================================\n  // Small checkboxes\n  // =========================================================\n\n  .govuk-checkboxes--small {\n\n    $input-offset: ($govuk-touch-target-size - $govuk-small-checkboxes-size) / 2;\n    $label-offset: $govuk-touch-target-size - $input-offset;\n\n    .govuk-checkboxes__item {\n      @include govuk-clearfix;\n      min-height: 0;\n      margin-bottom: 0;\n      padding-left: $label-offset;\n      float: left;\n    }\n\n    // Shift the touch target into the left margin so that the visible edge of\n    // the control is aligned\n    //\n    //   ┆What colours do you like?\n    //  ┌┆───┐\n    //  │┆[] │ Purple\n    //  └┆▲──┘\n    //  ▲┆└─ Check box pseudo element, aligned with margin\n    //  └─── Touch target (invisible input), shifted into the margin\n    .govuk-checkboxes__input {\n      @include govuk-not-ie8 {\n        left: $input-offset * -1;\n      }\n\n      @include govuk-if-ie8 {\n        margin-left: $govuk-small-checkboxes-size * -1;\n      }\n    }\n\n    // Adjust the size and position of the label.\n    //\n    // Unlike larger checkboxes, we also have to float the label in order to\n    // 'shrink' it, preventing the hover state from kicking in across the full\n    // width of the parent element.\n    .govuk-checkboxes__label {\n      margin-top: -2px;\n      padding: 13px govuk-spacing(3) 13px 1px;\n      float: left;\n\n      @include govuk-media-query($from: tablet) {\n        padding: 11px govuk-spacing(3) 10px 1px;\n      }\n    }\n\n    // [ ] Check box\n    //\n    // Reduce the size of the check box [1], vertically center it within the\n    // touch target [2]\n    .govuk-checkboxes__label:before {\n      top: $input-offset - $govuk-border-width-form-element; // 2\n      width: $govuk-small-checkboxes-size; // 1\n      height: $govuk-small-checkboxes-size; // 1\n    }\n\n    // ✔ Check mark\n    //\n    // Reduce the size of the check mark and re-align within the checkbox\n    .govuk-checkboxes__label:after {\n      top: 15px;\n      left: 6px;\n      width: 12px;\n      height: 6.5px;\n      border-width: 0 0 3px 3px;\n    }\n\n    // Fix position of hint with small checkboxes\n    //\n    // Do not use hints with small checkboxes – because they're within the input\n    // wrapper they trigger the hover state, but clicking them doesn't actually\n    // activate the control.\n    //\n    // (If you do use them, they won't look completely broken... but seriously,\n    // don't use them)\n    .govuk-checkboxes__hint {\n      padding: 0;\n      clear: both;\n    }\n\n    // Align conditional reveals with small checkboxes\n    .govuk-checkboxes__conditional {\n      $margin-left: ($govuk-small-checkboxes-size / 2) - ($conditional-border-width / 2);\n      margin-left: $margin-left;\n      padding-left: $label-offset - ($margin-left + $conditional-border-width);\n      clear: both;\n    }\n\n    // Hover state for small checkboxes.\n    //\n    // We use a hover state for small checkboxes because the touch target size\n    // is so much larger than their visible size, and so we need to provide\n    // feedback to the user as to which checkbox they will select when their\n    // cursor is outside of the visible area.\n    .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\n      box-shadow: 0 0 0 $govuk-hover-width $govuk-hover-colour;\n    }\n\n    // Because we've overridden the border-shadow provided by the focus state,\n    // we need to redefine that too.\n    //\n    // We use two box shadows, one that restores the original focus state [1]\n    // and another that then applies the hover state [2].\n    .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\n      box-shadow:\n        0 0 0 $govuk-focus-width $govuk-focus-colour, // 1\n        0 0 0 $govuk-hover-width $govuk-hover-colour; // 2\n    }\n\n    // For devices that explicitly don't support hover, don't provide a hover\n    // state (e.g. on touch devices like iOS).\n    //\n    // We can't use `@media (hover: hover)` because we wouldn't get the hover\n    // state in browsers that don't support `@media (hover)` (like Internet\n    // Explorer) – so we have to 'undo' the hover state instead.\n    @media (hover: none), (pointer: coarse) {\n      .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\n        box-shadow: initial;\n      }\n\n      .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\n        box-shadow: 0 0 0 $govuk-focus-width $govuk-focus-colour;\n      }\n    }\n  }\n}\n",'////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n','@import "../lbh-hint/hint";\n@import "../lbh-error-message/error-message";\n@import "../lbh-fieldset/fieldset";\n@import "../lbh-label/label";\n@import "node_modules/govuk-frontend/govuk/components/checkboxes/checkboxes";\n\n@include lbh-exports("lbh/component/checkboxes") {\n  .lbh-checkboxes {\n    margin-bottom: 0;\n\n    .govuk-checkboxes__label {\n      @include lbh-label;\n      margin-top: 0;\n      @include lbh-rem(padding-top, 9);\n      @include lbh-rem(padding-bottom, 8);\n    }\n\n    .govuk-checkboxes__item {\n      margin-top: 0;\n      @include lbh-rem(margin-bottom, 12);\n    }\n\n    .govuk-hint {\n      @include lbh-hint;\n    }\n\n    .govuk-input {\n      @include lbh-body-m;\n      margin-bottom: 0;\n    }\n  }\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-checkboxes/checkboxes";\n\n.govuk-checkboxes__label {\n  margin-top: 0;\n}\n\n.govuk-checkboxes__conditional {\n  composes: govuk-checkboxes__conditional;\n}\n\n:global {\n  .govuk-checkboxes__conditional--hidden {\n    display: none;\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-2kLLy",govukHint:"govuk-hint-2kLLy","govuk-label":"govuk-label-3ghpa",govukLabel:"govuk-label-3ghpa","govuk-label--m":"govuk-label--m-FqQJ9",govukLabelM:"govuk-label--m-FqQJ9","govuk-label--l":"govuk-label--l-1be2c",govukLabelL:"govuk-label--l-1be2c","govuk-label--xl":"govuk-label--xl-3sWbb",govukLabelXl:"govuk-label--xl-3sWbb","govuk-fieldset__legend":"govuk-fieldset__legend-2JGUG",govukFieldsetLegend:"govuk-fieldset__legend-2JGUG","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-Cx2QX",govukFieldsetLegendM:"govuk-fieldset__legend--m-Cx2QX","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-yfrKO",govukFieldsetLegendL:"govuk-fieldset__legend--l-yfrKO","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-2WNnv",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-2WNnv","lbh-hint":"lbh-hint-3imoL",lbhHint:"lbh-hint-3imoL","govuk-error-message":"govuk-error-message-2H2vX",govukErrorMessage:"govuk-error-message-2H2vX","lbh-error-message":"lbh-error-message-3jyIP",lbhErrorMessage:"lbh-error-message-3jyIP","lbh-form-group":"lbh-form-group-21vwJ",lbhFormGroup:"lbh-form-group-21vwJ","govuk-input--error":"govuk-input--error-xSvdP",govukInputError:"govuk-input--error-xSvdP","govuk-form-group--error":"govuk-form-group--error-2NBkw",govukFormGroupError:"govuk-form-group--error-2NBkw","lbh-input":"lbh-input-2D3UI",lbhInput:"lbh-input-2D3UI","lbh-textarea":"lbh-textarea-1rBNv",lbhTextarea:"lbh-textarea-1rBNv","govuk-visually-hidden":"govuk-visually-hidden-261FO",govukVisuallyHidden:"govuk-visually-hidden-261FO","govuk-fieldset":"govuk-fieldset-3gy_x",govukFieldset:"govuk-fieldset-3gy_x","govuk-fieldset__legend--s":"govuk-fieldset__legend--s-1nJVq",govukFieldsetLegendS:"govuk-fieldset__legend--s-1nJVq","govuk-fieldset__heading":"govuk-fieldset__heading-2hWoh",govukFieldsetHeading:"govuk-fieldset__heading-2hWoh","lbh-fieldset":"lbh-fieldset-3GQZP",lbhFieldset:"lbh-fieldset-3GQZP","govuk-label--s":"govuk-label--s-2eM-k",govukLabelS:"govuk-label--s-2eM-k","govuk-label-wrapper":"govuk-label-wrapper-gU-lr",govukLabelWrapper:"govuk-label-wrapper-gU-lr","lbh-label":"lbh-label-SwQx3",lbhLabel:"lbh-label-SwQx3","govuk-checkboxes__item":"govuk-checkboxes__item-3uo-C",govukCheckboxesItem:"govuk-checkboxes__item-3uo-C","govuk-checkboxes__input":"govuk-checkboxes__input-3ZlZo",govukCheckboxesInput:"govuk-checkboxes__input-3ZlZo","govuk-checkboxes__label":"govuk-checkboxes__label-2IEKW",govukCheckboxesLabel:"govuk-checkboxes__label-2IEKW","govuk-checkboxes__hint":"govuk-checkboxes__hint-k9xXs",govukCheckboxesHint:"govuk-checkboxes__hint-k9xXs","govuk-checkboxes__divider":"govuk-checkboxes__divider-cSiX5",govukCheckboxesDivider:"govuk-checkboxes__divider-cSiX5","govuk-checkboxes__conditional":"govuk-checkboxes__conditional-3O1tS govuk-checkboxes__conditional-3O1tS",govukCheckboxesConditional:"govuk-checkboxes__conditional-3O1tS govuk-checkboxes__conditional-3O1tS","js-enabled":"js-enabled",jsEnabled:"js-enabled","govuk-checkboxes__conditional--hidden":"govuk-checkboxes__conditional--hidden-3Ao51",govukCheckboxesConditionalHidden:"govuk-checkboxes__conditional--hidden-3Ao51","govuk-checkboxes--small":"govuk-checkboxes--small-V_wt_",govukCheckboxesSmall:"govuk-checkboxes--small-V_wt_","lbh-checkboxes":"lbh-checkboxes-1rsX_",lbhCheckboxes:"lbh-checkboxes-1rsX_","govuk-input":"govuk-input-ci9mf",govukInput:"govuk-input-ci9mf"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/date-input/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-26f-i{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-26f-i{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-26f-i{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-26f-i{font-size:14pt;line-height:1.15}}.govuk-label-37Qzs:not(.govuk-label--m-1KwTj):not(.govuk-label--l-1ivcD):not(.govuk-label--xl-3SY4x)+.govuk-hint-26f-i{margin-bottom:10px}.govuk-fieldset__legend-DNaWb:not(.govuk-fieldset__legend--m-3Lxi-):not(.govuk-fieldset__legend--l-1i056):not(.govuk-fieldset__legend--xl-3pk1Q)+.govuk-hint-26f-i{margin-bottom:10px}.govuk-fieldset__legend-DNaWb+.govuk-hint-26f-i{margin-top:-5px}.lbh-hint-15CmM{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-15CmM{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-error-message-BCsy7{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-BCsy7{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-BCsy7{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-BCsy7{font-size:14pt;line-height:1.15}}.govuk-label-37Qzs{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-37Qzs{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-37Qzs{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-37Qzs{font-size:14pt;line-height:1.15}}@media print{.govuk-label-37Qzs{color:#000}}.govuk-label--xl-3SY4x{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-3SY4x{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-3SY4x{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-3SY4x{font-size:32pt;line-height:1.15}}.govuk-label--l-1ivcD{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-1ivcD{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-1ivcD{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-1ivcD{font-size:24pt;line-height:1.05}}.govuk-label--m-1KwTj{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-1KwTj{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-1KwTj{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-1KwTj{font-size:18pt;line-height:1.15}}.govuk-label--s-2-8Vz{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2-8Vz{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2-8Vz{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2-8Vz{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-1lz_I{margin:0}.govuk-input-3c5JB{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;box-sizing:border-box;width:100%;height:40px;height:2.5rem;margin-top:0;padding:5px;border:2px solid #0b0c0c;border-radius:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@media print{.govuk-input-3c5JB{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-input-3c5JB{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-input-3c5JB{font-size:14pt;line-height:1.15}}.govuk-input-3c5JB:focus{outline:3px solid #ffc845;outline-offset:0;box-shadow:inset 0 0 0 2px}.govuk-input-3c5JB::-webkit-outer-spin-button,.govuk-input-3c5JB::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.govuk-input-3c5JB[type="number"]{-moz-appearance:textfield}.govuk-input--error-32WiA{border:2px solid #d4351c}.govuk-input--error-32WiA:focus{border-color:#0b0c0c}.govuk-input--width-30-SODCw{max-width:59ex}.govuk-input--width-20-AaRJb{max-width:41ex}.govuk-input--width-10-18xtE{max-width:23ex}.govuk-input--width-5-3PfuK{max-width:10.8ex}.govuk-input--width-4-9geAk{max-width:9ex}.govuk-input--width-3-yxiOF{max-width:7.2ex}.govuk-input--width-2-1dNiV{max-width:5.4ex}.govuk-input__wrapper-3LULV{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.govuk-input__wrapper-3LULV .govuk-input-3c5JB{-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto}.govuk-input__wrapper-3LULV .govuk-input-3c5JB:focus{z-index:1}@media (max-width: 19.99em){.govuk-input__wrapper-3LULV{display:block}.govuk-input__wrapper-3LULV .govuk-input-3c5JB{max-width:100%}}.govuk-input__prefix-2YlXA,.govuk-input__suffix-3-rmu{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;box-sizing:border-box;display:inline-block;min-width:40px;min-width:2.5rem;height:40px;height:2.5rem;padding:5px;border:2px solid #0b0c0c;background-color:#f3f2f1;text-align:center;white-space:nowrap;cursor:default;-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}@media print{.govuk-input__prefix-2YlXA,.govuk-input__suffix-3-rmu{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-input__prefix-2YlXA,.govuk-input__suffix-3-rmu{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-input__prefix-2YlXA,.govuk-input__suffix-3-rmu{font-size:14pt;line-height:1.15}}@media (max-width: 40.0525em){.govuk-input__prefix-2YlXA,.govuk-input__suffix-3-rmu{line-height:1.6}}@media (max-width: 19.99em){.govuk-input__prefix-2YlXA,.govuk-input__suffix-3-rmu{display:block;height:100%;white-space:normal}}@media (max-width: 19.99em){.govuk-input__prefix-2YlXA{border-bottom:0}}@media (min-width: 20em){.govuk-input__prefix-2YlXA{border-right:0}}@media (max-width: 19.99em){.govuk-input__suffix-3-rmu{border-top:0}}@media (min-width: 20em){.govuk-input__suffix-3-rmu{border-left:0}}.lbh-input-1uaSK{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-input-1uaSK{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-label-2CwVd{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:6px;margin-bottom:.375rem}@media (min-width: 40.0625em){.lbh-label-2CwVd{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-label--xl-3SY4x{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-3SY4x{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-3SY4x{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-3SY4x{font-size:32pt;line-height:1.15}}.govuk-label--l-1ivcD{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-1ivcD{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-1ivcD{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-1ivcD{font-size:24pt;line-height:1.05}}.govuk-label--m-1KwTj{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-1KwTj{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-1KwTj{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-1KwTj{font-size:18pt;line-height:1.15}}.govuk-label--s-2-8Vz{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2-8Vz{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2-8Vz{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2-8Vz{font-size:14pt;line-height:1.15}}.govuk-date-input-tJ4KC{font-size:0}.govuk-date-input-tJ4KC:after{content:"";display:block;clear:both}.govuk-date-input__item-1-xXv{display:inline-block;margin-right:20px;margin-bottom:0}.govuk-date-input__label-ujCx2{display:block}.govuk-date-input__input-aY5ze{margin-bottom:0}.lbh-form-group-1jxbb.lbh-form-group--date-input-2Lye7 .govuk-fieldset__legend-DNaWb{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:0}@media (min-width: 40.0625em){.lbh-form-group-1jxbb.lbh-form-group--date-input-2Lye7 .govuk-fieldset__legend-DNaWb{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-form-group-1jxbb .govuk-label-37Qzs.govuk-date-input__label-ujCx2{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:6px;margin-bottom:.375rem;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:18px;font-size:1.125rem;line-height:22px;line-height:1.375rem;margin-top:12px;margin-top:.75rem}@media (min-width: 40.0625em){.lbh-form-group-1jxbb .govuk-label-37Qzs.govuk-date-input__label-ujCx2{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}@media (min-width: 40.0625em){.lbh-form-group-1jxbb .govuk-label-37Qzs.govuk-date-input__label-ujCx2{font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem}}.lbh-form-group--date-input-2Lye7 .govuk-hint-26f-i,.lbh-form-group--date-input-2Lye7 .govuk-fieldset__legend-DNaWb:not(.govuk-fieldset__legend--m-3Lxi-):not(.govuk-fieldset__legend--l-1i056):not(.govuk-fieldset__legend--xl-3pk1Q)+.govuk-hint-26f-i{margin-top:6px;margin-top:.375rem;margin-bottom:0}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/input/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_measurements.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-input/_input.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-label/_label.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/date-input/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_clearfix.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-date-input/_date-input.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb,CKXD,2BbcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,Ca5EvC,aAAc,CACd,kBRSK,CQRL,UAAW,CAEX,aP6BY,CC+LR,aMnON,2Bb6BE,sBE8BgC,CWnDjC,CN2NK,8BMnON,2Bb4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CavExC,CN2NK,aMnON,2BbuJM,cGFa,CHGb,gBGFe,CU9IpB,CCRD,mBdcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CQxCd,aAAc,CAEd,iBTKI,CEwNA,aOnON,mBd6BE,sBE8BgC,CYpDjC,CP4NK,8BOnON,mBd4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcxExC,CP4NK,aOnON,mBduJM,cGFa,CHGb,gBGFe,CW/IpB,CP4NK,aOnON,mBd2CE,UeI6B,CDxC9B,CAID,uBdGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CclEvC,kBTAK,CEsND,aOxNN,uBdkBE,sBE8BgC,CY7CjC,CPqNK,8BOxNN,uBdiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CcjExC,CPqNK,aOxNN,uBd4IM,cG1Da,CH2Db,gBG1De,CWhFpB,CAED,sBdFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,Cc7DvC,kBTLK,CEsND,aOnNN,sBdaE,sBE8BgC,CYxCjC,CPgNK,8BOnNN,sBd4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,Cc5DxC,CPgNK,aOnNN,sBduIM,cG5Ca,CH6Cb,gBG5Ce,CWzFpB,CAED,sBdPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CcxDvC,kBTXK,CEuND,aO9MN,sBdQE,sBE8BgC,CYnCjC,CP2MK,8BO9MN,sBduIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CcvDxC,CP2MK,aO9MN,sBdkIM,cGhBa,CHiBb,gBGhBe,CWhHpB,CAED,sBdZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aOzMN,sBdGE,sBE8BgC,CY/BjC,CPuMK,8BOzMN,sBdkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcnDxC,CPuMK,aOzMN,sBd6HM,cGFa,CHGb,gBGFe,CW1HpB,CAQD,2BACE,QAAS,CEjCX,mBhBUA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CgBxEvC,qBAAsB,CACtB,UAAW,CACX,WAAY,CAEV,aZMyC,CYJ3C,YAAa,CAEb,WXJI,CWOJ,wBV0Bc,CUzBd,eAAgB,CAGhB,uBAAwB,CACrB,oBAAqB,CAChB,eAAgB,CT2MpB,aS/NN,mBhByBE,sBE8BgC,CcjBjC,CTyLK,8BS/NN,mBhBwJM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgBrCxC,CTyLK,aS/NN,mBhBmJM,cGFa,CHGb,gBGFe,Ca5GpB,CAtCD,yBAuBI,yBNKwB,CMHxB,gBAAiB,CAKjB,0BCsC+B,CD/BhC,4FAKD,QAAS,CACT,uBAAwB,CACzB,kCAGC,yBAA0B,CAC3B,0BAGC,wBVnBY,CUkBd,gCAII,oBVdY,CUeb,6BAQD,cAAqB,CACtB,6BAGC,cAAqB,CACtB,6BAGC,cAAqB,CACtB,4BAGC,gBAAiB,CAClB,4BAGC,aAAc,CACf,4BAGC,eAAgB,CACjB,4BAGC,eAAgB,CACjB,4BAGC,mBAAoB,CACpB,oBAAqB,CACrB,mBAAoB,CACpB,YAAa,CAJf,+CAOI,kBAAmB,CACnB,qBAAsB,CAClB,iBAAkB,CACd,aAAc,CAV1B,qDAeI,SAAU,CTsHR,4BSrIN,4BAoBI,aAAc,CApBlB,+CAwBM,cAAe,CAChB,CAIL,sDhB7GA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CgBgDvC,qBAAsB,CACtB,oBAAqB,CACrB,cAAe,CAEb,gBZlHyC,CYoH3C,WAAY,CAEV,aZtHyC,CYyH3C,WX/HI,CWgIJ,wBV/Fc,CUgGd,wBV7FmB,CU+FnB,iBAAkB,CAIlB,kBAAmB,CAGnB,cAAe,CAEf,kBAAmB,CAEnB,qBAAsB,CAElB,iBAAkB,CAEd,aAAc,CTsElB,aSxGN,sDhB9FE,sBE8BgC,Cc0GjC,CT8DK,8BSxGN,sDhBiCM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgBsFxC,CT8DK,aSxGN,sDhB4BM,cGFa,CHGb,gBGFe,CaepB,CT8DK,8BSxGN,sDAqBI,eAAgB,CAqBnB,CT8DK,4BSxGN,sDAsCI,aAAc,CACd,WAAY,CACZ,kBAAmB,CAEtB,CT8DK,4BS5DN,2BAEI,eAAgB,CAOnB,CTmDK,yBS5DN,2BAMM,cAAe,CAGpB,CTmDK,4BShDN,2BAEI,YAAa,CAOhB,CTuCK,yBShDN,2BAMM,aAAc,CAGnB,CExLD,iBTIA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CJgNR,8BW/NN,iBPsBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CObb,CCCD,iBVCA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CAOd,iBAhBa,CAiBb,qBARc,CJgNR,8BY5NN,iBRmBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CQVb,CAID,uBnBCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CmBhEvC,kBdFK,CEsND,aYtNN,uBnBgBE,sBE8BgC,CiB3CjC,CZmNK,8BYtNN,uBnB+IM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CmB/DxC,CZmNK,aYtNN,uBnB0IM,cG1Da,CH2Db,gBG1De,CgB9EpB,CAED,sBnBJA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CmB3DvC,kBdPK,CEsND,aYjNN,sBnBWE,sBE8BgC,CiBtCjC,CZ8MK,8BYjNN,sBnB0IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CmB1DxC,CZ8MK,aYjNN,sBnBqIM,cG5Ca,CH6Cb,gBG5Ce,CgBvFpB,CAED,sBnBTA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CmBtDvC,kBdbK,CEuND,aY5MN,sBnBME,sBE8BgC,CiBjCjC,CZyMK,8BY5MN,sBnBqIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CmBrDxC,CZyMK,aY5MN,sBnBgIM,cGhBa,CHiBb,gBGhBe,CgB9GpB,CAED,sBnBdA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aYvMN,sBnBCE,sBE8BgC,CiB7BjC,CZqMK,8BYvMN,sBnBgIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CmBjDxC,CZqMK,aYvMN,sBnB2HM,cGFa,CHGb,gBGFe,CgBxHpB,CCzBD,wBAGE,WAAY,CCAd,8BACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,8BDAC,oBAAqB,CACrB,iBfCK,CeAL,eAAgB,CACjB,+BAGC,aAAc,CACf,+BAGC,eAAgB,CEhBlB,qFbEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CWXZ,eAAgB,Cf2NZ,8Be7NN,qFXoBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CWVb,CAED,uEbHA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CAOd,iBAhBa,CAiBb,qBARc,CFXd,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,oBARc,CAOd,eAhBa,CAiBb,iBARc,CJgNR,8BexNN,uEXeA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CWJb,CfoNK,8BexNN,uEXeA,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CWJb,CAED,yPXSA,cAhBa,CAiBb,kBARc,CWGZ,eAAgB",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n',"@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "../error-message/index";\n@import "../hint/index";\n@import "../label/index";\n\n@include govuk-exports("govuk/component/input") {\n  .govuk-input {\n    @include govuk-font($size: 19);\n\n    box-sizing: border-box;\n    width: 100%;\n    height: 40px;\n    @if $govuk-typography-use-rem {\n      height: govuk-px-to-rem(40px);\n    }\n    margin-top: 0;\n\n    padding: govuk-spacing(1);\n    // setting any background-color makes text invisible when changing colours to dark backgrounds in Firefox (https://bugzilla.mozilla.org/show_bug.cgi?id=1335476)\n    // as background-color and color need to always be set together, color should not be set either\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\n    border-radius: 0;\n\n    // Disable inner shadow and remove rounded corners\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n\n    &:focus {\n      outline: $govuk-focus-width solid $govuk-focus-colour;\n      // Ensure outline appears outside of the element\n      outline-offset: 0;\n      // Double the border by adding its width again. Use `box-shadow` for this // instead of changing `border-width` - this is for consistency with\n      // components such as textarea where we avoid changing `border-width` as\n      // it will change the element size. Also, `outline` cannot be utilised\n      // here as it is already used for the yellow focus state.\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\n\n      @include govuk-if-ie8 {\n        // IE8 doesn\'t support `box-shadow` so double the border with\n        // `border-width`.\n        border-width: $govuk-border-width-form-element * 2;\n      }\n    }\n  }\n\n  .govuk-input::-webkit-outer-spin-button,\n  .govuk-input::-webkit-inner-spin-button {\n    margin: 0;\n    -webkit-appearance: none;\n  }\n\n  .govuk-input[type="number"] {\n    -moz-appearance: textfield;\n  }\n\n  .govuk-input--error {\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\n\n    &:focus {\n      border-color: $govuk-input-border-colour;\n    }\n  }\n\n  // The ex measurements are based on the number of W\'s that can fit inside the input\n  // Extra space is left on the right hand side to allow for the Safari prefill icon\n  // Linear regression estimation based on visual tests: y = 1.76 + 1.81x\n\n  .govuk-input--width-30 {\n    max-width: 56ex + 3ex;\n  }\n\n  .govuk-input--width-20 {\n    max-width: 38ex + 3ex;\n  }\n\n  .govuk-input--width-10 {\n    max-width: 20ex + 3ex;\n  }\n\n  .govuk-input--width-5 {\n    max-width: 10.8ex;\n  }\n\n  .govuk-input--width-4 {\n    max-width: 9ex;\n  }\n\n  .govuk-input--width-3 {\n    max-width: 7.2ex;\n  }\n\n  .govuk-input--width-2 {\n    max-width: 5.4ex;\n  }\n\n  .govuk-input__wrapper {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n\n    .govuk-input {\n      -webkit-box-flex: 0;\n      -webkit-flex: 0 1 auto;\n          -ms-flex: 0 1 auto;\n              flex: 0 1 auto;\n    }\n\n    .govuk-input:focus {\n      // Hack to stop focus style being overlapped by the suffix\n      z-index: 1;\n    }\n\n    // Split prefix/suffix onto separate lines on narrow screens\n    @include govuk-media-query($until: mobile) {\n      display: block;\n\n      .govuk-input {\n        // Set max-width to override potential width override class on the input\n        max-width: 100%;\n      }\n    }\n  }\n\n  .govuk-input__prefix,\n  .govuk-input__suffix {\n    @include govuk-font($size: 19);\n\n    box-sizing: border-box;\n    display: inline-block;\n    min-width: 40px;\n    @if $govuk-typography-use-rem {\n      min-width: govuk-px-to-rem(40px);\n    }\n    height: 40px;\n    @if $govuk-typography-use-rem {\n      height: govuk-px-to-rem(40px);\n    }\n\n    padding: govuk-spacing(1);\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\n    background-color: govuk-colour("light-grey", $legacy: "grey-3");\n\n    text-align: center;\n    @include govuk-media-query($until: tablet) {\n      line-height: 1.6;\n    }\n    white-space: nowrap;\n\n    // Emphasise non-editable status of prefixes and suffixes\n    cursor: default;\n\n    -webkit-box-flex: 0;\n\n    -webkit-flex: 0 0 auto;\n\n        -ms-flex: 0 0 auto;\n\n            flex: 0 0 auto;\n\n    // Split prefix/suffix onto separate lines on narrow screens\n    @include govuk-media-query($until: mobile) {\n      display: block;\n      height: 100%;\n      white-space: normal;\n    }\n  }\n\n  .govuk-input__prefix {\n    @include govuk-media-query($until: mobile) {\n      border-bottom: 0;\n    }\n    @include govuk-media-query($from: mobile) {\n      @include govuk-not-ie8 {\n        border-right: 0;\n      }\n    }\n  }\n\n  // Split prefix/suffix onto separate lines on narrow screens\n  .govuk-input__suffix {\n    @include govuk-media-query($until: mobile) {\n      border-top: 0;\n    }\n    @include govuk-media-query($from: mobile) {\n      @include govuk-not-ie8 {\n        border-left: 0;\n      }\n    }\n  }\n}\n',"////\n/// @group settings/measurements\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: 25%,\n  one-third: 33.3333%,\n  one-half: 50%,\n  two-thirds: 66.6666%,\n  three-quarters: 75%,\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form control border width when in error state\n///\n/// @type Number\n/// @access public\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\n///   difference in thickness for inputs in the error state, in order to\n///   maintain a distinct focus state.\n\n$govuk-border-width-form-element-error: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n",'@import "../lbh-hint/hint";\n\n@import "node_modules/govuk-frontend/govuk/components/input/input";\n\n@include lbh-exports("lbh/component/input") {\n  .lbh-input {\n    @include lbh-body-m;\n  }\n}\n','@import "node_modules/govuk-frontend/govuk/components/label/label";\n\n@mixin lbh-label {\n  @include lbh-body-m;\n  @include lbh-rem(margin-bottom, 6);\n}\n\n@include lbh-exports("lbh/component/label") {\n  .lbh-label {\n    @include lbh-label;\n  }\n\n  // copied these over from govuk frontend because i couldn\'t see any other way to win the specificity battle\n  // solves: https://github.com/LBHackney-IT/lbh-frontend/issues/147\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n}\n','@import "../error-message/index";\n@import "../input/index";\n@import "../hint/index";\n@import "../label/index";\n\n@include govuk-exports("govuk/component/date-input") {\n  .govuk-date-input {\n    @include govuk-clearfix;\n    // font-size: 0 removes whitespace caused by inline-block\n    font-size: 0;\n  }\n\n  .govuk-date-input__item {\n    display: inline-block;\n    margin-right: govuk-spacing(4);\n    margin-bottom: 0;\n  }\n\n  .govuk-date-input__label {\n    display: block;\n  }\n\n  .govuk-date-input__input {\n    margin-bottom: 0;\n  }\n}\n','////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &:after {\n    content: "";\n    display: block;\n    clear: both;\n  }\n}\n','@import "../lbh-hint/hint";\n@import "../lbh-input/input";\n@import "../lbh-label/label";\n\n@import "node_modules/govuk-frontend/govuk/components/date-input/date-input";\n\n@include lbh-exports("lbh/component/date-input") {\n  .lbh-form-group.lbh-form-group--date-input .govuk-fieldset__legend {\n    @include lbh-body-m;\n    margin-bottom: 0;\n  }\n\n  .lbh-form-group .govuk-label.govuk-date-input__label {\n    @include lbh-label;\n    @include lbh-heading-h4;\n    @include lbh-rem(margin-top, 12);\n  }\n\n  .lbh-form-group--date-input .govuk-hint,\n  .lbh-form-group--date-input\n    .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl)\n    + .govuk-hint {\n    @include lbh-rem(margin-top, 6);\n    margin-bottom: 0;\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-26f-i",govukHint:"govuk-hint-26f-i","govuk-label":"govuk-label-37Qzs",govukLabel:"govuk-label-37Qzs","govuk-label--m":"govuk-label--m-1KwTj",govukLabelM:"govuk-label--m-1KwTj","govuk-label--l":"govuk-label--l-1ivcD",govukLabelL:"govuk-label--l-1ivcD","govuk-label--xl":"govuk-label--xl-3SY4x",govukLabelXl:"govuk-label--xl-3SY4x","govuk-fieldset__legend":"govuk-fieldset__legend-DNaWb",govukFieldsetLegend:"govuk-fieldset__legend-DNaWb","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-3Lxi-",govukFieldsetLegendM:"govuk-fieldset__legend--m-3Lxi-","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-1i056",govukFieldsetLegendL:"govuk-fieldset__legend--l-1i056","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-3pk1Q",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-3pk1Q","lbh-hint":"lbh-hint-15CmM",lbhHint:"lbh-hint-15CmM","govuk-error-message":"govuk-error-message-BCsy7",govukErrorMessage:"govuk-error-message-BCsy7","govuk-label--s":"govuk-label--s-2-8Vz",govukLabelS:"govuk-label--s-2-8Vz","govuk-label-wrapper":"govuk-label-wrapper-1lz_I",govukLabelWrapper:"govuk-label-wrapper-1lz_I","govuk-input":"govuk-input-3c5JB",govukInput:"govuk-input-3c5JB","govuk-input--error":"govuk-input--error-32WiA",govukInputError:"govuk-input--error-32WiA","govuk-input--width-30":"govuk-input--width-30-SODCw",govukInputWidth30:"govuk-input--width-30-SODCw","govuk-input--width-20":"govuk-input--width-20-AaRJb",govukInputWidth20:"govuk-input--width-20-AaRJb","govuk-input--width-10":"govuk-input--width-10-18xtE",govukInputWidth10:"govuk-input--width-10-18xtE","govuk-input--width-5":"govuk-input--width-5-3PfuK",govukInputWidth5:"govuk-input--width-5-3PfuK","govuk-input--width-4":"govuk-input--width-4-9geAk",govukInputWidth4:"govuk-input--width-4-9geAk","govuk-input--width-3":"govuk-input--width-3-yxiOF",govukInputWidth3:"govuk-input--width-3-yxiOF","govuk-input--width-2":"govuk-input--width-2-1dNiV",govukInputWidth2:"govuk-input--width-2-1dNiV","govuk-input__wrapper":"govuk-input__wrapper-3LULV",govukInputWrapper:"govuk-input__wrapper-3LULV","govuk-input__prefix":"govuk-input__prefix-2YlXA",govukInputPrefix:"govuk-input__prefix-2YlXA","govuk-input__suffix":"govuk-input__suffix-3-rmu",govukInputSuffix:"govuk-input__suffix-3-rmu","lbh-input":"lbh-input-1uaSK",lbhInput:"lbh-input-1uaSK","lbh-label":"lbh-label-2CwVd",lbhLabel:"lbh-label-2CwVd","govuk-date-input":"govuk-date-input-tJ4KC",govukDateInput:"govuk-date-input-tJ4KC","govuk-date-input__item":"govuk-date-input__item-1-xXv",govukDateInputItem:"govuk-date-input__item-1-xXv","govuk-date-input__label":"govuk-date-input__label-ujCx2",govukDateInputLabel:"govuk-date-input__label-ujCx2","govuk-date-input__input":"govuk-date-input__input-aY5ze",govukDateInputInput:"govuk-date-input__input-aY5ze","lbh-form-group":"lbh-form-group-1jxbb",lbhFormGroup:"lbh-form-group-1jxbb","lbh-form-group--date-input":"lbh-form-group--date-input-2Lye7",lbhFormGroupDateInput:"lbh-form-group--date-input-2Lye7"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/dialog/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,".lbh-dialog-B2SSI{position:relative;border:4px solid #0b0c0c;width:90%;max-width:500px;margin:7vh auto}.lbh-dialog__title-2Iqez{margin-top:0}.lbh-dialog__close-3Dnpv{position:absolute;right:7px;top:7px;border:none;background:none;padding:0;cursor:pointer;display:inline-flex}.lbh-dialog__close-3Dnpv svg{margin-top:0}.lbh-dialog__close-3Dnpv svg path{fill:#0b0c0c}.lbh-dialog__close-3Dnpv:focus,.lbh-dialog__close-3Dnpv:active{outline:3px solid #ffc845;background:#ffc845}.lbh-dialog__actions-3mSkA{display:flex;flex-direction:column;align-items:center;margin-top:1.5rem}.lbh-dialog__actions-3mSkA *{margin-top:1rem}.lbh-dialog__actions-3mSkA *:first-child{margin-top:0}@media (min-width: 40.0625em){.lbh-dialog__actions-3mSkA{flex-direction:row;align-items:center}.lbh-dialog__actions-3mSkA *{margin-top:0;margin-left:1.5rem}.lbh-dialog__actions-3mSkA *:first-child{margin-left:0}}[data-reach-dialog-overlay]{z-index:100}.lbh-dialog__close-3Dnpv{margin-top:1.5rem;margin-right:1.5rem}.lbh-dialog__title-2Iqez{margin-right:2rem}\n","",{version:3,sources:["webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-dialog/_dialog.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/src/components/dialog/styles.module.scss"],names:[],mappings:"AAGE,kBACE,iBAAkB,CAClB,wBCsBiB,CDrBjB,SAAU,CACV,eAAgB,CAChB,eAAgB,CAEhB,yBACE,YAAa,CACd,yBAGC,iBAAkB,CAClB,SAAU,CACV,OAAQ,CACR,WAAY,CACZ,eAAgB,CAChB,SAAU,CACV,cAAe,CACf,mBAAoB,CARrB,6BAWG,YAAa,CAXhB,kCAaK,YCAW,CDbhB,+DAmBG,yBCAsB,CDCtB,kBCDsB,CDEvB,2BAID,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,iBAAkB,CAJnB,6BAOG,eAAgB,CAPnB,yCAUK,YAAa,CEoLf,8BF9LJ,2BAeI,kBAAmB,CACnB,kBAAmB,CAhBtB,6BAmBK,YAAa,CACb,kBAAmB,CApBxB,yCAuBO,aAAc,CACf,CAAA,4BG1DT,WAAY,CACb,yBAGC,iBAAkB,CAClB,mBAAoB,CACrB,yBAGC,iBAAkB",sourcesContent:['@import "../../settings/all";\n\n@include lbh-exports("lbh/component/dialog") {\n  .lbh-dialog {\n    position: relative;\n    border: 4px solid lbh-colour("lbh-text");\n    width: 90%;\n    max-width: 500px;\n    margin: 7vh auto;\n\n    &__title {\n      margin-top: 0;\n    }\n\n    &__close {\n      position: absolute;\n      right: 7px;\n      top: 7px;\n      border: none;\n      background: none;\n      padding: 0;\n      cursor: pointer;\n      display: inline-flex;\n\n      svg {\n        margin-top: 0;\n        path {\n          fill: lbh-colour("lbh-text");\n        }\n      }\n\n      &:focus,\n      &:active {\n        outline: 3px solid lbh-colour("lbh-primary-focus");\n        background: lbh-colour("lbh-primary-focus");\n      }\n    }\n\n    &__actions {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin-top: 1.5rem;\n\n      * {\n        margin-top: 1rem;\n\n        &:first-child {\n          margin-top: 0;\n        }\n      }\n\n      @include govuk-media-query($from: tablet) {\n        flex-direction: row;\n        align-items: center;\n\n        * {\n          margin-top: 0;\n          margin-left: 1.5rem;\n\n          &:first-child {\n            margin-left: 0;\n          }\n        }\n      }\n    }\n  }\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-dialog/_dialog.scss";\n\n[data-reach-dialog-overlay] {\n  z-index: 100;\n}\n\n.lbh-dialog__close {\n  margin-top: 1.5rem;\n  margin-right: 1.5rem;\n}\n\n.lbh-dialog__title {\n  margin-right: 2rem;\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-dialog":"lbh-dialog-B2SSI",lbhDialog:"lbh-dialog-B2SSI","lbh-dialog__title":"lbh-dialog__title-2Iqez",lbhDialogTitle:"lbh-dialog__title-2Iqez","lbh-dialog__close":"lbh-dialog__close-3Dnpv",lbhDialogClose:"lbh-dialog__close-3Dnpv","lbh-dialog__actions":"lbh-dialog__actions-3mSkA",lbhDialogActions:"lbh-dialog__actions-3mSkA"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/error-message/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-error-message-2qWcC{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-2qWcC{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-2qWcC{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-2qWcC{font-size:14pt;line-height:1.15}}.lbh-error-message-g6paT,.lbh-form-group-3t1mu .govuk-error-message-2qWcC{margin-top:0;margin-bottom:0;color:#be3a34;font-weight:600}.lbh-error-message-g6paT .govuk-input--error-1xNXh,.lbh-form-group-3t1mu .govuk-input--error-1xNXh{border-color:#be3a34}.lbh-error-message-g6paT .govuk-form-group--error-3oKAO,.lbh-form-group-3t1mu.govuk-form-group--error-3oKAO{border-color:#be3a34}.lbh-form-group-3t1mu .govuk-fieldset__legend-2zm_r+.lbh-error-message-g6paT,.lbh-form-group-3t1mu .govuk-fieldset__legend-2zm_r+.govuk-error-message-2qWcC{margin-top:6px;margin-top:.375rem}.lbh-form-group-3t1mu .govuk-fieldset__legend-2zm_r+.govuk-hint-s_aW2+.lbh-error-message-g6paT,.lbh-form-group-3t1mu .govuk-fieldset__legend-2zm_r+.govuk-hint-s_aW2+.govuk-error-message-2qWcC{margin-top:12px;margin-top:.75rem}.lbh-error-message-g6paT+.lbh-input-3Phdj,.lbh-error-message-g6paT+.lbh-textarea-1TbLp{margin-top:6px;margin-top:.375rem}.govuk-visually-hidden-t1Vsk{position:absolute !important;width:1px !important;height:1px !important;margin:0 !important;padding:0 !important;overflow:hidden !important;clip:rect(0 0 0 0) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;border:0 !important;white-space:nowrap !important}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-error-message/_error-message.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_visually-hidden.scss"],names:[],mappings:"AACE,2BCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CACd,kBMSK,CNRL,UAAW,CAEX,aO6BY,CC+LR,aRnON,2BC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,2BC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,2BCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CSND,0EAEE,YAAa,CACb,eAAgB,CAChB,aCqCkB,CDpClB,eEkCwB,CFjCzB,mGAIC,oBC+BkB,CD9BnB,4GAIC,oBC0BkB,CDzBnB,4JGQD,cAhBa,CAiBb,kBARc,CHIb,gMGGD,eAhBa,CAiBb,iBARc,CHSb,uFGFD,cAhBa,CAiBb,kBARc,CHcb,6BIlBD,4BAA4C,CAE5C,oBAAoC,CACpC,qBAAqC,CAGrC,mBAAmC,CACnC,oBAAoC,CAEpC,0BAA0C,CAC1C,6BAA6C,CAC7C,uCAAuD,CAC/C,+BAA+C,CAEvD,mBAAmC,CAKnC,6BAA6C",sourcesContent:['@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/error-message/error-message";\n\n@include lbh-exports("lbh/component/error-message") {\n  .lbh-error-message,\n  .lbh-form-group .govuk-error-message {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: lbh-colour("lbh-error");\n    font-weight: $lbh-font-weight-medium;\n  }\n\n  .lbh-error-message .govuk-input--error,\n  .lbh-form-group .govuk-input--error {\n    border-color: lbh-colour("lbh-error");\n  }\n\n  .lbh-error-message .govuk-form-group--error,\n  .lbh-form-group.govuk-form-group--error {\n    border-color: lbh-colour("lbh-error");\n  }\n\n  .lbh-form-group .govuk-fieldset__legend + .lbh-error-message,\n  .lbh-form-group .govuk-fieldset__legend + .govuk-error-message {\n    @include lbh-rem(margin-top, 6);\n  }\n\n  .lbh-form-group .govuk-fieldset__legend + .govuk-hint + .lbh-error-message,\n  .lbh-form-group .govuk-fieldset__legend + .govuk-hint + .govuk-error-message {\n    @include lbh-rem(margin-top, 12);\n  }\n\n  .lbh-error-message + .lbh-input,\n  .lbh-error-message + .lbh-textarea {\n    @include lbh-rem(margin-top, 6);\n  }\n\n  // Needed so that it is hidden when this component is imported individually\n  .govuk-visually-hidden {\n    @include govuk-visually-hidden;\n  }\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n',"////\n/// @group helpers/accessibility\n////\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// This is slightly less opinionated about borders and padding to make it\n/// easier to style the focussed element.\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  &:active,\n  &:focus {\n    position: static if($important, !important, null);\n\n    width: auto if($important, !important, null);\n    height: auto if($important, !important, null);\n    margin: inherit if($important, !important, null);\n\n    overflow: visible if($important, !important, null);\n    clip: auto if($important, !important, null);\n    -webkit-clip-path: none if($important, !important, null);\n            clip-path: none if($important, !important, null);\n\n    white-space: inherit if($important, !important, null);\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-error-message":"govuk-error-message-2qWcC",govukErrorMessage:"govuk-error-message-2qWcC","lbh-error-message":"lbh-error-message-g6paT",lbhErrorMessage:"lbh-error-message-g6paT","lbh-form-group":"lbh-form-group-3t1mu",lbhFormGroup:"lbh-form-group-3t1mu","govuk-input--error":"govuk-input--error-1xNXh",govukInputError:"govuk-input--error-1xNXh","govuk-form-group--error":"govuk-form-group--error-3oKAO",govukFormGroupError:"govuk-form-group--error-3oKAO","govuk-fieldset__legend":"govuk-fieldset__legend-2zm_r",govukFieldsetLegend:"govuk-fieldset__legend-2zm_r","govuk-hint":"govuk-hint-s_aW2",govukHint:"govuk-hint-s_aW2","lbh-input":"lbh-input-3Phdj",lbhInput:"lbh-input-3Phdj","lbh-textarea":"lbh-textarea-1TbLp",lbhTextarea:"lbh-textarea-1TbLp","govuk-visually-hidden":"govuk-visually-hidden-t1Vsk",govukVisuallyHidden:"govuk-visually-hidden-t1Vsk"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/error-summary/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-list-d8wch{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;margin-top:0;margin-bottom:15px;padding-left:0;list-style-type:none}@media print{.govuk-list-d8wch{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-list-d8wch{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-list-d8wch{font-size:14pt;line-height:1.15}}@media print{.govuk-list-d8wch{color:#000}}@media (min-width: 40.0625em){.govuk-list-d8wch{margin-bottom:20px}}.govuk-list-d8wch .govuk-list-d8wch{margin-top:10px}.govuk-list-d8wch>li{margin-bottom:5px}.govuk-list--bullet-2p0jY{padding-left:20px;list-style-type:disc}.govuk-list--number-3iryl{padding-left:20px;list-style-type:decimal}.govuk-list--bullet-2p0jY>li,.govuk-list--number-3iryl>li{margin-bottom:0}@media (min-width: 40.0625em){.govuk-list--bullet-2p0jY>li,.govuk-list--number-3iryl>li{margin-bottom:5px}}.govuk-list--spaced-2nUbn>li{margin-bottom:10px}@media (min-width: 40.0625em){.govuk-list--spaced-2nUbn>li{margin-bottom:15px}}.govuk-error-summary-3DuHd{color:#0b0c0c;padding:15px;margin-bottom:30px;border:5px solid #d4351c}@media print{.govuk-error-summary-3DuHd{color:#000}}@media (min-width: 40.0625em){.govuk-error-summary-3DuHd{padding:20px}}@media (min-width: 40.0625em){.govuk-error-summary-3DuHd{margin-bottom:50px}}.govuk-error-summary-3DuHd:focus{outline:3px solid #ffc845}.govuk-error-summary__title-3zMWm{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-top:0;margin-bottom:15px}@media print{.govuk-error-summary__title-3zMWm{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-summary__title-3zMWm{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-error-summary__title-3zMWm{font-size:18pt;line-height:1.15}}@media (min-width: 40.0625em){.govuk-error-summary__title-3zMWm{margin-bottom:20px}}.govuk-error-summary__body-1uG4P{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-error-summary__body-1uG4P{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-summary__body-1uG4P{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-summary__body-1uG4P{font-size:14pt;line-height:1.15}}.govuk-error-summary__body-1uG4P p{margin-top:0;margin-bottom:15px}@media (min-width: 40.0625em){.govuk-error-summary__body-1uG4P p{margin-bottom:20px}}.govuk-error-summary__list-QMKvc{margin-top:0;margin-bottom:0}.govuk-error-summary__list-QMKvc a{font-weight:700;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:underline}@media print{.govuk-error-summary__list-QMKvc a{font-family:sans-serif}}.govuk-error-summary__list-QMKvc a:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.govuk-error-summary__list-QMKvc a:link,.govuk-error-summary__list-QMKvc a:visited{color:#d4351c}.govuk-error-summary__list-QMKvc a:hover{color:#942514}.govuk-error-summary__list-QMKvc a:active{color:#d4351c}.govuk-error-summary__list-QMKvc a:focus{color:#0b0c0c}.lbh-error-summary-1pgmm{margin-bottom:0;padding:18px 24px 24px;padding:1.125rem 1.5rem 1.5rem;border-color:#be3a34}.lbh-error-summary-1pgmm .govuk-error-summary__title-3zMWm{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem;margin-top:0}@media (min-width: 40.0625em){.lbh-error-summary-1pgmm .govuk-error-summary__title-3zMWm{font-size:30px;font-size:1.875rem;line-height:36px;line-height:2.25rem}}.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a{font-weight:600}.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a,.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a:link,.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a:hover,.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a:active,.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a:focus,.lbh-error-summary-1pgmm .govuk-error-summary__list-QMKvc a:visited{color:#be3a34}.lbh-error-summary-1pgmm>*:last-child{margin-bottom:0}.lbh-error-summary-1pgmm .govuk-list-d8wch{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding-left:0;list-style-type:none;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:19px;line-height:1.1875rem}*+.lbh-error-summary-1pgmm .govuk-list-d8wch{margin-top:1.5em}@media (min-width: 40.0625em){.lbh-error-summary-1pgmm .govuk-list-d8wch{font-size:19px;font-size:1.1875rem;line-height:23px;line-height:1.4375rem}}.lbh-error-summary-1pgmm .govuk-list-d8wch .lbh-list-1KDxg,.lbh-error-summary-1pgmm .govuk-list-d8wch .govuk-list-d8wch{margin-top:12px;margin-top:.75rem}.lbh-error-summary-1pgmm .govuk-list-d8wch>li+li{margin-top:12px;margin-top:.75rem}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/core/_lists.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-summary/_index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-error-summary/_error-summary.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_lists.scss"],names:[],mappings:"AAQE,kBCOA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aKIgB,CNlCd,YAAa,CO6ET,kBChCM,CR3CV,cAAe,CACf,oBAAqB,CSsNjB,aT5NN,kBCsBE,sBE8BgC,CHxCjC,CSgNK,8BT5NN,kBCqJM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CD5DxC,CSgNK,aT5NN,kBCgJM,cGFa,CHGb,gBGFe,CJnIpB,CSgNK,aT5NN,kBCoCE,USI6B,CV5B9B,CSgNK,8BT5NN,kBOuFQ,kBCtCM,CRrCb,CAHC,oCACE,eQLG,CRMJ,qBAOD,iBQdI,CReL,0BAOC,iBQnBK,CRoBL,oBAAqB,CACtB,0BAGC,iBQxBK,CRyBL,uBAAwB,CACzB,0DAIC,eAAgB,CSuLZ,8BTzLN,0DAKI,iBQpCE,CRsCL,CAED,6BACE,kBQxCK,CCuND,8BThLN,6BAII,kBQ1CG,CR4CN,CWvDD,2BVsCA,aKIgB,CCyCV,YC9BM,CDgCN,kBChBM,CGhEV,wBL6BY,CG+LR,aEjON,2BVyCE,USI6B,CCnC9B,CFuNK,8BEjON,2BJ0FQ,YCpCM,CG5Cb,CFuNK,8BEjON,2BJ4FQ,kBCtBM,CG5Db,CAVD,iCAQI,yBCsBwB,CDrBzB,kCVGH,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CU9DvC,YAAa,CJsET,kBChCM,CC4KN,aErNN,kCVeE,sBE8BgC,CQxCjC,CFgNK,8BErNN,kCV8IM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CU5DxC,CFgNK,aErNN,kCVyIM,cGhBa,CHiBb,gBGhBe,COrHpB,CFgNK,8BErNN,kCJgFQ,kBCtCM,CGrCb,CAED,iCVPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CQoJnC,aE9MN,iCVQE,sBE8BgC,CQ/BjC,CFuMK,8BE9MN,iCVuIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CUnDxC,CFuMK,aE9MN,iCVkIM,cGFa,CHGb,gBGFe,CO1HpB,CAPD,mCAII,YAAa,CJ8DX,kBChCM,CC4KN,8BE9MN,mCJyEQ,kBCtCM,CG7BX,CAIH,iCACE,YAAa,CACb,eAAgB,CACjB,mCV8BD,eEuB0B,CFzE1B,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CYalC,yBAA0B,CJsMpB,aE/LN,mCVPE,sBE8BgC,CQnBjC,CEvBD,yCCCE,6BAA6C,CAE/C,aFMmB,CELnB,wBFW4B,CEV5B,uCFImB,CEDnB,oBAAqB,CDNpB,mFAgHC,aP/FY,COgGb,yCAGC,aAAyD,CAC1D,0CAGC,aPvGY,COnBd,yCAgIE,aDvHiB,CCwHlB,yBE/IC,eAAgB,CCuBlB,sBAhBa,CAiBb,8BARc,CDdZ,oBHsCkB,CGzCpB,2DEMA,uBfL2B,CeM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aLeoB,CKdpB,eCU0B,CFf1B,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CDVV,YAAa,CN0NX,8BMjON,2DCwBA,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,mBARc,CDTX,CARH,4DAWI,eG4BsB,CHvC1B,wYAmBM,aHsBc,CGzCpB,sCAwBI,eAAgB,CAxBpB,2CEMA,uBfL2B,CeM3B,kCAAmC,CACnC,iCAAkC,CETlC,cAAe,CACf,oBAAqB,CACrB,aP0CoB,CInBpB,cAhBa,CAiBb,cARc,CGdd,eD0CyB,CFrBzB,gBAhBa,CAiBb,qBARc,CGXd,6CACE,gBAAiB,CV0Nb,8BMjON,2CCwBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,qBARc,CDYX,CIdH,wHHSA,eAhBa,CAiBb,iBARc,CGCb,iDHMD,eAhBa,CAiBb,iBARc",sourcesContent:['@if not mixin-exists("govuk-exports") {\n  @warn "Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.";\n}\n\n@import "../base";\n\n@include govuk-exports("govuk/core/lists") {\n\n  %govuk-list {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n    margin-top: 0;\n    @include govuk-responsive-margin(4, "bottom");\n    padding-left: 0;\n    list-style-type: none;\n\n    // Add a top margin for nested lists\n    %govuk-list {\n      margin-top: govuk-spacing(2);\n    }\n  }\n\n  %govuk-list > li {\n    // Lists without numbers or bullets should always have extra space between\n    // list items. Lists with numbers or bullets only have this extra space on\n    // tablet and above\n    margin-bottom: govuk-spacing(1);\n  }\n\n  .govuk-list {\n    @extend %govuk-list;\n  }\n\n  %govuk-list--bullet {\n    padding-left: govuk-spacing(4);\n    list-style-type: disc;\n  }\n\n  %govuk-list--number {\n    padding-left: govuk-spacing(4);\n    list-style-type: decimal;\n  }\n\n  %govuk-list--bullet > li,\n  %govuk-list--number > li {\n    margin-bottom: 0;\n\n    @include govuk-media-query($from: tablet) {\n      margin-bottom: govuk-spacing(1);\n    }\n  }\n\n  %govuk-list--spaced > li {\n    margin-bottom: govuk-spacing(2);\n\n    @include govuk-media-query($from: tablet) {\n      margin-bottom: govuk-spacing(3);\n    }\n  }\n\n  .govuk-list--bullet {\n    @extend %govuk-list--bullet;\n  }\n\n  .govuk-list--number {\n    @extend %govuk-list--number;\n  }\n\n  .govuk-list--spaced {\n    @extend %govuk-list--spaced;\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n','////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "../../core/lists";\n\n@include govuk-exports("govuk/component/error-summary") {\n  .govuk-error-summary {\n    @include govuk-text-colour;\n    @include govuk-responsive-padding(4);\n    @include govuk-responsive-margin(8, "bottom");\n\n    border: $govuk-border-width solid $govuk-error-colour;\n\n    &:focus {\n      outline: $govuk-focus-width solid $govuk-focus-colour;\n    }\n  }\n\n  .govuk-error-summary__title {\n    @include govuk-font($size: 24, $weight: bold);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, "bottom");\n  }\n\n  .govuk-error-summary__body {\n    @include govuk-font($size: 19);\n\n    p {\n      margin-top: 0;\n      @include govuk-responsive-margin(4, "bottom");\n    }\n  }\n\n  // Cross-component class - adjusts styling of list component\n  .govuk-error-summary__list {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .govuk-error-summary__list a {\n    @include govuk-typography-weight-bold;\n    @include govuk-link-common;\n    @include govuk-link-style-error;\n  }\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if ($govuk-new-link-styles) {\n    @if ($govuk-link-underline-thickness) {\n      text-decoration-thickness: $govuk-link-underline-thickness;\n    }\n\n    @if ($govuk-link-underline-offset) {\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if ($govuk-new-link-styles and $govuk-link-hover-underline-thickness) {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven\'t\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it\'s\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover {\n    color: rgba($govuk-text-colour, .99);\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you\'re displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour("white");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour("white"), .99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it\'s not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it. This has no effect in Internet Explorer 8 (IE8),\n/// because IE8 does not support `:not`.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^="/"],\n    &[href^="http://"],\n    &[href^="https://"] {\n      &:after {\n        content: " (" attr(href) ")";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n','////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the "underline"\n  text-decoration: none;\n}\n','@import "node_modules/govuk-frontend/govuk/components/error-summary/error-summary";\n\n@include lbh-exports("lbh/component/error-summary") {\n  .lbh-error-summary {\n    margin-bottom: 0;\n    @include lbh-rem(padding, 18, 24, 24);\n    border-color: lbh-colour("lbh-error");\n\n    .govuk-error-summary__title {\n      @include lbh-heading-h2;\n      margin-top: 0;\n    }\n\n    .govuk-error-summary__list a {\n      font-weight: $lbh-font-weight-medium;\n\n      &,\n      &:link,\n      &:hover,\n      &:active,\n      &:focus,\n      &:visited {\n        color: lbh-colour("lbh-error");\n      }\n    }\n\n    & > *:last-child {\n      margin-bottom: 0;\n    }\n\n    .govuk-list {\n      @include lbh-list;\n    }\n  }\n}\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n',"@mixin lbh-list {\n  @include lbh-font;\n  padding-left: 0;\n  list-style-type: none;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 19);\n\n  * + & {\n    margin-top: 1.5em;\n  }\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 23);\n  }\n\n  .lbh-list,\n  .govuk-list {\n    @include lbh-rem(margin-top, 12);\n  }\n\n  & > li + li {\n    @include lbh-rem(margin-top, 12);\n  }\n}\n\n@mixin lbh-list--bullet {\n  @include lbh-rem(padding-left, 18);\n  list-style-type: disc;\n\n  & > li {\n    margin-bottom: 0;\n  }\n\n  .lbh-list--bullet {\n    list-style-type: circle;\n  }\n}\n\n@mixin lbh-list--number {\n  @include lbh-rem(padding-left, 18);\n  list-style-type: decimal;\n\n  & > li {\n    margin-bottom: 0;\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-list":"govuk-list-d8wch",govukList:"govuk-list-d8wch","govuk-list--bullet":"govuk-list--bullet-2p0jY",govukListBullet:"govuk-list--bullet-2p0jY","govuk-list--number":"govuk-list--number-3iryl",govukListNumber:"govuk-list--number-3iryl","govuk-list--spaced":"govuk-list--spaced-2nUbn",govukListSpaced:"govuk-list--spaced-2nUbn","govuk-error-summary":"govuk-error-summary-3DuHd",govukErrorSummary:"govuk-error-summary-3DuHd","govuk-error-summary__title":"govuk-error-summary__title-3zMWm",govukErrorSummaryTitle:"govuk-error-summary__title-3zMWm","govuk-error-summary__body":"govuk-error-summary__body-1uG4P",govukErrorSummaryBody:"govuk-error-summary__body-1uG4P","govuk-error-summary__list":"govuk-error-summary__list-QMKvc",govukErrorSummaryList:"govuk-error-summary__list-QMKvc","lbh-error-summary":"lbh-error-summary-1pgmm",lbhErrorSummary:"lbh-error-summary-1pgmm","lbh-list":"lbh-list-1KDxg",lbhList:"lbh-list-1KDxg"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/fieldset/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-fieldset-A1Udr{min-width:0;margin:0;padding:0;border:0}.govuk-fieldset-A1Udr:after{content:"";display:block;clear:both}@supports not (caret-color: auto){.govuk-fieldset-A1Udr,x:-moz-any-link{display:table-cell}}.govuk-fieldset__legend-1mylG{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;box-sizing:border-box;display:table;max-width:100%;margin-bottom:10px;padding:0;white-space:normal}@media print{.govuk-fieldset__legend-1mylG{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend-1mylG{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-fieldset__legend-1mylG{font-size:14pt;line-height:1.15}}@media print{.govuk-fieldset__legend-1mylG{color:#000}}.govuk-fieldset__legend--xl-1ac1z{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-fieldset__legend--xl-1ac1z{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--xl-1ac1z{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-fieldset__legend--xl-1ac1z{font-size:32pt;line-height:1.15}}.govuk-fieldset__legend--l-1tIDg{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-fieldset__legend--l-1tIDg{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--l-1tIDg{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-fieldset__legend--l-1tIDg{font-size:24pt;line-height:1.05}}.govuk-fieldset__legend--m-2j88U{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:15px}@media print{.govuk-fieldset__legend--m-2j88U{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--m-2j88U{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-fieldset__legend--m-2j88U{font-size:18pt;line-height:1.15}}.govuk-fieldset__legend--s-3fEqb{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-fieldset__legend--s-3fEqb{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--s-3fEqb{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-fieldset__legend--s-3fEqb{font-size:14pt;line-height:1.15}}.govuk-fieldset__heading-2uGB_{margin:0;font-size:inherit;font-weight:inherit}.lbh-fieldset-3oTpK{margin-top:1.5em}.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem;margin-bottom:0}@media (min-width: 40.0625em){.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG{font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}}.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--l-1tIDg,.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--xl-1ac1z,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--l-1tIDg,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--xl-1ac1z{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:32px;font-size:2rem;line-height:38px;line-height:2.375rem}@media (min-width: 40.0625em){.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--l-1tIDg,.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--xl-1ac1z,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--l-1tIDg,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--xl-1ac1z{font-size:48px;font-size:3rem;line-height:58px;line-height:3.625rem}}.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--m-2j88U,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--m-2j88U{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--m-2j88U,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG.govuk-fieldset__legend--m-2j88U{font-size:30px;font-size:1.875rem;line-height:36px;line-height:2.25rem}}.lbh-form-group-2-Oqd .govuk-fieldset__legend-1mylG+.govuk-hint-289Sb,.lbh-fieldset-3oTpK .govuk-fieldset__legend-1mylG+.govuk-hint-289Sb{margin-top:12px;margin-top:.75rem}.govuk-fieldset-A1Udr>.fieldset__error-1pOdU+.fieldset__content-2Fmy2,.govuk-fieldset-A1Udr>.fieldset__error-1pOdU+.fieldset__content-2Fmy2>*:first-child{margin-top:0}.fieldset--indent-X_6rV>.fieldset__content-2Fmy2{padding-left:15px;border-left:5px solid #bfc1c3}.fieldset--has-error-34E6h>.fieldset__content-2Fmy2{padding-left:15px;border-left:5px solid #be3a34}.fieldset__content-2Fmy2:empty{margin-top:0}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/fieldset/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_clearfix.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-fieldset/_fieldset.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/src/components/fieldset/styles.module.scss"],names:[],mappings:"AACE,sBACE,WAAY,CACZ,QAAS,CACT,SAAU,CACV,QAAS,CCIX,4BACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,kCDDC,sCAEE,kBAAmB,CACpB,CAGH,8BEHA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aKIgB,CPpBd,qBAAsB,CACtB,aAAc,CACd,cAAe,CACf,kBQfK,CRgBL,SAAU,CAEV,kBAAmB,CSqMf,aTlNN,8BEYE,sBE8BgC,CJ5BjC,CSoMK,8BTlNN,8BE2IM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CFhDxC,CSoMK,aTlNN,8BEsIM,cGFa,CHGb,gBGFe,CLvHpB,CSoMK,aTlNN,8BE0BE,UQI6B,CVhB9B,CAID,kCErBA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CF1CvC,kBQxBK,CCsND,aThMN,kCENE,sBE8BgC,CJrBjC,CS6LK,8BThMN,kCEyHM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CFzCxC,CS6LK,aThMN,kCEoHM,cG1Da,CH2Db,gBG1De,CLxDpB,CAED,iCE1BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CFrCvC,kBQ7BK,CCsND,aT3LN,iCEXE,sBE8BgC,CJhBjC,CSwLK,8BT3LN,iCEoHM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CFpCxC,CSwLK,aT3LN,iCE+GM,cG5Ca,CH6Cb,gBG5Ce,CLjEpB,CAED,iCE/BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CFhCvC,kBQlCK,CCsND,aTtLN,iCEhBE,sBE8BgC,CJXjC,CSmLK,8BTtLN,iCE+GM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CF/BxC,CSmLK,aTtLN,iCE0GM,cGhBa,CHiBb,gBGhBe,CLxFpB,CAED,iCEpCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aTjLN,iCErBE,sBE8BgC,CJPjC,CS+KK,8BTjLN,iCE0GM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CF3BxC,CS+KK,aTjLN,iCEqGM,cGFa,CHGb,gBGFe,CLlGpB,CAKD,+BACE,QAAS,CACT,iBAAkB,CAClB,mBAAoB,CW1DtB,oBACE,gBAAiB,CAClB,sGCID,uBTL2B,CSM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eEU0B,CCf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CJVZ,eAAgB,CF0NZ,8BE7NN,sGIoBA,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CJIb,CAjBD,8UCEA,uBTL2B,CSM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eEU0B,CCf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CNgNR,8BE7NN,8UIoBA,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CJLX,CARH,sKCEA,uBTL2B,CSM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eEU0B,CCf1B,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CNgNR,8BE7NN,sKIoBA,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,mBARc,CJDX,CAZH,0IIoBA,eAhBa,CAiBb,iBARc,CCjBhB,0JAGI,YAAa,CACd,iDAKC,iBREK,CQDL,6BHmCmB,CGlCpB,oDAGC,iBRHK,CQIL,6BH0BkB,CGzBnB,+BAIG,YAAa",sourcesContent:['@include govuk-exports("govuk/component/fieldset") {\n  .govuk-fieldset {\n    min-width: 0;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    @include govuk-clearfix;\n  }\n\n  // Fix for Firefox < 53\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=504622\n  @supports not (caret-color: auto) {\n    .govuk-fieldset,\n    x:-moz-any-link { // stylelint-disable-line selector-type-no-unknown\n      display: table-cell;\n    }\n  }\n\n  .govuk-fieldset__legend {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    // Fix legend text wrapping in Edge and IE\n    // 1. IE9-11 & Edge 12-13\n    // 2. IE8-11\n    box-sizing: border-box; // 1\n    display: table;         // 2\n    max-width: 100%;        // 1\n    margin-bottom: govuk-spacing(2);\n    padding: 0;\n\n    white-space: normal;    // 1\n  }\n\n  // Modifiers that make legends look more like their equivalent headings\n\n  .govuk-fieldset__legend--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the legend contains an H1, we want the H1 to inherit all styles from\n  // the legend. Effectively we want to be able to treat the heading as if it is\n  // not there.\n  .govuk-fieldset__heading {\n    margin: 0;\n    font-size: inherit;\n    font-weight: inherit;\n  }\n}\n','////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &:after {\n    content: "";\n    display: block;\n    clear: both;\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "node_modules/govuk-frontend/govuk/components/fieldset/fieldset";\n\n@include lbh-exports("lbh/component/fieldset") {\n  .lbh-fieldset {\n    margin-top: 1.5em;\n  }\n\n  .lbh-form-group .govuk-fieldset__legend,\n  .lbh-fieldset .govuk-fieldset__legend {\n    @include lbh-heading-h3;\n    margin-bottom: 0;\n\n    &.govuk-fieldset__legend--l,\n    &.govuk-fieldset__legend--xl {\n      @include lbh-heading-h1;\n    }\n\n    &.govuk-fieldset__legend--m {\n      @include lbh-heading-h2;\n    }\n\n    & + .govuk-hint {\n      @include lbh-rem(margin-top, 12);\n    }\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-fieldset/fieldset";\n\n.govuk-fieldset > .fieldset__error + .fieldset__content {\n  &,\n  & > *:first-child {\n    margin-top: 0;\n  }\n}\n\n.fieldset {\n  &--indent > .fieldset__content {\n    padding-left: govuk-spacing(3);\n    border-left: $govuk-border-width-form-group-error solid lbh-colour("lbh-grey-2");\n  }\n\n  &--has-error > .fieldset__content {\n    padding-left: govuk-spacing(3);\n    border-left: $govuk-border-width-form-group-error solid lbh-colour("lbh-error");\n  }\n\n  &__content {\n    &:empty {\n      margin-top: 0;\n    }\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-fieldset":"govuk-fieldset-A1Udr",govukFieldset:"govuk-fieldset-A1Udr","govuk-fieldset__legend":"govuk-fieldset__legend-1mylG",govukFieldsetLegend:"govuk-fieldset__legend-1mylG","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-1ac1z",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-1ac1z","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-1tIDg",govukFieldsetLegendL:"govuk-fieldset__legend--l-1tIDg","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-2j88U",govukFieldsetLegendM:"govuk-fieldset__legend--m-2j88U","govuk-fieldset__legend--s":"govuk-fieldset__legend--s-3fEqb",govukFieldsetLegendS:"govuk-fieldset__legend--s-3fEqb","govuk-fieldset__heading":"govuk-fieldset__heading-2uGB_",govukFieldsetHeading:"govuk-fieldset__heading-2uGB_","lbh-fieldset":"lbh-fieldset-3oTpK",lbhFieldset:"lbh-fieldset-3oTpK","lbh-form-group":"lbh-form-group-2-Oqd",lbhFormGroup:"lbh-form-group-2-Oqd","govuk-hint":"govuk-hint-289Sb",govukHint:"govuk-hint-289Sb",fieldset__error:"fieldset__error-1pOdU",fieldsetError:"fieldset__error-1pOdU",fieldset__content:"fieldset__content-2Fmy2",fieldsetContent:"fieldset__content-2Fmy2","fieldset--indent":"fieldset--indent-X_6rV",fieldsetIndent:"fieldset--indent-X_6rV","fieldset--has-error":"fieldset--has-error-34E6h",fieldsetHasError:"fieldset--has-error-34E6h"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/form-group/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-form-group--gFnD{margin-bottom:20px}.govuk-form-group--gFnD:after{content:"";display:block;clear:both}@media (min-width: 40.0625em){.govuk-form-group--gFnD{margin-bottom:30px}}.govuk-form-group--gFnD .govuk-form-group--gFnD:last-of-type{margin-bottom:0}.govuk-form-group--error-32pKU{padding-left:15px;border-left:5px solid #d4351c}.govuk-form-group--error-32pKU .govuk-form-group--gFnD{padding:0;border:0}.lbh-form-group-16wu3{margin-bottom:0}.lbh-form-group-16wu3 label sup,.lbh-form-group-16wu3 legend sup{color:#be3a34}fieldset.lbh-form-group-16wu3 legend{display:contents}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/objects/_form-group.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_clearfix.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/objects/_form-group.scss","webpack://./packages/react/src/components/form-group/styles.module.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss"],names:[],mappings:"AAGE,wBCqFM,kBCxBM,CCvDZ,8BACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,8BHVD,wBC4FQ,kBC9BM,CFvDb,CAPD,6DAKI,eAAgB,CACjB,+BAID,iBECK,CFAL,6BIuBY,CJzBd,uDAMI,SAAU,CACV,QAAS,CACV,sBKnBH,eAAgB,CCGlB,iEAIM,aCoCgB,CDnCjB,qCAKH,gBAAiB",sourcesContent:['@import "../base";\n\n@include govuk-exports("govuk/objects/form-group") {\n  .govuk-form-group {\n    @include govuk-clearfix;\n    @include govuk-responsive-margin(6, "bottom");\n\n    .govuk-form-group:last-of-type {\n      margin-bottom: 0; // Remove margin from last item in nested groups\n    }\n  }\n\n  .govuk-form-group--error {\n    padding-left: govuk-spacing(3);\n    border-left: $govuk-border-width-form-group-error solid $govuk-error-colour;\n\n    .govuk-form-group {\n      // Reset error styles in nested form groups that might have error class\n      padding: 0;\n      border: 0;\n    }\n  }\n}\n','////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &:after {\n    content: "";\n    display: block;\n    clear: both;\n  }\n}\n','@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',".lbh-form-group {\n  margin-bottom: 0;\n}\n",'@import "~lbh-frontend/lbh/base";\n@import "~govuk-frontend/govuk/objects/form-group";\n@import "~lbh-frontend/lbh/objects/form-group";\n\n.lbh-form-group {\n  label,\n  legend {\n    sup {\n      color: lbh-colour("lbh-error");\n    }\n  }\n}\n\nfieldset.lbh-form-group legend {\n  display: contents;\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-form-group":"govuk-form-group--gFnD",govukFormGroup:"govuk-form-group--gFnD","govuk-form-group--error":"govuk-form-group--error-32pKU",govukFormGroupError:"govuk-form-group--error-32pKU","lbh-form-group":"lbh-form-group-16wu3",lbhFormGroup:"lbh-form-group-16wu3"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/heading/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.lbh-heading-h1-fGAIe,h1{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:32px;font-size:2rem;line-height:38px;line-height:2.375rem}@media (min-width: 40.0625em){.lbh-heading-h1-fGAIe,h1{font-size:48px;font-size:3rem;line-height:58px;line-height:3.625rem}}.lbh-heading-h2-5xMSG,h2{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-heading-h2-5xMSG,h2{font-size:30px;font-size:1.875rem;line-height:36px;line-height:2.25rem}}.lbh-heading-h3-2iFx7,h3{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem}@media (min-width: 40.0625em){.lbh-heading-h3-2iFx7,h3{font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}}.lbh-heading-h4-34vdc,h4{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:18px;font-size:1.125rem;line-height:22px;line-height:1.375rem}@media (min-width: 40.0625em){.lbh-heading-h4-34vdc,h4{font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem}}.lbh-heading-h5-2Hkv2,h5{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:16px;font-size:1rem;line-height:19px;line-height:1.1875rem}@media (min-width: 40.0625em){.lbh-heading-h5-2Hkv2,h5{font-size:18px;font-size:1.125rem;line-height:22px;line-height:1.375rem}}.lbh-heading-h6-3dKLE,h6{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:14px;font-size:.875rem;line-height:17px;line-height:1.0625rem}@media (min-width: 40.0625em){.lbh-heading-h6-3dKLE,h6{font-size:16px;font-size:1rem;line-height:19px;line-height:1.1875rem}}.lbh-heading-large-light-2pxFo{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;font-weight:400;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-heading-large-light-2pxFo{font-size:36px;font-size:2.25rem;line-height:43px;line-height:2.6875rem}}.lbh-body-l-2yaJ8{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:19px;font-size:1.1875rem;font-weight:400;line-height:28px;line-height:1.75rem}@media (min-width: 40.0625em){.lbh-body-l-2yaJ8{font-size:24px;font-size:1.5rem;font-weight:400;line-height:33px;line-height:2.0625rem}}.lbh-body-m-8Lcq9{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-body-m-8Lcq9{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-body-s-yxa-a{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:13px;font-size:.8125rem;font-weight:400;line-height:19px;line-height:1.1875rem}@media (min-width: 40.0625em){.lbh-body-s-yxa-a{font-size:16px;font-size:1rem;line-height:24px;line-height:1.5rem}}.lbh-body-xs-36Jr1{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:14px;font-size:.875rem;font-weight:400;line-height:24px;line-height:1.5rem}.lbh-caption-3P8ZF{color:#525a5b}[class*="govuk-caption"]+[class*="lbh-heading"]{margin-top:0px}.lbh-body-lead-3R1mL{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:19px;font-size:1.1875rem;font-weight:400;line-height:28px;line-height:1.75rem}@media (min-width: 40.0625em){.lbh-body-lead-3R1mL{font-size:24px;font-size:1.5rem;font-weight:400;line-height:33px;line-height:2.0625rem}}.lbh-body-18j8s{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-body-18j8s{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}strong{font-weight:600}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/lbh-frontend/lbh/core/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss"],names:[],mappings:"AA4BI,yBCnBF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CCgNR,8BNxMJ,yBKDF,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CLWX,CAED,yBCxBF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CCgNR,8BNnMJ,yBKNF,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,mBARc,CLgBX,CAED,yBC7BF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CCgNR,8BN9LJ,yBKXF,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CLqBX,CAED,yBClCF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,oBARc,CCgNR,8BNzLJ,yBKhBF,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CL0BX,CAED,yBCvCF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,qBARc,CCgNR,8BNpLJ,yBKrBF,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,oBARc,CL+BX,CAED,yBC5CF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,qBARc,CCgNR,8BN/KJ,yBK1BF,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,qBARc,CLoCX,CAGH,+BClDA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,gBARc,CJoFd,eGxDyB,CCrBzB,gBAhBa,CAiBb,qBARc,CCgNR,8BNzKN,+BKhCA,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,qBARc,CLyCb,CAGD,kBCvDA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAwGlC,aErEoB,CEnBpB,cAhBa,CAiBb,mBARc,CJiGd,eGrEyB,CCrBzB,gBAhBa,CAiBb,mBARc,CCgNR,8BNpKN,kBKrCA,cAhBa,CAiBb,gBARc,CJsGZ,eG1EuB,CCrBzB,gBAhBa,CAiBb,qBARc,CL8Cb,CAED,kBC3DA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aEnFoB,CEnBpB,cAhBa,CAiBb,cARc,CJ+Gd,eGnFyB,CCrBzB,gBAhBa,CAiBb,oBARc,CCgNR,8BNhKN,kBKzCA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CLkDb,CAED,kBC/DA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmIlC,aEhGoB,CEnBpB,cAhBa,CAiBb,kBARc,CJ4Hd,eGlH2B,CCH3B,gBAhBa,CAiBb,qBARc,CCgNR,8BN5JN,kBK7CA,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,kBARc,CLsDb,CAED,mBCnEA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAgJlC,aE7GoB,CEnBpB,cAhBa,CAiBb,iBARc,CJyId,eG/H2B,CCH3B,gBAhBa,CAiBb,kBARc,CL0Db,mBCoFD,aErI6B,CHsD5B,gDAIC,cAAe,CAChB,qBC/ED,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAwGlC,aErEoB,CEnBpB,cAhBa,CAiBb,mBARc,CJiGd,eGrEyB,CCrBzB,gBAhBa,CAiBb,mBARc,CCgNR,8BNrIN,qBKpEA,cAhBa,CAiBb,gBARc,CJsGZ,eG1EuB,CCrBzB,gBAhBa,CAiBb,qBARc,CL6Eb,CAED,gBC1FA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aEnFoB,CEnBpB,cAhBa,CAiBb,cARc,CJ+Gd,eGnFyB,CCrBzB,gBAhBa,CAiBb,oBARc,CCgNR,8BNjIN,gBKxEA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CLiFb,CAED,OACE,eI9DwB",sourcesContent:['@include lbh-exports("lbh/core/typography") {\n  // Headings\n\n  @if $lbh-safely-embed {\n    .lbh-heading-h1 {\n      @include lbh-heading-h1;\n    }\n\n    .lbh-heading-h2 {\n      @include lbh-heading-h2;\n    }\n\n    .lbh-heading-h3 {\n      @include lbh-heading-h3;\n    }\n\n    .lbh-heading-h4 {\n      @include lbh-heading-h4;\n    }\n\n    .lbh-heading-h5 {\n      @include lbh-heading-h5;\n    }\n\n    .lbh-heading-h6 {\n      @include lbh-heading-h6;\n    }\n  } @else {\n    .lbh-heading-h1,\n    h1 {\n      @include lbh-heading-h1;\n    }\n\n    .lbh-heading-h2,\n    h2 {\n      @include lbh-heading-h2;\n    }\n\n    .lbh-heading-h3,\n    h3 {\n      @include lbh-heading-h3;\n    }\n\n    .lbh-heading-h4,\n    h4 {\n      @include lbh-heading-h4;\n    }\n\n    .lbh-heading-h5,\n    h5 {\n      @include lbh-heading-h5;\n    }\n\n    .lbh-heading-h6,\n    h6 {\n      @include lbh-heading-h6;\n    }\n  }\n\n  .lbh-heading-large-light {\n    @include lbh-heading-large-light;\n  }\n\n  // Body (paragraphs)\n  .lbh-body-l {\n    @include lbh-body-l;\n  }\n\n  .lbh-body-m {\n    @include lbh-body-m;\n  }\n\n  .lbh-body-s {\n    @include lbh-body-s;\n  }\n\n  .lbh-body-xs {\n    @include lbh-body-xs;\n  }\n\n  // captions\n  .lbh-caption {\n    @include lbh-caption;\n  }\n\n  // properly space captions and headings\n  [class*="govuk-caption"] + [class*="lbh-heading"] {\n    margin-top: 0px;\n  }\n\n  // Usage aliases\n\n  // Using extend to alias means we also inherit any contextual adjustments that\n  // refer to the \'original\' class name\n\n  .lbh-body-lead {\n    @include lbh-body-l;\n  }\n\n  .lbh-body {\n    @include lbh-body-m;\n  }\n\n  strong {\n    font-weight: $lbh-font-weight-medium;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-heading-h1":"lbh-heading-h1-fGAIe",lbhHeadingH1:"lbh-heading-h1-fGAIe","lbh-heading-h2":"lbh-heading-h2-5xMSG",lbhHeadingH2:"lbh-heading-h2-5xMSG","lbh-heading-h3":"lbh-heading-h3-2iFx7",lbhHeadingH3:"lbh-heading-h3-2iFx7","lbh-heading-h4":"lbh-heading-h4-34vdc",lbhHeadingH4:"lbh-heading-h4-34vdc","lbh-heading-h5":"lbh-heading-h5-2Hkv2",lbhHeadingH5:"lbh-heading-h5-2Hkv2","lbh-heading-h6":"lbh-heading-h6-3dKLE",lbhHeadingH6:"lbh-heading-h6-3dKLE","lbh-heading-large-light":"lbh-heading-large-light-2pxFo",lbhHeadingLargeLight:"lbh-heading-large-light-2pxFo","lbh-body-l":"lbh-body-l-2yaJ8",lbhBodyL:"lbh-body-l-2yaJ8","lbh-body-m":"lbh-body-m-8Lcq9",lbhBodyM:"lbh-body-m-8Lcq9","lbh-body-s":"lbh-body-s-yxa-a",lbhBodyS:"lbh-body-s-yxa-a","lbh-body-xs":"lbh-body-xs-36Jr1",lbhBodyXs:"lbh-body-xs-36Jr1","lbh-caption":"lbh-caption-3P8ZF",lbhCaption:"lbh-caption-3P8ZF","lbh-body-lead":"lbh-body-lead-3R1mL",lbhBodyLead:"lbh-body-lead-3R1mL","lbh-body":"lbh-body-18j8s",lbhBody:"lbh-body-18j8s"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/hint/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-35O_V{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-35O_V{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-35O_V{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-35O_V{font-size:14pt;line-height:1.15}}.govuk-label-1Ux7D:not(.govuk-label--m-2aYpi):not(.govuk-label--l-3Qu4B):not(.govuk-label--xl-849PB)+.govuk-hint-35O_V{margin-bottom:10px}.govuk-fieldset__legend-25LEU:not(.govuk-fieldset__legend--m-1tKT8):not(.govuk-fieldset__legend--l-25jnq):not(.govuk-fieldset__legend--xl-21ruc)+.govuk-hint-35O_V{margin-bottom:10px}.govuk-fieldset__legend-25LEU+.govuk-hint-35O_V{margin-top:-5px}.lbh-hint-1LB-y{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-1LB-y{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-35O_V",govukHint:"govuk-hint-35O_V","govuk-label":"govuk-label-1Ux7D",govukLabel:"govuk-label-1Ux7D","govuk-label--m":"govuk-label--m-2aYpi",govukLabelM:"govuk-label--m-2aYpi","govuk-label--l":"govuk-label--l-3Qu4B",govukLabelL:"govuk-label--l-3Qu4B","govuk-label--xl":"govuk-label--xl-849PB",govukLabelXl:"govuk-label--xl-849PB","govuk-fieldset__legend":"govuk-fieldset__legend-25LEU",govukFieldsetLegend:"govuk-fieldset__legend-25LEU","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-1tKT8",govukFieldsetLegendM:"govuk-fieldset__legend--m-1tKT8","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-25jnq",govukFieldsetLegendL:"govuk-fieldset__legend--l-25jnq","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-21ruc",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-21ruc","lbh-hint":"lbh-hint-1LB-y",lbhHint:"lbh-hint-1LB-y"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/icon/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".icon-L6ZpG{display:inline-block;color:currentColor;line-height:1em;flex-shrink:0;vertical-align:middle}\n","",{version:3,sources:["webpack://./packages/react/src/components/icon/styles.module.scss"],names:[],mappings:"AAAA,YACE,oBAAqB,CACrB,kBAAmB,CACnB,eAAgB,CAChB,aAAc,CACd,qBAAsB",sourcesContent:[".icon {\n  display: inline-block;\n  color: currentColor;\n  line-height: 1em;\n  flex-shrink: 0;\n  vertical-align: middle;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={icon:"icon-L6ZpG"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/input/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-W3oUE{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-W3oUE{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-W3oUE{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-W3oUE{font-size:14pt;line-height:1.15}}.govuk-label-2FTkz:not(.govuk-label--m-3A4kc):not(.govuk-label--l-3aV8o):not(.govuk-label--xl-1j7Km)+.govuk-hint-W3oUE{margin-bottom:10px}.govuk-fieldset__legend-3LqPV:not(.govuk-fieldset__legend--m-OAzks):not(.govuk-fieldset__legend--l-2uv0t):not(.govuk-fieldset__legend--xl-1xwec)+.govuk-hint-W3oUE{margin-bottom:10px}.govuk-fieldset__legend-3LqPV+.govuk-hint-W3oUE{margin-top:-5px}.lbh-hint-2j4tL{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-2j4tL{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-error-message-3IWsb{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-3IWsb{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-3IWsb{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-3IWsb{font-size:14pt;line-height:1.15}}.govuk-label-2FTkz{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-2FTkz{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-2FTkz{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-2FTkz{font-size:14pt;line-height:1.15}}@media print{.govuk-label-2FTkz{color:#000}}.govuk-label--xl-1j7Km{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-1j7Km{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-1j7Km{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-1j7Km{font-size:32pt;line-height:1.15}}.govuk-label--l-3aV8o{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-3aV8o{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-3aV8o{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-3aV8o{font-size:24pt;line-height:1.05}}.govuk-label--m-3A4kc{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-3A4kc{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-3A4kc{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-3A4kc{font-size:18pt;line-height:1.15}}.govuk-label--s-sngGk{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-sngGk{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-sngGk{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-sngGk{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-3zno6{margin:0}.govuk-input-3O-Oy{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;box-sizing:border-box;width:100%;height:40px;height:2.5rem;margin-top:0;padding:5px;border:2px solid #0b0c0c;border-radius:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@media print{.govuk-input-3O-Oy{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-input-3O-Oy{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-input-3O-Oy{font-size:14pt;line-height:1.15}}.govuk-input-3O-Oy:focus{outline:3px solid #ffc845;outline-offset:0;box-shadow:inset 0 0 0 2px}.govuk-input-3O-Oy::-webkit-outer-spin-button,.govuk-input-3O-Oy::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.govuk-input-3O-Oy[type="number"]{-moz-appearance:textfield}.govuk-input--error-100Di{border:2px solid #d4351c}.govuk-input--error-100Di:focus{border-color:#0b0c0c}.govuk-input--width-30-1OXxJ{max-width:59ex}.govuk-input--width-20-3EZSX{max-width:41ex}.govuk-input--width-10-3Fgh0{max-width:23ex}.govuk-input--width-5-t4RKs{max-width:10.8ex}.govuk-input--width-4-eGpiM{max-width:9ex}.govuk-input--width-3-TnuJH{max-width:7.2ex}.govuk-input--width-2-y3Pgp{max-width:5.4ex}.govuk-input__wrapper-3N9Q2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.govuk-input__wrapper-3N9Q2 .govuk-input-3O-Oy{-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto}.govuk-input__wrapper-3N9Q2 .govuk-input-3O-Oy:focus{z-index:1}@media (max-width: 19.99em){.govuk-input__wrapper-3N9Q2{display:block}.govuk-input__wrapper-3N9Q2 .govuk-input-3O-Oy{max-width:100%}}.govuk-input__prefix-IKQBz,.govuk-input__suffix-1oiBv{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;box-sizing:border-box;display:inline-block;min-width:40px;min-width:2.5rem;height:40px;height:2.5rem;padding:5px;border:2px solid #0b0c0c;background-color:#f3f2f1;text-align:center;white-space:nowrap;cursor:default;-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto}@media print{.govuk-input__prefix-IKQBz,.govuk-input__suffix-1oiBv{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-input__prefix-IKQBz,.govuk-input__suffix-1oiBv{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-input__prefix-IKQBz,.govuk-input__suffix-1oiBv{font-size:14pt;line-height:1.15}}@media (max-width: 40.0525em){.govuk-input__prefix-IKQBz,.govuk-input__suffix-1oiBv{line-height:1.6}}@media (max-width: 19.99em){.govuk-input__prefix-IKQBz,.govuk-input__suffix-1oiBv{display:block;height:100%;white-space:normal}}@media (max-width: 19.99em){.govuk-input__prefix-IKQBz{border-bottom:0}}@media (min-width: 20em){.govuk-input__prefix-IKQBz{border-right:0}}@media (max-width: 19.99em){.govuk-input__suffix-1oiBv{border-top:0}}@media (min-width: 20em){.govuk-input__suffix-1oiBv{border-left:0}}.lbh-input-AFsKC{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-input-AFsKC{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/input/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_measurements.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-input/_input.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb,CKXD,2BbcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,Ca5EvC,aAAc,CACd,kBRSK,CQRL,UAAW,CAEX,aP6BY,CC+LR,aMnON,2Bb6BE,sBE8BgC,CWnDjC,CN2NK,8BMnON,2Bb4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CavExC,CN2NK,aMnON,2BbuJM,cGFa,CHGb,gBGFe,CU9IpB,CCRD,mBdcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CQxCd,aAAc,CAEd,iBTKI,CEwNA,aOnON,mBd6BE,sBE8BgC,CYpDjC,CP4NK,8BOnON,mBd4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcxExC,CP4NK,aOnON,mBduJM,cGFa,CHGb,gBGFe,CW/IpB,CP4NK,aOnON,mBd2CE,UeI6B,CDxC9B,CAID,uBdGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CclEvC,kBTAK,CEsND,aOxNN,uBdkBE,sBE8BgC,CY7CjC,CPqNK,8BOxNN,uBdiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CcjExC,CPqNK,aOxNN,uBd4IM,cG1Da,CH2Db,gBG1De,CWhFpB,CAED,sBdFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,Cc7DvC,kBTLK,CEsND,aOnNN,sBdaE,sBE8BgC,CYxCjC,CPgNK,8BOnNN,sBd4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,Cc5DxC,CPgNK,aOnNN,sBduIM,cG5Ca,CH6Cb,gBG5Ce,CWzFpB,CAED,sBdPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CcxDvC,kBTXK,CEuND,aO9MN,sBdQE,sBE8BgC,CYnCjC,CP2MK,8BO9MN,sBduIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CcvDxC,CP2MK,aO9MN,sBdkIM,cGhBa,CHiBb,gBGhBe,CWhHpB,CAED,sBdZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aOzMN,sBdGE,sBE8BgC,CY/BjC,CPuMK,8BOzMN,sBdkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcnDxC,CPuMK,aOzMN,sBd6HM,cGFa,CHGb,gBGFe,CW1HpB,CAQD,2BACE,QAAS,CEjCX,mBhBUA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CgBxEvC,qBAAsB,CACtB,UAAW,CACX,WAAY,CAEV,aZMyC,CYJ3C,YAAa,CAEb,WXJI,CWOJ,wBV0Bc,CUzBd,eAAgB,CAGhB,uBAAwB,CACrB,oBAAqB,CAChB,eAAgB,CT2MpB,aS/NN,mBhByBE,sBE8BgC,CcjBjC,CTyLK,8BS/NN,mBhBwJM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgBrCxC,CTyLK,aS/NN,mBhBmJM,cGFa,CHGb,gBGFe,Ca5GpB,CAtCD,yBAuBI,yBNKwB,CMHxB,gBAAiB,CAKjB,0BCsC+B,CD/BhC,4FAKD,QAAS,CACT,uBAAwB,CACzB,kCAGC,yBAA0B,CAC3B,0BAGC,wBVnBY,CUkBd,gCAII,oBVdY,CUeb,6BAQD,cAAqB,CACtB,6BAGC,cAAqB,CACtB,6BAGC,cAAqB,CACtB,4BAGC,gBAAiB,CAClB,4BAGC,aAAc,CACf,4BAGC,eAAgB,CACjB,4BAGC,eAAgB,CACjB,4BAGC,mBAAoB,CACpB,oBAAqB,CACrB,mBAAoB,CACpB,YAAa,CAJf,+CAOI,kBAAmB,CACnB,qBAAsB,CAClB,iBAAkB,CACd,aAAc,CAV1B,qDAeI,SAAU,CTsHR,4BSrIN,4BAoBI,aAAc,CApBlB,+CAwBM,cAAe,CAChB,CAIL,sDhB7GA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CgBgDvC,qBAAsB,CACtB,oBAAqB,CACrB,cAAe,CAEb,gBZlHyC,CYoH3C,WAAY,CAEV,aZtHyC,CYyH3C,WX/HI,CWgIJ,wBV/Fc,CUgGd,wBV7FmB,CU+FnB,iBAAkB,CAIlB,kBAAmB,CAGnB,cAAe,CAEf,kBAAmB,CAEnB,qBAAsB,CAElB,iBAAkB,CAEd,aAAc,CTsElB,aSxGN,sDhB9FE,sBE8BgC,Cc0GjC,CT8DK,8BSxGN,sDhBiCM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgBsFxC,CT8DK,aSxGN,sDhB4BM,cGFa,CHGb,gBGFe,CaepB,CT8DK,8BSxGN,sDAqBI,eAAgB,CAqBnB,CT8DK,4BSxGN,sDAsCI,aAAc,CACd,WAAY,CACZ,kBAAmB,CAEtB,CT8DK,4BS5DN,2BAEI,eAAgB,CAOnB,CTmDK,yBS5DN,2BAMM,cAAe,CAGpB,CTmDK,4BShDN,2BAEI,YAAa,CAOhB,CTuCK,yBShDN,2BAMM,aAAc,CAGnB,CExLD,iBTIA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CJgNR,8BW/NN,iBPsBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CObb",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n',"@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "../error-message/index";\n@import "../hint/index";\n@import "../label/index";\n\n@include govuk-exports("govuk/component/input") {\n  .govuk-input {\n    @include govuk-font($size: 19);\n\n    box-sizing: border-box;\n    width: 100%;\n    height: 40px;\n    @if $govuk-typography-use-rem {\n      height: govuk-px-to-rem(40px);\n    }\n    margin-top: 0;\n\n    padding: govuk-spacing(1);\n    // setting any background-color makes text invisible when changing colours to dark backgrounds in Firefox (https://bugzilla.mozilla.org/show_bug.cgi?id=1335476)\n    // as background-color and color need to always be set together, color should not be set either\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\n    border-radius: 0;\n\n    // Disable inner shadow and remove rounded corners\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n\n    &:focus {\n      outline: $govuk-focus-width solid $govuk-focus-colour;\n      // Ensure outline appears outside of the element\n      outline-offset: 0;\n      // Double the border by adding its width again. Use `box-shadow` for this // instead of changing `border-width` - this is for consistency with\n      // components such as textarea where we avoid changing `border-width` as\n      // it will change the element size. Also, `outline` cannot be utilised\n      // here as it is already used for the yellow focus state.\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\n\n      @include govuk-if-ie8 {\n        // IE8 doesn\'t support `box-shadow` so double the border with\n        // `border-width`.\n        border-width: $govuk-border-width-form-element * 2;\n      }\n    }\n  }\n\n  .govuk-input::-webkit-outer-spin-button,\n  .govuk-input::-webkit-inner-spin-button {\n    margin: 0;\n    -webkit-appearance: none;\n  }\n\n  .govuk-input[type="number"] {\n    -moz-appearance: textfield;\n  }\n\n  .govuk-input--error {\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\n\n    &:focus {\n      border-color: $govuk-input-border-colour;\n    }\n  }\n\n  // The ex measurements are based on the number of W\'s that can fit inside the input\n  // Extra space is left on the right hand side to allow for the Safari prefill icon\n  // Linear regression estimation based on visual tests: y = 1.76 + 1.81x\n\n  .govuk-input--width-30 {\n    max-width: 56ex + 3ex;\n  }\n\n  .govuk-input--width-20 {\n    max-width: 38ex + 3ex;\n  }\n\n  .govuk-input--width-10 {\n    max-width: 20ex + 3ex;\n  }\n\n  .govuk-input--width-5 {\n    max-width: 10.8ex;\n  }\n\n  .govuk-input--width-4 {\n    max-width: 9ex;\n  }\n\n  .govuk-input--width-3 {\n    max-width: 7.2ex;\n  }\n\n  .govuk-input--width-2 {\n    max-width: 5.4ex;\n  }\n\n  .govuk-input__wrapper {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n\n    .govuk-input {\n      -webkit-box-flex: 0;\n      -webkit-flex: 0 1 auto;\n          -ms-flex: 0 1 auto;\n              flex: 0 1 auto;\n    }\n\n    .govuk-input:focus {\n      // Hack to stop focus style being overlapped by the suffix\n      z-index: 1;\n    }\n\n    // Split prefix/suffix onto separate lines on narrow screens\n    @include govuk-media-query($until: mobile) {\n      display: block;\n\n      .govuk-input {\n        // Set max-width to override potential width override class on the input\n        max-width: 100%;\n      }\n    }\n  }\n\n  .govuk-input__prefix,\n  .govuk-input__suffix {\n    @include govuk-font($size: 19);\n\n    box-sizing: border-box;\n    display: inline-block;\n    min-width: 40px;\n    @if $govuk-typography-use-rem {\n      min-width: govuk-px-to-rem(40px);\n    }\n    height: 40px;\n    @if $govuk-typography-use-rem {\n      height: govuk-px-to-rem(40px);\n    }\n\n    padding: govuk-spacing(1);\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\n    background-color: govuk-colour("light-grey", $legacy: "grey-3");\n\n    text-align: center;\n    @include govuk-media-query($until: tablet) {\n      line-height: 1.6;\n    }\n    white-space: nowrap;\n\n    // Emphasise non-editable status of prefixes and suffixes\n    cursor: default;\n\n    -webkit-box-flex: 0;\n\n    -webkit-flex: 0 0 auto;\n\n        -ms-flex: 0 0 auto;\n\n            flex: 0 0 auto;\n\n    // Split prefix/suffix onto separate lines on narrow screens\n    @include govuk-media-query($until: mobile) {\n      display: block;\n      height: 100%;\n      white-space: normal;\n    }\n  }\n\n  .govuk-input__prefix {\n    @include govuk-media-query($until: mobile) {\n      border-bottom: 0;\n    }\n    @include govuk-media-query($from: mobile) {\n      @include govuk-not-ie8 {\n        border-right: 0;\n      }\n    }\n  }\n\n  // Split prefix/suffix onto separate lines on narrow screens\n  .govuk-input__suffix {\n    @include govuk-media-query($until: mobile) {\n      border-top: 0;\n    }\n    @include govuk-media-query($from: mobile) {\n      @include govuk-not-ie8 {\n        border-left: 0;\n      }\n    }\n  }\n}\n',"////\n/// @group settings/measurements\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: 25%,\n  one-third: 33.3333%,\n  one-half: 50%,\n  two-thirds: 66.6666%,\n  three-quarters: 75%,\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form control border width when in error state\n///\n/// @type Number\n/// @access public\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\n///   difference in thickness for inputs in the error state, in order to\n///   maintain a distinct focus state.\n\n$govuk-border-width-form-element-error: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n",'@import "../lbh-hint/hint";\n\n@import "node_modules/govuk-frontend/govuk/components/input/input";\n\n@include lbh-exports("lbh/component/input") {\n  .lbh-input {\n    @include lbh-body-m;\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-W3oUE",govukHint:"govuk-hint-W3oUE","govuk-label":"govuk-label-2FTkz",govukLabel:"govuk-label-2FTkz","govuk-label--m":"govuk-label--m-3A4kc",govukLabelM:"govuk-label--m-3A4kc","govuk-label--l":"govuk-label--l-3aV8o",govukLabelL:"govuk-label--l-3aV8o","govuk-label--xl":"govuk-label--xl-1j7Km",govukLabelXl:"govuk-label--xl-1j7Km","govuk-fieldset__legend":"govuk-fieldset__legend-3LqPV",govukFieldsetLegend:"govuk-fieldset__legend-3LqPV","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-OAzks",govukFieldsetLegendM:"govuk-fieldset__legend--m-OAzks","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-2uv0t",govukFieldsetLegendL:"govuk-fieldset__legend--l-2uv0t","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-1xwec",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-1xwec","lbh-hint":"lbh-hint-2j4tL",lbhHint:"lbh-hint-2j4tL","govuk-error-message":"govuk-error-message-3IWsb",govukErrorMessage:"govuk-error-message-3IWsb","govuk-label--s":"govuk-label--s-sngGk",govukLabelS:"govuk-label--s-sngGk","govuk-label-wrapper":"govuk-label-wrapper-3zno6",govukLabelWrapper:"govuk-label-wrapper-3zno6","govuk-input":"govuk-input-3O-Oy",govukInput:"govuk-input-3O-Oy","govuk-input--error":"govuk-input--error-100Di",govukInputError:"govuk-input--error-100Di","govuk-input--width-30":"govuk-input--width-30-1OXxJ",govukInputWidth30:"govuk-input--width-30-1OXxJ","govuk-input--width-20":"govuk-input--width-20-3EZSX",govukInputWidth20:"govuk-input--width-20-3EZSX","govuk-input--width-10":"govuk-input--width-10-3Fgh0",govukInputWidth10:"govuk-input--width-10-3Fgh0","govuk-input--width-5":"govuk-input--width-5-t4RKs",govukInputWidth5:"govuk-input--width-5-t4RKs","govuk-input--width-4":"govuk-input--width-4-eGpiM",govukInputWidth4:"govuk-input--width-4-eGpiM","govuk-input--width-3":"govuk-input--width-3-TnuJH",govukInputWidth3:"govuk-input--width-3-TnuJH","govuk-input--width-2":"govuk-input--width-2-y3Pgp",govukInputWidth2:"govuk-input--width-2-y3Pgp","govuk-input__wrapper":"govuk-input__wrapper-3N9Q2",govukInputWrapper:"govuk-input__wrapper-3N9Q2","govuk-input__prefix":"govuk-input__prefix-IKQBz",govukInputPrefix:"govuk-input__prefix-IKQBz","govuk-input__suffix":"govuk-input__suffix-1oiBv",govukInputSuffix:"govuk-input__suffix-1oiBv","lbh-input":"lbh-input-AFsKC",lbhInput:"lbh-input-AFsKC"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/label/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-label-1kCZZ{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-1kCZZ{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-1kCZZ{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-1kCZZ{font-size:14pt;line-height:1.15}}@media print{.govuk-label-1kCZZ{color:#000}}.govuk-label--xl-1S0Sa{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-1S0Sa{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-1S0Sa{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-1S0Sa{font-size:32pt;line-height:1.15}}.govuk-label--l-38sZj{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-38sZj{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-38sZj{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-38sZj{font-size:24pt;line-height:1.05}}.govuk-label--m-CADK8{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-CADK8{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-CADK8{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-CADK8{font-size:18pt;line-height:1.15}}.govuk-label--s-2224w{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2224w{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2224w{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2224w{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-12w4D{margin:0}.lbh-label-3pM3o{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:6px;margin-bottom:.375rem}@media (min-width: 40.0625em){.lbh-label-3pM3o{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-label--xl-1S0Sa{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-1S0Sa{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-1S0Sa{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-1S0Sa{font-size:32pt;line-height:1.15}}.govuk-label--l-38sZj{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-38sZj{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-38sZj{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-38sZj{font-size:24pt;line-height:1.05}}.govuk-label--m-CADK8{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-CADK8{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-CADK8{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-CADK8{font-size:18pt;line-height:1.15}}.govuk-label--s-2224w{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2224w{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2224w{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2224w{font-size:14pt;line-height:1.15}}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-label/_label.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss"],names:[],mappings:"AACE,mBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aKIgB,CNxCd,aAAc,CAEd,iBOKI,CCwNA,aRnON,mBC6BE,sBE8BgC,CHpDjC,CQ4NK,8BRnON,mBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDxExC,CQ4NK,aRnON,mBCuJM,cGFa,CHGb,gBGFe,CJ/IpB,CQ4NK,aRnON,mBC2CE,UQI6B,CTxC9B,CAID,uBCGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CDlEvC,kBOAK,CCsND,aRxNN,uBCkBE,sBE8BgC,CH7CjC,CQqNK,8BRxNN,uBCiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CDjExC,CQqNK,aRxNN,uBC4IM,cG1Da,CH2Db,gBG1De,CJhFpB,CAED,sBCFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CD7DvC,kBOLK,CCsND,aRnNN,sBCaE,sBE8BgC,CHxCjC,CQgNK,8BRnNN,sBC4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CD5DxC,CQgNK,aRnNN,sBCuIM,cG5Ca,CH6Cb,gBG5Ce,CJzFpB,CAED,sBCPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CDxDvC,kBOXK,CCuND,aR9MN,sBCQE,sBE8BgC,CHnCjC,CQ2MK,8BR9MN,sBCuIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CDvDxC,CQ2MK,aR9MN,sBCkIM,cGhBa,CHiBb,gBGhBe,CJhHpB,CAED,sBCZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aRzMN,sBCGE,sBE8BgC,CH/BjC,CQuMK,8BRzMN,sBCkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDnDxC,CQuMK,aRzMN,sBC6HM,cGFa,CHGb,gBGFe,CJ1HpB,CAQD,2BACE,QAAS,CU9BX,iBCCA,uBTL2B,CSM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CAOd,iBAhBa,CAiBb,qBARc,CLgNR,8BE5NN,iBGmBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHVb,CAID,uBTCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CShEvC,kBHFK,CCsND,aEtNN,uBTgBE,sBE8BgC,CO3CjC,CFmNK,8BEtNN,uBT+IM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CS/DxC,CFmNK,aEtNN,uBT0IM,cG1Da,CH2Db,gBG1De,CM9EpB,CAED,sBTJA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CS3DvC,kBHPK,CCsND,aEjNN,sBTWE,sBE8BgC,COtCjC,CF8MK,8BEjNN,sBT0IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CS1DxC,CF8MK,aEjNN,sBTqIM,cG5Ca,CH6Cb,gBG5Ce,CMvFpB,CAED,sBTTA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CStDvC,kBHbK,CCuND,aE5MN,sBTME,sBE8BgC,COjCjC,CFyMK,8BE5MN,sBTqIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CSrDxC,CFyMK,aE5MN,sBTgIM,cGhBa,CHiBb,gBGhBe,CM9GpB,CAED,sBTdA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aEvMN,sBTCE,sBE8BgC,CO7BjC,CFqMK,8BEvMN,sBTgIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CSjDxC,CFqMK,aEvMN,sBT2HM,cGFa,CHGb,gBGFe,CMxHpB",sourcesContent:["@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "node_modules/govuk-frontend/govuk/components/label/label";\n\n@mixin lbh-label {\n  @include lbh-body-m;\n  @include lbh-rem(margin-bottom, 6);\n}\n\n@include lbh-exports("lbh/component/label") {\n  .lbh-label {\n    @include lbh-label;\n  }\n\n  // copied these over from govuk frontend because i couldn\'t see any other way to win the specificity battle\n  // solves: https://github.com/LBHackney-IT/lbh-frontend/issues/147\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-label":"govuk-label-1kCZZ",govukLabel:"govuk-label-1kCZZ","govuk-label--xl":"govuk-label--xl-1S0Sa",govukLabelXl:"govuk-label--xl-1S0Sa","govuk-label--l":"govuk-label--l-38sZj",govukLabelL:"govuk-label--l-38sZj","govuk-label--m":"govuk-label--m-CADK8",govukLabelM:"govuk-label--m-CADK8","govuk-label--s":"govuk-label--s-2224w",govukLabelS:"govuk-label--s-2224w","govuk-label-wrapper":"govuk-label-wrapper-12w4D",govukLabelWrapper:"govuk-label-wrapper-12w4D","lbh-label":"lbh-label-3pM3o",lbhLabel:"lbh-label-3pM3o"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/link-box/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'.link-overlay-2XPdn a{position:static}.link-overlay-2XPdn a:before{content:"";cursor:inherit;display:block;position:absolute;top:0;left:0;z-index:0;width:100%;height:100%}.link-box-3LNmq{position:relative}.link-box-3LNmq *:not(.link-overlay-2XPdn)>a[href]{position:relative;z-index:1}\n',"",{version:3,sources:["webpack://./packages/react/src/components/link-box/styles.module.scss"],names:[],mappings:"AAAA,sBACE,eAAgB,CADlB,6BAII,UAAW,CACX,cAAe,CACf,aAAc,CACd,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,SAAU,CACV,UAAW,CACX,WAAY,CACb,gBAID,iBAAkB,CADpB,mDAII,iBAAkB,CAClB,SAAU",sourcesContent:['.link-overlay a {\n  position: static;\n\n  &:before {\n    content: "";\n    cursor: inherit;\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.link-box {\n  position: relative;\n\n  *:not(.link-overlay) > a[href] {\n    position: relative;\n    z-index: 1;\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"link-overlay":"link-overlay-2XPdn",linkOverlay:"link-overlay-2XPdn","link-box":"link-box-3LNmq",linkBox:"link-box-3LNmq"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/link/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-link-1l-E0{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:underline}@media print{.govuk-link-1l-E0{font-family:sans-serif}}.govuk-link-1l-E0:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.govuk-link-1l-E0:link{color:#025ea6}.govuk-link-1l-E0:visited{color:#4c2c92}.govuk-link-1l-E0:hover{color:#003078}.govuk-link-1l-E0:active{color:#0b0c0c}.govuk-link-1l-E0:focus{color:#0b0c0c}@media print{.govuk-link-1l-E0[href^="/"]:after,.govuk-link-1l-E0[href^="http://"]:after,.govuk-link-1l-E0[href^="https://"]:after{content:" (" attr(href) ")";font-size:90%;word-wrap:break-word}}.govuk-link--muted-2YE99:link,.govuk-link--muted-2YE99:visited{color:#505a5f}.govuk-link--muted-2YE99:hover,.govuk-link--muted-2YE99:active{color:#0b0c0c}.govuk-link--muted-2YE99:focus{color:#0b0c0c}.govuk-link--text-colour-38vF-:link,.govuk-link--text-colour-38vF-:visited{color:#0b0c0c}@media print{.govuk-link--text-colour-38vF-:link,.govuk-link--text-colour-38vF-:visited{color:#000}}.govuk-link--text-colour-38vF-:hover{color:rgba(11,12,12,0.99)}.govuk-link--text-colour-38vF-:active,.govuk-link--text-colour-38vF-:focus{color:#0b0c0c}@media print{.govuk-link--text-colour-38vF-:active,.govuk-link--text-colour-38vF-:focus{color:#000}}.govuk-link--inverse-3liFp:link,.govuk-link--inverse-3liFp:visited{color:#fff}.govuk-link--inverse-3liFp:hover,.govuk-link--inverse-3liFp:active{color:rgba(255,255,255,0.99)}.govuk-link--inverse-3liFp:focus{color:#0b0c0c}.govuk-link--no-underline-1fqKl:not(:hover):not(:active){text-decoration:none}.govuk-link--no-visited-state-1D8r1:link{color:#025ea6}.govuk-link--no-visited-state-1D8r1:visited{color:#025ea6}.govuk-link--no-visited-state-1D8r1:hover{color:#003078}.govuk-link--no-visited-state-1D8r1:active{color:#0b0c0c}.govuk-link--no-visited-state-1D8r1:focus{color:#0b0c0c}.lbh-link-3GqG-{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.lbh-link-3GqG-:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.lbh-link-3GqG-:link{color:#025ea6}.lbh-link-3GqG-:visited{color:#8031a7}.lbh-link-3GqG-:hover{color:#0085ca}.lbh-link-3GqG-:active{color:#2b8cc4}.lbh-link-3GqG-:focus{color:#0b0c0c}@media print{.lbh-link-3GqG-[href^="/"]:after,.lbh-link-3GqG-[href^="http://"]:after,.lbh-link-3GqG-[href^="https://"]:after{content:" (" attr(href) ")";font-size:90%;word-wrap:break-word}}.lbh-link--muted-4ysvb:link,.lbh-link--muted-4ysvb:visited{color:#505a5f}.lbh-link--muted-4ysvb:hover,.lbh-link--muted-4ysvb:active{color:#0b0c0c}.lbh-link--muted-4ysvb:focus{color:#0b0c0c}.lbh-link--danger-1RaLV:link{color:#be3a34}.lbh-link--danger-1RaLV:visited{color:#be3a34}.lbh-link--danger-1RaLV:focus{color:#0b0c0c}.lbh-link--text-colour-DVMsJ:link,.lbh-link--text-colour-DVMsJ:visited{color:#0b0c0c}@media print{.lbh-link--text-colour-DVMsJ:link,.lbh-link--text-colour-DVMsJ:visited{color:#000}}.lbh-link--text-colour-DVMsJ:hover{color:rgba(11,12,12,0.99)}.lbh-link--text-colour-DVMsJ:active,.lbh-link--text-colour-DVMsJ:focus{color:#0b0c0c}@media print{.lbh-link--text-colour-DVMsJ:active,.lbh-link--text-colour-DVMsJ:focus{color:#000}}.lbh-link--no-visited-state-qbR_O:link{color:#025ea6}.lbh-link--no-visited-state-qbR_O:visited{color:#025ea6}.lbh-link--no-visited-state-qbR_O:hover{color:#003078}.lbh-link--no-visited-state-qbR_O:active{color:#0b0c0c}.lbh-link--no-visited-state-qbR_O:focus{color:#0b0c0c}button.lbh-link-3GqG-{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;color:#025ea6;border:none;background:none;cursor:pointer;text-decoration:underline;padding:0}@media (min-width: 40.0625em){button.lbh-link-3GqG-{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-back-link-35LBN{font-size:14px;font-size:.875rem;line-height:1.14286;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:underline;display:inline-block;position:relative;margin-top:15px;margin-bottom:15px;padding-left:14px}@media (min-width: 40.0625em){.govuk-back-link-35LBN{font-size:16px;font-size:1rem;line-height:1.25}}@media print{.govuk-back-link-35LBN{font-size:14pt;line-height:1.2}}@media print{.govuk-back-link-35LBN{font-family:sans-serif}}.govuk-back-link-35LBN:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.govuk-back-link-35LBN:link,.govuk-back-link-35LBN:visited{color:#0b0c0c}@media print{.govuk-back-link-35LBN:link,.govuk-back-link-35LBN:visited{color:#000}}.govuk-back-link-35LBN:hover{color:rgba(11,12,12,0.99)}.govuk-back-link-35LBN:active,.govuk-back-link-35LBN:focus{color:#0b0c0c}@media print{.govuk-back-link-35LBN:active,.govuk-back-link-35LBN:focus{color:#000}}.govuk-back-link-35LBN:before{content:"";display:block;position:absolute;top:0;bottom:0;left:3px;width:7px;height:7px;margin:auto 0;-webkit-transform:rotate(225deg);-ms-transform:rotate(225deg);transform:rotate(225deg);border:solid;border-width:1px 1px 0 0;border-color:#505a5f}.govuk-back-link-35LBN:focus:before{border-color:#0b0c0c}.govuk-back-link-35LBN:after{content:"";position:absolute;top:-14px;right:0;bottom:-14px;left:0}.lbh-back-link-1kopu{border:0;margin:0}.lbh-back-link-1kopu:link{color:#025ea6}.lbh-back-link-1kopu:visited{color:#8031a7}.lbh-back-link-1kopu:hover{color:#0085ca}.lbh-back-link-1kopu:active{color:#2b8cc4}.lbh-back-link-1kopu:focus{color:#0b0c0c}.lbh-back-link-1kopu:hover{border-bottom:1px solid #0085ca}.lbh-back-link-1kopu:focus{border-bottom:0}.lbh-link--no-underline-3Bram{}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/core/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_links.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/core/_links.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/back-link/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-back-link/_back-link.scss","webpack://./packages/react/src/components/link/styles.module.scss"],names:[],mappings:"AAQE,kBCOA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CEalC,yBAA0B,CCsMpB,aJ5NN,kBCsBE,sBI8BgC,CLhDjC,CGMD,wBGCE,6BAA6C,CAE/C,aCMmB,CDLnB,wBCW4B,CDV5B,uCCImB,CDDnB,oBAAqB,CHNpB,uBA4DC,aIzCiB,CJ0ClB,0BAGC,aKzCe,CL0ChB,wBAGC,aK/CkB,CLgDnB,yBAGC,aK/Cc,CL3BhB,wBAgFE,aIvEiB,CJwElB,aA4TG,sHACE,2BAA4B,CAC5B,aAAc,CAKd,oBAAqB,CACtB,CArML,+DAEE,aKtLkB,CLuLnB,+DAIC,aK5Lc,CL6Lf,+BAKC,aIpNiB,CJqNlB,2EFvMD,aOIgB,CLmOf,aAHD,2EFjOE,UQI6B,CNgO9B,CAID,qCACE,yBKxOc,CLyOf,2EF7OD,aOIgB,CL8Of,aAHD,2EF5OE,UQI6B,CN2O9B,CA6BD,mEAEE,UKzQc,CL0Qf,mEAMC,4BKhRc,CLiRf,iCAGC,aI1SiB,CJ2SlB,yDAyEC,oBAAqB,CAxCvB,yCACE,aIjUiB,CJkUlB,4CAGC,aIrUiB,CJsUlB,0CAGC,aKvUkB,CLwUnB,2CAGC,aKvUc,CLwUf,0CAKC,aI/ViB,CJgWlB,gBOlXD,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CCElC,sBLME,6BAA6C,CAE/C,aCMmB,CDLnB,wBCW4B,CDV5B,uCCImB,CDDnB,oBAAqB,CKXpB,qBAoBC,aJIiB,CIHlB,wBAGC,aJEyB,CID1B,sBAGC,aJHuB,CIIxB,uBAGC,aJLwB,CI7B1B,sBAwCE,aJ1BiB,CHyMb,aD2LF,gHACE,2BAA4B,CAC5B,aAAc,CAKd,oBAAqB,CACtB,CArML,2DAEE,aKtLkB,CLuLnB,2DAIC,aK5Lc,CL6Lf,6BAKC,aIpNiB,CJqNlB,6BSlOG,aL8BgB,CKhCpB,gCAKI,aL2BgB,CKhCpB,8BAQI,aLOe,CJkPnB,uEFpOA,aOIgB,CLmOf,aAHD,uEFjOE,UQI6B,CNgO9B,CAID,mCACE,yBKxOc,CLyOf,uEF7OD,aOIgB,CL8Of,aAHD,uEF5OE,UQI6B,CN2O9B,CA4ED,uCACE,aIjUiB,CJkUlB,0CAGC,aIrUiB,CJsUlB,wCAGC,aKvUkB,CLwUnB,yCAGC,aKvUc,CLwUf,wCAKC,aI/ViB,CJgWlB,sBOlXD,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aHnFoB,CMnBpB,cAhBa,CAiBb,cARc,CH+Gd,eInFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CDcZ,aLKiB,CKJjB,WAAY,CACZ,eAAgB,CAChB,cAAe,CACf,yBAA0B,CAC1B,SAAU,CR6LN,8BQpMN,sBCLA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CDoBb,CG7BD,uBdsII,ceWe,CfTb,iBgBjIuC,ChBmIzC,mBArEqC,CAjEzC,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CEalC,yBAA0B,CYdxB,oBAAqB,CACrB,iBAAkB,CAElB,eGLK,CHML,kBGNK,CHSL,iBAAkB,CX6Md,8BWzNN,uBdkJM,ceGa,CfDX,cgB7IqC,ChB+IvC,gBAjFmC,CcxDxC,CX4MK,aWzNN,uBd6IM,ceYa,CfXb,eeYc,CD7InB,CX4MK,aWzNN,uBdmBE,sBI8BgC,CUpCjC,CZND,6BGCE,6BAA6C,CAE/C,aCMmB,CDLnB,wBCW4B,CDV5B,uCCImB,CDDnB,oBAAqB,CHNpB,2DFqBD,aOIgB,CLmOf,aAHD,2DFjOE,UQI6B,CNgO9B,CAID,6BACE,yBKxOc,CLyOf,2DF7OD,aOIgB,CL8Of,aAHD,2DF5OE,UQI6B,CN2O9B,CYhQD,8BACE,UAAW,CACX,aAAc,CAGd,iBAAkB,CAQhB,KAAM,CACN,QAAS,CAGX,QAAS,CAET,SA3CgB,CA4ChB,UA5CgB,CA8ChB,aAAc,CAEd,gCAAiC,CAE7B,4BAA6B,CAEzB,wBAAyB,CAEjC,YAAa,CACb,wBAA6D,CAC7D,oBPbkB,CO2BnB,oCAGC,oBRjDiB,CQkDlB,6BAGC,UAAW,CACX,iBAAkB,CAClB,SAAU,CACV,OAAQ,CACR,YAAa,CACb,MAAO,CIlFT,qBAEE,QAAS,CACT,QAAS,CR4BX,0BACE,aJIiB,CIHlB,6BAGC,aJEyB,CID1B,2BAGC,aJHuB,CIIxB,4BAGC,aJLwB,CIMzB,2BAKC,aJ1BiB,CIenB,2BQjCI,+BZ+BqB,CIYzB,2BQvCI,eAAgB,CCRtB,8BACoC",sourcesContent:['@if not mixin-exists("govuk-exports") {\n  @warn "Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.";\n}\n\n@import "../base";\n\n@include govuk-exports("govuk/core/links") {\n\n  %govuk-link {\n    @include govuk-link-common;\n    @include govuk-link-style-default;\n    @include govuk-link-print-friendly;\n  }\n\n  .govuk-link {\n    @extend %govuk-link;\n  }\n\n  // Variant classes should always be used in conjunction with the .govuk-link\n  // class, so we do not need the common link styles as they will be inherited.\n\n  .govuk-link--muted {\n    @include govuk-link-style-muted;\n  }\n\n  .govuk-link--text-colour {\n    @include govuk-link-style-text;\n  }\n\n  .govuk-link--inverse {\n    @include govuk-link-style-inverse;\n  }\n\n  .govuk-link--no-underline {\n    @include govuk-link-style-no-underline;\n  }\n\n  .govuk-link--no-visited-state {\n    @include govuk-link-style-no-visited-state;\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if ($govuk-new-link-styles) {\n    @if ($govuk-link-underline-thickness) {\n      text-decoration-thickness: $govuk-link-underline-thickness;\n    }\n\n    @if ($govuk-link-underline-offset) {\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if ($govuk-new-link-styles and $govuk-link-hover-underline-thickness) {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven\'t\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it\'s\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover {\n    color: rgba($govuk-text-colour, .99);\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you\'re displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour("white");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour("white"), .99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it\'s not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it. This has no effect in Internet Explorer 8 (IE8),\n/// because IE8 does not support `:not`.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^="/"],\n    &[href^="http://"],\n    &[href^="https://"] {\n      &:after {\n        content: " (" attr(href) ")";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n','////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the "underline"\n  text-decoration: none;\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n','////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n","////\n/// @group helpers\n////\n\n/// Common link mixin\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin lbh-link-common {\n  @include lbh-typography-common;\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Default link style mixin\n///\n/// Provides the default unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// lbh-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .lbh-component__link {\n///     @include lbh-link-common;\n///     @include lbh-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin lbh-link-style-default {\n  &:link {\n    color: $lbh-link-colour;\n  }\n\n  &:visited {\n    color: $lbh-link-visited-colour;\n  }\n\n  &:hover {\n    color: $lbh-link-hover-colour;\n  }\n\n  &:active {\n    color: $lbh-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n@mixin lbh-link {\n  @include lbh-link-common;\n  @include lbh-link-style-default;\n  @include govuk-link-print-friendly;\n}\n",'@include lbh-exports("lbh/core/links") {\n  .lbh-link {\n    @include lbh-link;\n  }\n\n  // Variant classes should always be used in conjunction with the .lbh-link\n  // class, so we do not need the common link styles as they will be inherited.\n\n  .lbh-link--muted {\n    @include govuk-link-style-muted;\n  }\n\n  .lbh-link--danger {\n    &:link {\n      color: lbh-colour("lbh-error");\n    }\n    &:visited {\n      color: lbh-colour("lbh-error");\n    }\n    &:focus {\n      color: lbh-colour("lbh-text");\n    }\n  }\n\n  .lbh-link--text-colour {\n    @include govuk-link-style-text;\n  }\n\n  .lbh-link--no-visited-state {\n    @include govuk-link-style-no-visited-state;\n  }\n\n  button.lbh-link {\n    @include lbh-body-m;\n    color: lbh-colour("lbh-link");\n    border: none;\n    background: none;\n    cursor: pointer;\n    text-decoration: underline;\n    padding: 0;\n  }\n}\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/back-link") {\n\n  // Size of chevron (excluding border)\n  $chevron-size: 7px;\n\n  // Size of chevron border\n  $chevron-border-width: 1px;\n\n  // Colour of chevron\n  $chevron-border-colour: $govuk-secondary-text-colour;\n\n  .govuk-back-link {\n    @include govuk-typography-responsive($size: 16);\n    @include govuk-link-common;\n    @include govuk-link-style-text;\n\n    display: inline-block;\n    position: relative;\n\n    margin-top: govuk-spacing(3);\n    margin-bottom: govuk-spacing(3);\n\n    // Allow space for the arrow\n    padding-left: 14px;\n  }\n\n  // Prepend left pointing chevron\n  .govuk-back-link:before {\n    content: "";\n    display: block;\n\n    // Vertically align with the parent element\n    position: absolute;\n\n    @if $govuk-use-legacy-font {\n      // Begin adjustments for font baseline offset\n      // These should be removed when legacy font support is dropped\n      top: -1px;\n      bottom: 1px;\n    } @else {\n      top: 0;\n      bottom: 0;\n    }\n\n    left: 3px;\n\n    width: $chevron-size;\n    height: $chevron-size;\n\n    margin: auto 0;\n\n    -webkit-transform: rotate(225deg);\n\n        -ms-transform: rotate(225deg);\n\n            transform: rotate(225deg);\n\n    border: solid;\n    border-width: $chevron-border-width $chevron-border-width 0 0;\n    border-color: $chevron-border-colour;\n\n    // Fall back to a less than sign for IE8\n    @include govuk-if-ie8 {\n      content: "\\003c"; // Less than sign (<)\n      width: auto;\n      height: auto;\n      border: 0;\n      color: $chevron-border-colour;\n\n      // IE8 doesn\'t seem to like rendering pseudo-elements using @font-faces,\n      // so fall back to using another sans-serif font to render the chevron.\n      font-family: Arial, sans-serif;\n    }\n  }\n\n  .govuk-back-link:focus:before {\n    border-color: $govuk-focus-text-colour;\n  }\n\n  .govuk-back-link:after {\n    content: "";\n    position: absolute;\n    top: -14px;\n    right: 0;\n    bottom: -14px;\n    left: 0;\n  }\n\n  @if $govuk-use-legacy-font {\n    // Begin adjustments for font baseline offset\n    // These should be removed when legacy font support is dropped\n    .govuk-back-link:before {\n      $offset: 1px;\n\n      top: $offset * -1;\n      bottom: $offset;\n    }\n  }\n}\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "node_modules/govuk-frontend/govuk/components/back-link/back-link";\n\n@include lbh-exports("lbh/component/back-link") {\n  .lbh-back-link {\n    @include lbh-link-style-default;\n    border: 0;\n    margin: 0;\n\n    &:hover {\n      border-bottom: 1px solid lbh-colour("lbh-link-hover");\n    }\n\n    &:focus {\n      border-bottom: 0;\n    }\n  }\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~govuk-frontend/govuk/core/links";\n@import "~lbh-frontend/lbh/core/links";\n@import "~lbh-frontend/lbh/components/lbh-back-link/back-link";\n\n.lbh-link--no-underline {\n  composes: govuk-link--no-underline;\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-link":"govuk-link-1l-E0",govukLink:"govuk-link-1l-E0","govuk-link--muted":"govuk-link--muted-2YE99",govukLinkMuted:"govuk-link--muted-2YE99","govuk-link--text-colour":"govuk-link--text-colour-38vF-",govukLinkTextColour:"govuk-link--text-colour-38vF-","govuk-link--inverse":"govuk-link--inverse-3liFp",govukLinkInverse:"govuk-link--inverse-3liFp","govuk-link--no-underline":"govuk-link--no-underline-1fqKl",govukLinkNoUnderline:"govuk-link--no-underline-1fqKl","govuk-link--no-visited-state":"govuk-link--no-visited-state-1D8r1",govukLinkNoVisitedState:"govuk-link--no-visited-state-1D8r1","lbh-link":"lbh-link-3GqG-",lbhLink:"lbh-link-3GqG-","lbh-link--muted":"lbh-link--muted-4ysvb",lbhLinkMuted:"lbh-link--muted-4ysvb","lbh-link--danger":"lbh-link--danger-1RaLV",lbhLinkDanger:"lbh-link--danger-1RaLV","lbh-link--text-colour":"lbh-link--text-colour-DVMsJ",lbhLinkTextColour:"lbh-link--text-colour-DVMsJ","lbh-link--no-visited-state":"lbh-link--no-visited-state-qbR_O",lbhLinkNoVisitedState:"lbh-link--no-visited-state-qbR_O","govuk-back-link":"govuk-back-link-35LBN",govukBackLink:"govuk-back-link-35LBN","lbh-back-link":"lbh-back-link-1kopu",lbhBackLink:"lbh-back-link-1kopu","lbh-link--no-underline":"lbh-link--no-underline-3Bram govuk-link--no-underline-1fqKl",lbhLinkNoUnderline:"lbh-link--no-underline-3Bram govuk-link--no-underline-1fqKl"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/list/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.lbh-list-39ckz{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding-left:0;list-style-type:none;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:19px;line-height:1.1875rem}*+.lbh-list-39ckz{margin-top:1.5em}@media (min-width: 40.0625em){.lbh-list-39ckz{font-size:19px;font-size:1.1875rem;line-height:23px;line-height:1.4375rem}}.lbh-list-39ckz .lbh-list-39ckz,.lbh-list-39ckz .govuk-list-3jc03{margin-top:12px;margin-top:.75rem}.lbh-list-39ckz>li+li{margin-top:12px;margin-top:.75rem}.lbh-list--bullet-XPqW1{padding-left:18px;padding-left:1.125rem;list-style-type:disc}.lbh-list--bullet-XPqW1>li{margin-bottom:0}.lbh-list--bullet-XPqW1 .lbh-list--bullet-XPqW1{list-style-type:circle}.lbh-list--number-ZLe3G{padding-left:18px;padding-left:1.125rem;list-style-type:decimal}.lbh-list--number-ZLe3G>li{margin-bottom:0}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/lbh-frontend/lbh/core/_lists.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_lists.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss"],names:[],mappings:"AAEE,gBCOA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CETlC,cAAe,CACf,oBAAqB,CACrB,aC0CoB,CCnBpB,cAhBa,CAiBb,cARc,CFdd,eG0CyB,CDrBzB,gBAhBa,CAiBb,qBARc,CFXd,kBACE,gBAAiB,CI0Nb,8BPlON,gBKyBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,qBARc,CLhBb,CGcD,kEESA,eAhBa,CAiBb,iBARc,CFCb,sBEMD,eAhBa,CAiBb,iBARc,CFKb,wBEED,iBAhBa,CAiBb,qBARc,CFUd,oBAAqB,CAErB,2BACE,eAAgB,CACjB,gDAGC,sBAAuB,CACxB,wBEXD,iBAhBa,CAiBb,qBARc,CFuBd,uBAAwB,CAExB,2BACE,eAAgB",sourcesContent:['@include lbh-exports("lbh/core/lists") {\n\n  .lbh-list {\n    @include lbh-list;\n  }\n\n  .lbh-list--bullet {\n    @include lbh-list--bullet;\n  }\n\n  .lbh-list--number {\n    @include lbh-list--number;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n',"@mixin lbh-list {\n  @include lbh-font;\n  padding-left: 0;\n  list-style-type: none;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 19);\n\n  * + & {\n    margin-top: 1.5em;\n  }\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 23);\n  }\n\n  .lbh-list,\n  .govuk-list {\n    @include lbh-rem(margin-top, 12);\n  }\n\n  & > li + li {\n    @include lbh-rem(margin-top, 12);\n  }\n}\n\n@mixin lbh-list--bullet {\n  @include lbh-rem(padding-left, 18);\n  list-style-type: disc;\n\n  & > li {\n    margin-bottom: 0;\n  }\n\n  .lbh-list--bullet {\n    list-style-type: circle;\n  }\n}\n\n@mixin lbh-list--number {\n  @include lbh-rem(padding-left, 18);\n  list-style-type: decimal;\n\n  & > li {\n    margin-bottom: 0;\n  }\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-list":"lbh-list-39ckz",lbhList:"lbh-list-39ckz","govuk-list":"govuk-list-3jc03",govukList:"govuk-list-3jc03","lbh-list--bullet":"lbh-list--bullet-XPqW1",lbhListBullet:"lbh-list--bullet-XPqW1","lbh-list--number":"lbh-list--number-ZLe3G",lbhListNumber:"lbh-list--number-ZLe3G"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/page-announcement/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.lbh-page-announcement-1bTcE{margin-bottom:36px;margin-bottom:2.25rem;padding:25px 25px 25px 25px;padding:1.5625rem 1.5625rem 1.5625rem 1.5625rem;border:1px solid #84bd00;border-left:6px solid #84bd00;background:rgba(164,214,94,0.3)}.lbh-page-announcement__title-3cmIh{margin-top:0;margin-bottom:12px;margin-bottom:.75rem}.lbh-page-announcement__content-2WLjJ{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0}@media (min-width: 40.0625em){.lbh-page-announcement__content-2WLjJ{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-page-announcement__content-2WLjJ a{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.lbh-page-announcement__content-2WLjJ a:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.lbh-page-announcement__content-2WLjJ a:link{color:#025ea6}.lbh-page-announcement__content-2WLjJ a:visited{color:#8031a7}.lbh-page-announcement__content-2WLjJ a:hover{color:#0085ca}.lbh-page-announcement__content-2WLjJ a:active{color:#2b8cc4}.lbh-page-announcement__content-2WLjJ a:focus{color:#0b0c0c}@media print{.lbh-page-announcement__content-2WLjJ a[href^="/"]:after,.lbh-page-announcement__content-2WLjJ a[href^="http://"]:after,.lbh-page-announcement__content-2WLjJ a[href^="https://"]:after{content:" (" attr(href) ")";font-size:90%;word-wrap:break-word}}.lbh-page-announcement__content-2WLjJ ul{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding-left:0;list-style-type:none;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:19px;line-height:1.1875rem;padding-left:18px;padding-left:1.125rem;list-style-type:disc;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}*+.lbh-page-announcement__content-2WLjJ ul{margin-top:1.5em}@media (min-width: 40.0625em){.lbh-page-announcement__content-2WLjJ ul{font-size:19px;font-size:1.1875rem;line-height:23px;line-height:1.4375rem}}.lbh-page-announcement__content-2WLjJ ul .lbh-list-3UG-r,.lbh-page-announcement__content-2WLjJ ul .govuk-list-2f4-C{margin-top:12px;margin-top:.75rem}.lbh-page-announcement__content-2WLjJ ul>li+li{margin-top:12px;margin-top:.75rem}.lbh-page-announcement__content-2WLjJ ul>li{margin-bottom:0}.lbh-page-announcement__content-2WLjJ ul .lbh-list--bullet-23HLN{list-style-type:circle}@media (min-width: 40.0625em){.lbh-page-announcement__content-2WLjJ ul{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-page-announcement--warning-1MVcj{border:1px solid #be3a34;border-left:6px solid #be3a34;background:rgba(224,60,49,0.2)}.lbh-page-announcement--info-23OhK{border:1px solid #025ea6;border-left:6px solid #025ea6;background:rgba(0,133,202,0.1);padding:36px 36px 36px 25px;padding:2.25rem 2.25rem 2.25rem 1.5625rem}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-page-announcement/_page-announcement.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_links.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_lists.scss"],names:[],mappings:"AACE,6BC0BA,kBAhBa,CAiBb,qBARc,CAOd,2BAhBa,CAiBb,+CARc,CDhBZ,wBEYgB,CFXhB,6BEWgB,CFVhB,+BEWgB,CFThB,oCACE,YAAa,CCkBjB,kBAhBa,CAiBb,oBARc,CDTX,sCGFH,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aDnFoB,CDnBpB,cAhBa,CAiBb,cARc,CE+Gd,eEnFyB,CJrBzB,gBAhBa,CAiBb,oBARc,CDLV,YAAa,CMqNX,8BNvNJ,sCCcF,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CDMX,CAbA,wCGJH,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CIElC,8CCME,6BAA6C,CAE/C,aNMmB,CMLnB,wBNW4B,CMV5B,uCNImB,CMDnB,oBAAqB,CDXpB,6CAoBC,aLIiB,CKHlB,gDAGC,aLEyB,CKD1B,8CAGC,aLHuB,CKIxB,+CAGC,aLLwB,CKMzB,8CAKC,aL1BiB,CIyMb,aG2LF,wLACE,2BAA4B,CAC5B,aAAc,CAKd,oBAAqB,CACtB,CT1ZF,yCGJH,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,COTlC,cAAe,CACf,oBAAqB,CACrB,aR0CoB,CDnBpB,cAhBa,CAiBb,cARc,CSdd,eL0CyB,CJrBzB,gBAhBa,CAiBb,qBARc,CAOd,iBAhBa,CAiBb,qBARc,CSUd,oBAAqB,CPrBrB,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aDnFoB,CDnBpB,cAhBa,CAiBb,cARc,CE+Gd,eEnFyB,CJrBzB,gBAhBa,CAiBb,oBARc,CSXd,2CACE,gBAAiB,CJ0Nb,8BNvNH,yCCcH,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,qBARc,CDKT,CUPL,oHTSA,eAhBa,CAiBb,iBARc,CSCb,+CTMD,eAhBa,CAiBb,iBARc,CSKb,4CAQC,eAAgB,CACjB,iEAGC,sBAAuB,CJ+LnB,8BNvNH,yCCcH,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CDKT,CAGH,sCACE,wBENc,CFOd,6BEPc,CFQd,8BEPc,CFQf,mCAGC,wBEIe,CFHf,6BEGe,CFFf,8BEGqB,CDbzB,2BAhBa,CAiBb,yCARc",sourcesContent:['@include lbh-exports("lbh/component/page-announcement") {\n  .lbh-page-announcement {\n    @include lbh-rem(margin-bottom, 36);\n    @include lbh-rem(padding, 25, 25, 25, 25);\n    border: 1px solid lbh-colour("lbh-a03");\n    border-left: 6px solid lbh-colour("lbh-a03");\n    background: rgba(lbh-colour("lbh-a04"), 0.3);\n\n    &__title {\n      margin-top: 0;\n      @include lbh-rem(margin-bottom, 12);\n    }\n\n    &__content {\n      @include lbh-body-m;\n      margin-top: 0;\n\n      a {\n        @include lbh-link;\n      }\n\n      ul {\n        @include lbh-list;\n        @include lbh-list--bullet;\n        @include lbh-body-m;\n      }\n    }\n\n    &--warning {\n      border: 1px solid lbh-colour("lbh-f02");\n      border-left: 6px solid lbh-colour("lbh-f02");\n      background: rgba(lbh-colour("lbh-f03"), 0.2);\n    }\n\n    &--info {\n      border: 1px solid lbh-colour("lbh-link");\n      border-left: 6px solid lbh-colour("lbh-link");\n      background: rgba(lbh-colour("lbh-link-hover"), 0.1);\n      @include lbh-rem(padding, 36, 36, 36, 25);\n    }\n  }\n}\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","////\n/// @group helpers\n////\n\n/// Common link mixin\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin lbh-link-common {\n  @include lbh-typography-common;\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Default link style mixin\n///\n/// Provides the default unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// lbh-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .lbh-component__link {\n///     @include lbh-link-common;\n///     @include lbh-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin lbh-link-style-default {\n  &:link {\n    color: $lbh-link-colour;\n  }\n\n  &:visited {\n    color: $lbh-link-visited-colour;\n  }\n\n  &:hover {\n    color: $lbh-link-hover-colour;\n  }\n\n  &:active {\n    color: $lbh-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n@mixin lbh-link {\n  @include lbh-link-common;\n  @include lbh-link-style-default;\n  @include govuk-link-print-friendly;\n}\n",'////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the "underline"\n  text-decoration: none;\n}\n','////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if ($govuk-new-link-styles) {\n    @if ($govuk-link-underline-thickness) {\n      text-decoration-thickness: $govuk-link-underline-thickness;\n    }\n\n    @if ($govuk-link-underline-offset) {\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if ($govuk-new-link-styles and $govuk-link-hover-underline-thickness) {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven\'t\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it\'s\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover {\n    color: rgba($govuk-text-colour, .99);\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you\'re displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour("white");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour("white"), .99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it\'s not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it. This has no effect in Internet Explorer 8 (IE8),\n/// because IE8 does not support `:not`.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^="/"],\n    &[href^="http://"],\n    &[href^="https://"] {\n      &:after {\n        content: " (" attr(href) ")";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n',"@mixin lbh-list {\n  @include lbh-font;\n  padding-left: 0;\n  list-style-type: none;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 19);\n\n  * + & {\n    margin-top: 1.5em;\n  }\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 23);\n  }\n\n  .lbh-list,\n  .govuk-list {\n    @include lbh-rem(margin-top, 12);\n  }\n\n  & > li + li {\n    @include lbh-rem(margin-top, 12);\n  }\n}\n\n@mixin lbh-list--bullet {\n  @include lbh-rem(padding-left, 18);\n  list-style-type: disc;\n\n  & > li {\n    margin-bottom: 0;\n  }\n\n  .lbh-list--bullet {\n    list-style-type: circle;\n  }\n}\n\n@mixin lbh-list--number {\n  @include lbh-rem(padding-left, 18);\n  list-style-type: decimal;\n\n  & > li {\n    margin-bottom: 0;\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-page-announcement":"lbh-page-announcement-1bTcE",lbhPageAnnouncement:"lbh-page-announcement-1bTcE","lbh-page-announcement__title":"lbh-page-announcement__title-3cmIh",lbhPageAnnouncementTitle:"lbh-page-announcement__title-3cmIh","lbh-page-announcement__content":"lbh-page-announcement__content-2WLjJ",lbhPageAnnouncementContent:"lbh-page-announcement__content-2WLjJ","lbh-list":"lbh-list-3UG-r",lbhList:"lbh-list-3UG-r","govuk-list":"govuk-list-2f4-C",govukList:"govuk-list-2f4-C","lbh-list--bullet":"lbh-list--bullet-23HLN",lbhListBullet:"lbh-list--bullet-23HLN","lbh-page-announcement--warning":"lbh-page-announcement--warning-1MVcj",lbhPageAnnouncementWarning:"lbh-page-announcement--warning-1MVcj","lbh-page-announcement--info":"lbh-page-announcement--info-23OhK",lbhPageAnnouncementInfo:"lbh-page-announcement--info-23OhK"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/pagination/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.lbh-pagination-ovBrF{display:flex;flex-direction:column;margin-top:6px;margin-top:.375rem;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;padding:10px 0px}@media (min-width: 40.0625em){.lbh-pagination-ovBrF{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}@media (min-width: 48.0625em){.lbh-pagination-ovBrF{flex-direction:row;justify-content:space-between}}.lbh-pagination-ovBrF *+*{margin-top:0}.lbh-pagination__list-3MhJL{padding:0}.lbh-pagination__item-2TZKn{padding:0;display:inline-block;margin-right:7px}.lbh-pagination__item-2TZKn:first-of-type a,.lbh-pagination__item-2TZKn:last-of-type a{padding:0}.lbh-pagination__link-sPY_2{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;padding:0px 5px;text-decoration:none;display:inline-block}.lbh-pagination__link-sPY_2:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.lbh-pagination__link-sPY_2:link{color:#025ea6}.lbh-pagination__link-sPY_2:visited{color:#8031a7}.lbh-pagination__link-sPY_2:hover{color:#0085ca}.lbh-pagination__link-sPY_2:active{color:#2b8cc4}.lbh-pagination__link-sPY_2:focus{color:#0b0c0c}@media print{.lbh-pagination__link-sPY_2[href^="/"]:after,.lbh-pagination__link-sPY_2[href^="http://"]:after,.lbh-pagination__link-sPY_2[href^="https://"]:after{content:" (" attr(href) ")";font-size:90%;word-wrap:break-word}}.lbh-pagination__link-sPY_2:visited{color:#025ea6}.lbh-pagination__link--current-30T4M{font-weight:600;pointer-events:none;cursor:default}.lbh-pagination__link--current-30T4M:link,.lbh-pagination__link--current-30T4M:hover,.lbh-pagination__link--current-30T4M:focus,.lbh-pagination__link--current-30T4M:visited{color:#0b0c0c}.lbh-pagination__summary-1ikjw{margin-bottom:10px}@media (min-width: 48.0625em){.lbh-pagination__summary-1ikjw{order:2;margin-bottom:0px}}button.lbh-pagination__link-sPY_2{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;background:transparent;border:none;color:#025ea6}@media (min-width: 40.0625em){button.lbh-pagination__link-sPY_2{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-pagination--center-3pifr{align-items:center}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-pagination/_pagination.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_links.scss","webpack://./packages/react/src/components/pagination/styles.module.scss"],names:[],mappings:"AACE,sBACE,YAAa,CACb,qBAAsB,CCwBxB,cAhBa,CAiBb,kBARc,CCXd,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aEnFoB,CHnBpB,cAhBa,CAiBb,cARc,CC+Gd,eGnFyB,CJrBzB,gBAhBa,CAiBb,oBARc,CDdZ,gBAAiB,CM8Nb,8BNnON,sBC0BA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CD2Cb,CMqKK,8BNnON,sBAQI,kBAAmB,CACnB,6BAA8B,CAqDjC,CA9DD,0BAaI,YAAa,CACd,4BAGC,SAAU,CACX,4BAGC,SAAU,CACV,oBAAqB,CACrB,gBAAiB,CAHlB,uFAOG,SAAU,CACX,4BEpBL,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CFuB9B,eAAgB,CAChB,oBAAqB,CACrB,oBAAqB,COvBzB,kCCME,6BAA6C,CAE/C,aJMmB,CILnB,wBJW4B,CIV5B,uCJImB,CIDnB,oBAAqB,CDXpB,iCAoBC,aHIiB,CGHlB,oCAGC,aHEyB,CGD1B,kCAGC,aHHuB,CGIxB,mCAGC,aHLwB,CGMzB,kCAKC,aH1BiB,CEyMb,aG2LF,oJACE,2BAA4B,CAC5B,aAAc,CAKd,oBAAqB,CACtB,CTvYF,oCAOG,aIAa,CJCd,qCAGC,eKPkB,CLQlB,mBAAoB,CACpB,cAAe,CAHhB,6KASG,aIxBW,CJyBZ,+BAKH,kBAAmB,CM2KjB,8BN5KJ,+BAGI,OAAQ,CACR,iBAAkB,CAErB,CU1DL,kCRKE,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aEnFoB,CHnBpB,cAhBa,CAiBb,cARc,CC+Gd,eGnFyB,CJrBzB,gBAhBa,CAiBb,oBARc,CSdd,sBAAuB,CACvB,WAAY,CACZ,aN+BmB,CM9BpB,8BALD,kCTuBE,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CSXf,CAED,8BACE,kBAAmB",sourcesContent:['@include lbh-exports("lbh/component/pagination") {\n  .lbh-pagination {\n    display: flex;\n    flex-direction: column;\n    @include lbh-rem(margin-top, 6);\n    @include lbh-body-m;\n    padding: 10px 0px;\n\n    @include govuk-media-query($from: desktop) {\n      flex-direction: row;\n      justify-content: space-between;\n    }\n\n    * + * {\n      margin-top: 0;\n    }\n\n    &__list {\n      padding: 0;\n    }\n\n    &__item {\n      padding: 0;\n      display: inline-block;\n      margin-right: 7px;\n\n      &:first-of-type a,\n      &:last-of-type a {\n        padding: 0;\n      }\n    }\n\n    &__link {\n      @include lbh-link;\n      padding: 0px 5px;\n      text-decoration: none;\n      display: inline-block;\n\n      &:visited {\n        color: lbh-colour("lbh-link");\n      }\n\n      &--current {\n        font-weight: $lbh-font-weight-bold;\n        pointer-events: none;\n        cursor: default;\n\n        &:link,\n        &:hover,\n        &:focus,\n        &:visited {\n          color: lbh-colour("lbh-text");\n        }\n      }\n    }\n\n    &__summary {\n      margin-bottom: 10px;\n      @include govuk-media-query($from: desktop) {\n        order: 2;\n        margin-bottom: 0px;\n      }\n    }\n  }\n}\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","////\n/// @group helpers\n////\n\n/// Common link mixin\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin lbh-link-common {\n  @include lbh-typography-common;\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Default link style mixin\n///\n/// Provides the default unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// lbh-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .lbh-component__link {\n///     @include lbh-link-common;\n///     @include lbh-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin lbh-link-style-default {\n  &:link {\n    color: $lbh-link-colour;\n  }\n\n  &:visited {\n    color: $lbh-link-visited-colour;\n  }\n\n  &:hover {\n    color: $lbh-link-hover-colour;\n  }\n\n  &:active {\n    color: $lbh-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n@mixin lbh-link {\n  @include lbh-link-common;\n  @include lbh-link-style-default;\n  @include govuk-link-print-friendly;\n}\n",'////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the "underline"\n  text-decoration: none;\n}\n','////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if ($govuk-new-link-styles) {\n    @if ($govuk-link-underline-thickness) {\n      text-decoration-thickness: $govuk-link-underline-thickness;\n    }\n\n    @if ($govuk-link-underline-offset) {\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if ($govuk-new-link-styles and $govuk-link-hover-underline-thickness) {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven\'t\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it\'s\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover {\n    color: rgba($govuk-text-colour, .99);\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you\'re displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour("white");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour("white"), .99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it\'s not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it. This has no effect in Internet Explorer 8 (IE8),\n/// because IE8 does not support `:not`.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^="/"],\n    &[href^="http://"],\n    &[href^="https://"] {\n      &:after {\n        content: " (" attr(href) ")";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~govuk-frontend/govuk/helpers/typography";\n@import "~lbh-frontend/lbh/components/lbh-pagination/pagination";\n\nbutton.lbh-pagination__link {\n  @include lbh-body-m;\n  background: transparent;\n  border: none;\n  color: lbh-colour(lbh-link);\n}\n\n.lbh-pagination--center {\n  align-items: center;\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-pagination":"lbh-pagination-ovBrF",lbhPagination:"lbh-pagination-ovBrF","lbh-pagination__list":"lbh-pagination__list-3MhJL",lbhPaginationList:"lbh-pagination__list-3MhJL","lbh-pagination__item":"lbh-pagination__item-2TZKn",lbhPaginationItem:"lbh-pagination__item-2TZKn","lbh-pagination__link":"lbh-pagination__link-sPY_2",lbhPaginationLink:"lbh-pagination__link-sPY_2","lbh-pagination__link--current":"lbh-pagination__link--current-30T4M",lbhPaginationLinkCurrent:"lbh-pagination__link--current-30T4M","lbh-pagination__summary":"lbh-pagination__summary-1ikjw",lbhPaginationSummary:"lbh-pagination__summary-1ikjw","lbh-pagination--center":"lbh-pagination--center-3pifr",lbhPaginationCenter:"lbh-pagination--center-3pifr"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/radios/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-3FdPn{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-3FdPn{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-3FdPn{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-3FdPn{font-size:14pt;line-height:1.15}}.govuk-label-3VbwQ:not(.govuk-label--m-2bwYV):not(.govuk-label--l-2IZ0U):not(.govuk-label--xl-2bGaj)+.govuk-hint-3FdPn{margin-bottom:10px}.govuk-fieldset__legend-3w223:not(.govuk-fieldset__legend--m-ogv7j):not(.govuk-fieldset__legend--l-3MhKr):not(.govuk-fieldset__legend--xl-ssS9F)+.govuk-hint-3FdPn{margin-bottom:10px}.govuk-fieldset__legend-3w223+.govuk-hint-3FdPn{margin-top:-5px}.lbh-hint-26ACE{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-26ACE{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-error-message-1h65B{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-1h65B{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-1h65B{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-1h65B{font-size:14pt;line-height:1.15}}.lbh-error-message-15P3y,.lbh-form-group-2TUIb .govuk-error-message-1h65B{margin-top:0;margin-bottom:0;color:#be3a34;font-weight:600}.lbh-error-message-15P3y .govuk-input--error-1CtmU,.lbh-form-group-2TUIb .govuk-input--error-1CtmU{border-color:#be3a34}.lbh-error-message-15P3y .govuk-form-group--error-3FLbv,.lbh-form-group-2TUIb.govuk-form-group--error-3FLbv{border-color:#be3a34}.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223+.lbh-error-message-15P3y,.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223+.govuk-error-message-1h65B{margin-top:6px;margin-top:.375rem}.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223+.govuk-hint-3FdPn+.lbh-error-message-15P3y,.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223+.govuk-hint-3FdPn+.govuk-error-message-1h65B{margin-top:12px;margin-top:.75rem}.lbh-error-message-15P3y+.lbh-input-29qPC,.lbh-error-message-15P3y+.lbh-textarea-1XX38{margin-top:6px;margin-top:.375rem}.govuk-visually-hidden-LdZFa{position:absolute !important;width:1px !important;height:1px !important;margin:0 !important;padding:0 !important;overflow:hidden !important;clip:rect(0 0 0 0) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;border:0 !important;white-space:nowrap !important}.govuk-fieldset-1Sr50{min-width:0;margin:0;padding:0;border:0}.govuk-fieldset-1Sr50:after{content:"";display:block;clear:both}@supports not (caret-color: auto){.govuk-fieldset-1Sr50,x:-moz-any-link{display:table-cell}}.govuk-fieldset__legend-3w223{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;box-sizing:border-box;display:table;max-width:100%;margin-bottom:10px;padding:0;white-space:normal}@media print{.govuk-fieldset__legend-3w223{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend-3w223{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-fieldset__legend-3w223{font-size:14pt;line-height:1.15}}@media print{.govuk-fieldset__legend-3w223{color:#000}}.govuk-fieldset__legend--xl-ssS9F{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-fieldset__legend--xl-ssS9F{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--xl-ssS9F{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-fieldset__legend--xl-ssS9F{font-size:32pt;line-height:1.15}}.govuk-fieldset__legend--l-3MhKr{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-fieldset__legend--l-3MhKr{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--l-3MhKr{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-fieldset__legend--l-3MhKr{font-size:24pt;line-height:1.05}}.govuk-fieldset__legend--m-ogv7j{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:15px}@media print{.govuk-fieldset__legend--m-ogv7j{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--m-ogv7j{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-fieldset__legend--m-ogv7j{font-size:18pt;line-height:1.15}}.govuk-fieldset__legend--s-2-KLU{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-fieldset__legend--s-2-KLU{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-fieldset__legend--s-2-KLU{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-fieldset__legend--s-2-KLU{font-size:14pt;line-height:1.15}}.govuk-fieldset__heading-3wK00{margin:0;font-size:inherit;font-weight:inherit}.lbh-fieldset-1STHX{margin-top:1.5em}.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem;margin-bottom:0}@media (min-width: 40.0625em){.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223{font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}}.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223.govuk-fieldset__legend--l-3MhKr,.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223.govuk-fieldset__legend--xl-ssS9F,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223.govuk-fieldset__legend--l-3MhKr,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223.govuk-fieldset__legend--xl-ssS9F{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:32px;font-size:2rem;line-height:38px;line-height:2.375rem}@media (min-width: 40.0625em){.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223.govuk-fieldset__legend--l-3MhKr,.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223.govuk-fieldset__legend--xl-ssS9F,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223.govuk-fieldset__legend--l-3MhKr,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223.govuk-fieldset__legend--xl-ssS9F{font-size:48px;font-size:3rem;line-height:58px;line-height:3.625rem}}.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223.govuk-fieldset__legend--m-ogv7j,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223.govuk-fieldset__legend--m-ogv7j{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223.govuk-fieldset__legend--m-ogv7j,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223.govuk-fieldset__legend--m-ogv7j{font-size:30px;font-size:1.875rem;line-height:36px;line-height:2.25rem}}.lbh-form-group-2TUIb .govuk-fieldset__legend-3w223+.govuk-hint-3FdPn,.lbh-fieldset-1STHX .govuk-fieldset__legend-3w223+.govuk-hint-3FdPn{margin-top:12px;margin-top:.75rem}.govuk-label-3VbwQ{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-3VbwQ{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-3VbwQ{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-3VbwQ{font-size:14pt;line-height:1.15}}@media print{.govuk-label-3VbwQ{color:#000}}.govuk-label--xl-2bGaj{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-2bGaj{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-2bGaj{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-2bGaj{font-size:32pt;line-height:1.15}}.govuk-label--l-2IZ0U{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-2IZ0U{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-2IZ0U{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-2IZ0U{font-size:24pt;line-height:1.05}}.govuk-label--m-2bwYV{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-2bwYV{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-2bwYV{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-2bwYV{font-size:18pt;line-height:1.15}}.govuk-label--s-2v4fq{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2v4fq{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2v4fq{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2v4fq{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-QELEr{margin:0}.lbh-label-12s5L{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-bottom:6px;margin-bottom:.375rem}@media (min-width: 40.0625em){.lbh-label-12s5L{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-label--xl-2bGaj{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-2bGaj{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-2bGaj{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-2bGaj{font-size:32pt;line-height:1.15}}.govuk-label--l-2IZ0U{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-2IZ0U{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-2IZ0U{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-2IZ0U{font-size:24pt;line-height:1.05}}.govuk-label--m-2bwYV{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-2bwYV{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-2bwYV{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-2bwYV{font-size:18pt;line-height:1.15}}.govuk-label--s-2v4fq{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-2v4fq{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-2v4fq{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-2v4fq{font-size:14pt;line-height:1.15}}.govuk-radios__item-Fe05R{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;position:relative;min-height:40px;margin-bottom:10px;padding-left:40px;clear:left}@media print{.govuk-radios__item-Fe05R{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-radios__item-Fe05R{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-radios__item-Fe05R{font-size:14pt;line-height:1.15}}.govuk-radios__item-Fe05R:last-child,.govuk-radios__item-Fe05R:last-of-type{margin-bottom:0}.govuk-radios__input-vGJYn{cursor:pointer;position:absolute;z-index:1;top:-2px;left:-2px;width:44px;height:44px;margin:0;opacity:0}.govuk-radios__label-6aZIF{display:inline-block;margin-bottom:0;padding:8px 15px 5px;cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation}.govuk-radios__label-6aZIF:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:40px;height:40px;border:2px solid currentColor;border-radius:50%;background:transparent}.govuk-radios__label-6aZIF:after{content:"";position:absolute;top:10px;left:10px;width:0;height:0;border:10px solid currentColor;border-radius:50%;opacity:0;background:currentColor}.govuk-radios__hint-22eE5{display:block;padding-right:15px;padding-left:15px}.govuk-radios__input-vGJYn:focus+.govuk-radios__label-6aZIF:before{border-width:4px;box-shadow:0 0 0 4px #ffc845}.govuk-radios__input-vGJYn:checked+.govuk-radios__label-6aZIF:after{opacity:1}.govuk-radios__input-vGJYn:disabled,.govuk-radios__input-vGJYn:disabled+.govuk-radios__label-6aZIF{cursor:default}.govuk-radios__input-vGJYn:disabled+.govuk-radios__label-6aZIF{opacity:.5}@media (min-width: 40.0625em){.govuk-radios--inline-2vjZs:after{content:"";display:block;clear:both}.govuk-radios--inline-2vjZs .govuk-radios__item-Fe05R{margin-right:20px;float:left;clear:none}}.govuk-radios--inline-2vjZs.govuk-radios--conditional-234GK .govuk-radios__item-Fe05R{margin-right:0;float:none}.govuk-radios__divider-3Po0c{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;width:40px;margin-bottom:10px;text-align:center}@media print{.govuk-radios__divider-3Po0c{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-radios__divider-3Po0c{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-radios__divider-3Po0c{font-size:14pt;line-height:1.15}}@media print{.govuk-radios__divider-3Po0c{color:#000}}.govuk-radios__conditional-HVJVD{margin-bottom:15px;margin-left:18px;padding-left:33px;border-left:4px solid #b1b4b6}@media (min-width: 40.0625em){.govuk-radios__conditional-HVJVD{margin-bottom:20px}}.js-enabled .govuk-radios__conditional--hidden-1DO4L{display:none}.govuk-radios__conditional-HVJVD>:last-child{margin-bottom:0}.govuk-radios--small-4O1oZ .govuk-radios__item-Fe05R{min-height:0;margin-bottom:0;padding-left:34px;float:left}.govuk-radios--small-4O1oZ .govuk-radios__item-Fe05R:after{content:"";display:block;clear:both}.govuk-radios--small-4O1oZ .govuk-radios__input-vGJYn{left:-10px}.govuk-radios--small-4O1oZ .govuk-radios__label-6aZIF{margin-top:-2px;padding:13px 15px 13px 1px;float:left}@media (min-width: 40.0625em){.govuk-radios--small-4O1oZ .govuk-radios__label-6aZIF{padding:11px 15px 10px 1px}}.govuk-radios--small-4O1oZ .govuk-radios__label-6aZIF:before{top:8px;width:24px;height:24px}.govuk-radios--small-4O1oZ .govuk-radios__label-6aZIF:after{top:15px;left:7px;border-width:5px}.govuk-radios--small-4O1oZ .govuk-radios__hint-22eE5{padding:0;clear:both;pointer-events:none}.govuk-radios--small-4O1oZ .govuk-radios__conditional-HVJVD{margin-left:10px;padding-left:20px;clear:both}.govuk-radios--small-4O1oZ .govuk-radios__divider-3Po0c{width:24px;margin-bottom:5px}.govuk-radios--small-4O1oZ .govuk-radios__item-Fe05R:hover .govuk-radios__input-vGJYn:not(:disabled)+.govuk-radios__label-6aZIF:before{box-shadow:0 0 0 10px #b1b4b6}.govuk-radios--small-4O1oZ .govuk-radios__item-Fe05R:hover .govuk-radios__input-vGJYn:focus+.govuk-radios__label-6aZIF:before{box-shadow:0 0 0 4px #ffc845,0 0 0 10px #b1b4b6}@media (hover: none), (pointer: coarse){.govuk-radios--small-4O1oZ .govuk-radios__item-Fe05R:hover .govuk-radios__input-vGJYn:not(:disabled)+.govuk-radios__label-6aZIF:before{box-shadow:initial}.govuk-radios--small-4O1oZ .govuk-radios__item-Fe05R:hover .govuk-radios__input-vGJYn:focus+.govuk-radios__label-6aZIF:before{box-shadow:0 0 0 4px #ffc845}}.lbh-radios-4wrNG .govuk-label-3VbwQ{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:6px;margin-bottom:.375rem}@media (min-width: 40.0625em){.lbh-radios-4wrNG .govuk-label-3VbwQ{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-radios-4wrNG .govuk-radios__item-Fe05R,.lbh-radios-4wrNG .govuk-radios__divider-3Po0c{margin-top:0}.lbh-radios-4wrNG .govuk-radios__conditional-HVJVD{border-color:#bfc1c3}.lbh-radios-4wrNG .govuk-hint-3FdPn{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-radios-4wrNG .govuk-hint-3FdPn{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-radios__label-6aZIF{margin-top:0;margin-bottom:0.375rem}.lbh-radios__conditional-w2Sxh{}.govuk-radios__conditional--hidden{display:none}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-error-message/_error-message.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_visually-hidden.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/fieldset/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_clearfix.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-fieldset/_fieldset.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-label/_label.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/radios/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-radios/_radios.scss","webpack://./packages/react/src/components/radios/styles.module.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb,CKXD,2BbcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,Ca5EvC,aAAc,CACd,kBRSK,CQRL,UAAW,CAEX,aP6BY,CC+LR,aMnON,2Bb6BE,sBE8BgC,CWnDjC,CN2NK,8BMnON,2Bb4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CavExC,CN2NK,aMnON,2BbuJM,cGFa,CHGb,gBGFe,CU9IpB,CCND,0EAEE,YAAa,CACb,eAAgB,CAChB,aJqCkB,CIpClB,eFkCwB,CEjCzB,mGAIC,oBJ+BkB,CI9BnB,4GAIC,oBJ0BkB,CIzBnB,4JHQD,cAhBa,CAiBb,kBARc,CGIb,gMHGD,eAhBa,CAiBb,iBARc,CGSb,uFHFD,cAhBa,CAiBb,kBARc,CGcb,6BClBD,4BAA4C,CAE5C,oBAAoC,CACpC,qBAAqC,CAGrC,mBAAmC,CACnC,oBAAoC,CAEpC,0BAA0C,CAC1C,6BAA6C,CAC7C,uCAAuD,CAC/C,+BAA+C,CAEvD,mBAAmC,CAKnC,6BAA6C,CDI5C,sBErCC,WAAY,CACZ,QAAS,CACT,SAAU,CACV,QAAS,CCIX,4BACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,kCDDC,sCAEE,kBAAmB,CACpB,CAGH,8BhBHA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CUpBd,qBAAsB,CACtB,aAAc,CACd,cAAe,CACf,kBXfK,CWgBL,SAAU,CAEV,kBAAmB,CTqMf,aSlNN,8BhBYE,sBE8BgC,Cc5BjC,CToMK,8BSlNN,8BhB2IM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgBhDxC,CToMK,aSlNN,8BhBsIM,cGFa,CHGb,gBGFe,CavHpB,CToMK,aSlNN,8BhB0BE,UkBI6B,CFhB9B,CAID,kChBrBA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CgB1CvC,kBXxBK,CEsND,aShMN,kChBNE,sBE8BgC,CcrBjC,CT6LK,8BShMN,kChByHM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CgBzCxC,CT6LK,aShMN,kChBoHM,cG1Da,CH2Db,gBG1De,CaxDpB,CAED,iChB1BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CgBrCvC,kBX7BK,CEsND,aS3LN,iChBXE,sBE8BgC,CchBjC,CTwLK,8BS3LN,iChBoHM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CgBpCxC,CTwLK,aS3LN,iChB+GM,cG5Ca,CH6Cb,gBG5Ce,CajEpB,CAED,iChB/BA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CgBhCvC,kBXlCK,CEsND,aStLN,iChBhBE,sBE8BgC,CcXjC,CTmLK,8BStLN,iChB+GM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CgB/BxC,CTmLK,aStLN,iChB0GM,cGhBa,CHiBb,gBGhBe,CaxFpB,CAED,iChBpCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aSjLN,iChBrBE,sBE8BgC,CcPjC,CT+KK,8BSjLN,iChB0GM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CgB3BxC,CT+KK,aSjLN,iChBqGM,cGFa,CHGb,gBGFe,CalGpB,CAKD,+BACE,QAAS,CACT,iBAAkB,CAClB,mBAAoB,CG1DtB,oBACE,gBAAiB,CAClB,sGVID,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CQVZ,eAAgB,CZ0NZ,8BY7NN,sGRoBA,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CQIb,CAjBD,8UVEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CJgNR,8BY7NN,8URoBA,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CQLX,CARH,sKVEA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aCeoB,CDdpB,eGU0B,CDf1B,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CJgNR,8BY7NN,sKRoBA,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,mBARc,CQDX,CAZH,0IRoBA,eAhBa,CAiBb,iBARc,CQGX,mBnBRH,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CcxCd,aAAc,CAEd,iBfKI,CEwNA,aanON,mBpB6BE,sBE8BgC,CkBpDjC,Cb4NK,8BanON,mBpB4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CoBxExC,Cb4NK,aanON,mBpBuJM,cGFa,CHGb,gBGFe,CiB/IpB,Cb4NK,aanON,mBpB2CE,UkBI6B,CExC9B,CAID,uBpBGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CoBlEvC,kBfAK,CEsND,aaxNN,uBpBkBE,sBE8BgC,CkB7CjC,CbqNK,8BaxNN,uBpBiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CoBjExC,CbqNK,aaxNN,uBpB4IM,cG1Da,CH2Db,gBG1De,CiBhFpB,CAED,sBpBFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CoB7DvC,kBfLK,CEsND,aanNN,sBpBaE,sBE8BgC,CkBxCjC,CbgNK,8BanNN,sBpB4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CoB5DxC,CbgNK,aanNN,sBpBuIM,cG5Ca,CH6Cb,gBG5Ce,CiBzFpB,CAED,sBpBPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CoBxDvC,kBfXK,CEuND,aa9MN,sBpBQE,sBE8BgC,CkBnCjC,Cb2MK,8Ba9MN,sBpBuIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CoBvDxC,Cb2MK,aa9MN,sBpBkIM,cGhBa,CHiBb,gBGhBe,CiBhHpB,CAED,sBpBZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aazMN,sBpBGE,sBE8BgC,CkB/BjC,CbuMK,8BazMN,sBpBkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CoBnDxC,CbuMK,aazMN,sBpB6HM,cGFa,CHGb,gBGFe,CiB1HpB,CAQD,2BACE,QAAS,CC9BX,iBZCA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CAOd,iBAhBa,CAiBb,qBARc,CJgNR,8Bc5NN,iBVmBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CUVb,CAID,uBrBCA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CqBhEvC,kBhBFK,CEsND,actNN,uBrBgBE,sBE8BgC,CmB3CjC,CdmNK,8BctNN,uBrB+IM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CqB/DxC,CdmNK,actNN,uBrB0IM,cG1Da,CH2Db,gBG1De,CkB9EpB,CAED,sBrBJA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,CqB3DvC,kBhBPK,CEsND,acjNN,sBrBWE,sBE8BgC,CmBtCjC,Cd8MK,8BcjNN,sBrB0IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,CqB1DxC,Cd8MK,acjNN,sBrBqIM,cG5Ca,CH6Cb,gBG5Ce,CkBvFpB,CAED,sBrBTA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CqBtDvC,kBhBbK,CEuND,ac5MN,sBrBME,sBE8BgC,CmBjCjC,CdyMK,8Bc5MN,sBrBqIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CqBrDxC,CdyMK,ac5MN,sBrBgIM,cGhBa,CHiBb,gBGhBe,CkB9GpB,CAED,sBrBdA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,acvMN,sBrBCE,sBE8BgC,CmB7BjC,CdqMK,8BcvMN,sBrBgIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CqBjDxC,CdqMK,acvMN,sBrB2HM,cGFa,CHGb,gBGFe,CkBxHpB,CChBD,0BtBAA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CsB9DvC,aAAc,CACd,iBAAkB,CAElB,eAbsB,CAetB,kBjBVK,CiBWL,iBAhBsB,CAkBtB,UAAW,Cf0MP,aerNN,0BtBeE,sBE8BgC,CoBjCjC,CfyMK,8BerNN,0BtB8IM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CsBrDxC,CfyMK,aerNN,0BtByIM,cGFa,CHGb,gBGFe,CmB5HpB,CAED,4EAEE,eAAgB,CACjB,2BAKC,cAAe,CAKb,iBAAkB,CAElB,SAAU,CACV,QAAuB,CACvB,SAAwB,CAExB,UAzC0B,CA0C1B,WA1C0B,CA2C1B,QAAS,CAET,SAAU,CAcb,2BAGC,oBAAqB,CACrB,eAAgB,CAChB,oBjB3DI,CiB4DJ,cAAe,CAEf,6BAA8B,CAC1B,yBAA0B,CAC/B,kCAIC,UAAW,CACX,qBAAsB,CACtB,iBAAkB,CAClB,KAAM,CACN,MAAO,CAEP,UA9EsB,CA+EtB,WA/EsB,CAiFtB,6BAA2D,CAC3D,iBAAkB,CAClB,sBAAuB,CACxB,iCAOC,UAAW,CAEX,iBAAkB,CAClB,QjBzFK,CiB0FL,SjB1FK,CiB4FL,OAAQ,CACR,QAAS,CAET,8BAA2C,CAC3C,iBAAkB,CAClB,SAAU,CACV,uBAAwB,CACzB,0BAGC,aAAc,CACd,kBjBtGK,CiBuGL,iBjBvGK,CiBwGN,mEAIC,gBAAiB,CACjB,4BZ1F0B,CY2F3B,oEAIC,SAAU,CACX,mGAKC,cAAe,CAChB,+DAGC,UAAW,Cf0FP,8BU3NN,kCACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,sDKyIK,iBjBvIC,CiBwID,UAAW,CACX,UAAW,CACZ,CARL,sFAcM,cAAe,CACf,UAAW,CACZ,6BtBlJL,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CgBgId,UArKsB,CAsKtB,kBjBjKK,CiBkKL,iBAAkB,CfqDd,ae3DN,6BtB3IE,sBE8BgC,CoBoHjC,CfoDK,8Be3DN,6BtBZM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CsBgGxC,CfoDK,ae3DN,6BtBjBM,cGFa,CHGb,gBGFe,CmByBpB,CfoDK,ae3DN,6BtB7HE,UkBI6B,CIgI9B,CAgBD,iCCxGM,kBlBhCM,CiB0IV,gBARqF,CASrF,iBAL6F,CAM7F,6BhBrJiB,CCqLb,8BepCN,iCCjGQ,kBlBtCM,CiBoJb,CAPC,qDACE,YAAa,CAPjB,6CAWI,eAAgB,CACjB,qDAcC,YAAa,CACb,eAAgB,CAChB,iBANqD,CAOrD,UAAW,CLpNf,2DACE,UAAW,CACX,aAAc,CACd,UAAW,CACZ,sDK8NK,UAAwB,CAxB9B,sDAsCI,eAAgB,CAChB,0BAAuC,CACvC,UAAW,CfvBT,8BejBN,sDA2CM,0BAAuC,CAE1C,CA7CH,6DAoDI,OAAqD,CACrD,UA/P0B,CAgQ1B,WAhQ0B,CA0M9B,4DA6DI,QAAS,CACT,QAAS,CACT,gBAAiB,CA/DrB,qDA2EI,SAAU,CACV,UAAW,CACX,mBAAoB,CA7ExB,4DAmFI,gBAD8E,CAE9E,iBAAwE,CACxE,UAAW,CArFf,wDAyFI,UAnS0B,CAoS1B,iBjBjSE,CiBuMN,uIAoGI,6BhBxQe,CgBoKnB,8HA6GI,+ChBjRe,CgBoRhB,wCAhHH,uIA0HM,kBAAmB,CA1HzB,8HA8HM,4BZhTsB,CYiTvB,CE1UL,qCfCA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CaTV,YAAa,CbgBjB,iBAhBa,CAiBb,qBARc,CJgNR,8BiB5NN,qCbmBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CaPX,CALH,2FASI,YAAa,CATjB,mDAaI,oBdwBiB,CcrCrB,oCfCA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BiB5NN,oCbmBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CaMX,CCvBL,2BACE,YAAa,CACb,sBAAuB,CACxB,+BAGoC,CACpC,mCAIG,YAAa",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n','@import "node_modules/govuk-frontend/govuk/components/error-message/error-message";\n\n@include lbh-exports("lbh/component/error-message") {\n  .lbh-error-message,\n  .lbh-form-group .govuk-error-message {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: lbh-colour("lbh-error");\n    font-weight: $lbh-font-weight-medium;\n  }\n\n  .lbh-error-message .govuk-input--error,\n  .lbh-form-group .govuk-input--error {\n    border-color: lbh-colour("lbh-error");\n  }\n\n  .lbh-error-message .govuk-form-group--error,\n  .lbh-form-group.govuk-form-group--error {\n    border-color: lbh-colour("lbh-error");\n  }\n\n  .lbh-form-group .govuk-fieldset__legend + .lbh-error-message,\n  .lbh-form-group .govuk-fieldset__legend + .govuk-error-message {\n    @include lbh-rem(margin-top, 6);\n  }\n\n  .lbh-form-group .govuk-fieldset__legend + .govuk-hint + .lbh-error-message,\n  .lbh-form-group .govuk-fieldset__legend + .govuk-hint + .govuk-error-message {\n    @include lbh-rem(margin-top, 12);\n  }\n\n  .lbh-error-message + .lbh-input,\n  .lbh-error-message + .lbh-textarea {\n    @include lbh-rem(margin-top, 6);\n  }\n\n  // Needed so that it is hidden when this component is imported individually\n  .govuk-visually-hidden {\n    @include govuk-visually-hidden;\n  }\n}\n',"////\n/// @group helpers/accessibility\n////\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// This is slightly less opinionated about borders and padding to make it\n/// easier to style the focussed element.\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  &:active,\n  &:focus {\n    position: static if($important, !important, null);\n\n    width: auto if($important, !important, null);\n    height: auto if($important, !important, null);\n    margin: inherit if($important, !important, null);\n\n    overflow: visible if($important, !important, null);\n    clip: auto if($important, !important, null);\n    -webkit-clip-path: none if($important, !important, null);\n            clip-path: none if($important, !important, null);\n\n    white-space: inherit if($important, !important, null);\n  }\n}\n",'@include govuk-exports("govuk/component/fieldset") {\n  .govuk-fieldset {\n    min-width: 0;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    @include govuk-clearfix;\n  }\n\n  // Fix for Firefox < 53\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=504622\n  @supports not (caret-color: auto) {\n    .govuk-fieldset,\n    x:-moz-any-link { // stylelint-disable-line selector-type-no-unknown\n      display: table-cell;\n    }\n  }\n\n  .govuk-fieldset__legend {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    // Fix legend text wrapping in Edge and IE\n    // 1. IE9-11 & Edge 12-13\n    // 2. IE8-11\n    box-sizing: border-box; // 1\n    display: table;         // 2\n    max-width: 100%;        // 1\n    margin-bottom: govuk-spacing(2);\n    padding: 0;\n\n    white-space: normal;    // 1\n  }\n\n  // Modifiers that make legends look more like their equivalent headings\n\n  .govuk-fieldset__legend--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-fieldset__legend--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the legend contains an H1, we want the H1 to inherit all styles from\n  // the legend. Effectively we want to be able to treat the heading as if it is\n  // not there.\n  .govuk-fieldset__heading {\n    margin: 0;\n    font-size: inherit;\n    font-weight: inherit;\n  }\n}\n','////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &:after {\n    content: "";\n    display: block;\n    clear: both;\n  }\n}\n','////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "node_modules/govuk-frontend/govuk/components/fieldset/fieldset";\n\n@include lbh-exports("lbh/component/fieldset") {\n  .lbh-fieldset {\n    margin-top: 1.5em;\n  }\n\n  .lbh-form-group .govuk-fieldset__legend,\n  .lbh-fieldset .govuk-fieldset__legend {\n    @include lbh-heading-h3;\n    margin-bottom: 0;\n\n    &.govuk-fieldset__legend--l,\n    &.govuk-fieldset__legend--xl {\n      @include lbh-heading-h1;\n    }\n\n    &.govuk-fieldset__legend--m {\n      @include lbh-heading-h2;\n    }\n\n    & + .govuk-hint {\n      @include lbh-rem(margin-top, 12);\n    }\n  }\n}\n',"@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'@import "node_modules/govuk-frontend/govuk/components/label/label";\n\n@mixin lbh-label {\n  @include lbh-body-m;\n  @include lbh-rem(margin-bottom, 6);\n}\n\n@include lbh-exports("lbh/component/label") {\n  .lbh-label {\n    @include lbh-label;\n  }\n\n  // copied these over from govuk frontend because i couldn\'t see any other way to win the specificity battle\n  // solves: https://github.com/LBHackney-IT/lbh-frontend/issues/147\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n}\n',"@import \"../error-message/index\";\n@import \"../fieldset/index\";\n@import \"../hint/index\";\n@import \"../label/index\";\n\n@include govuk-exports(\"govuk/component/radios\") {\n\n  $govuk-touch-target-size: 44px;\n  $govuk-radios-size: 40px;\n  $govuk-small-radios-size: 24px;\n  $govuk-radios-label-padding-left-right: govuk-spacing(3);\n  // When the default focus width is used on a curved edge it looks visually smaller.\n  // So for the circular radios we bump the default to make it look visually consistent.\n  $govuk-radios-focus-width: $govuk-focus-width + 1px;\n\n  .govuk-radios__item {\n    @include govuk-font($size: 19);\n\n    display: block;\n    position: relative;\n\n    min-height: $govuk-radios-size;\n\n    margin-bottom: govuk-spacing(2);\n    padding-left: $govuk-radios-size;\n\n    clear: left;\n  }\n\n  .govuk-radios__item:last-child,\n  .govuk-radios__item:last-of-type {\n    margin-bottom: 0;\n  }\n\n  .govuk-radios__input {\n    $input-offset: ($govuk-touch-target-size - $govuk-radios-size) / 2;\n\n    cursor: pointer;\n\n    // IE8 doesn’t support pseudo-elements, so we don’t want to hide native\n    // elements there.\n    @include govuk-not-ie8 {\n      position: absolute;\n\n      z-index: 1;\n      top: $input-offset * -1;\n      left: $input-offset * -1;\n\n      width: $govuk-touch-target-size;\n      height: $govuk-touch-target-size;\n      margin: 0;\n\n      opacity: 0;\n    }\n\n    @include govuk-if-ie8 {\n      margin-top: 10px;\n      margin-right: $govuk-radios-size / -2;\n      margin-left: $govuk-radios-size / -2;\n      float: left;\n\n      // add focus outline to input\n      &:focus {\n        outline: $govuk-focus-width solid $govuk-focus-colour;\n      }\n    }\n  }\n\n  .govuk-radios__label {\n    display: inline-block;\n    margin-bottom: 0;\n    padding: 8px $govuk-radios-label-padding-left-right govuk-spacing(1);\n    cursor: pointer;\n    // remove 300ms pause on mobile\n    -ms-touch-action: manipulation;\n        touch-action: manipulation;\n  }\n\n  // ( ) Radio ring\n  .govuk-radios__label:before {\n    content: \"\";\n    box-sizing: border-box;\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: $govuk-radios-size;\n    height: $govuk-radios-size;\n\n    border: $govuk-border-width-form-element solid currentColor;\n    border-radius: 50%;\n    background: transparent;\n  }\n\n  //  •  Radio button\n  //\n  // We create the 'button' entirely out of 'border' so that they remain\n  // 'filled' even when colours are overridden in the browser.\n  .govuk-radios__label:after {\n    content: \"\";\n\n    position: absolute;\n    top: govuk-spacing(2);\n    left: govuk-spacing(2);\n\n    width: 0;\n    height: 0;\n\n    border: govuk-spacing(2) solid currentColor;\n    border-radius: 50%;\n    opacity: 0;\n    background: currentColor;\n  }\n\n  .govuk-radios__hint {\n    display: block;\n    padding-right: $govuk-radios-label-padding-left-right;\n    padding-left: $govuk-radios-label-padding-left-right;\n  }\n\n  // Focused state\n  .govuk-radios__input:focus + .govuk-radios__label:before {\n    border-width: 4px;\n    box-shadow: 0 0 0 $govuk-radios-focus-width $govuk-focus-colour;\n  }\n\n  // Selected state\n  .govuk-radios__input:checked + .govuk-radios__label:after {\n    opacity: 1;\n  }\n\n  // Disabled state\n  .govuk-radios__input:disabled,\n  .govuk-radios__input:disabled + .govuk-radios__label {\n    cursor: default;\n  }\n\n  .govuk-radios__input:disabled + .govuk-radios__label {\n    opacity: .5;\n  }\n\n  // =========================================================\n  // Inline radios\n  // =========================================================\n\n  .govuk-radios--inline {\n    @include govuk-media-query ($from: tablet) {\n      @include govuk-clearfix;\n\n      .govuk-radios__item {\n        margin-right: govuk-spacing(4);\n        float: left;\n        clear: none;\n      }\n    }\n\n    // Prevent inline modifier being used with conditional reveals\n    &.govuk-radios--conditional {\n      .govuk-radios__item {\n        margin-right: 0;\n        float: none;\n      }\n    }\n  }\n\n  // =========================================================\n  // Dividers ('or')\n  // =========================================================\n\n  .govuk-radios__divider {\n    $govuk-divider-size: $govuk-radios-size !default;\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n    width: $govuk-divider-size;\n    margin-bottom: govuk-spacing(2);\n    text-align: center;\n  }\n\n  // =========================================================\n  // Conditional reveals\n  // =========================================================\n\n  // The narrow border is used in the conditional reveals because the border has\n  // to be an even number in order to be centred under the 40px checkbox or radio.\n  $conditional-border-width: $govuk-border-width-narrow;\n  // Calculate the amount of padding needed to keep the border centered against the radios.\n  $conditional-border-padding: ($govuk-radios-size / 2) - ($conditional-border-width / 2);\n  // Move the border centered with the radios\n  $conditional-margin-left: $conditional-border-padding;\n  // Move the contents of the conditional inline with the label\n  $conditional-padding-left: $conditional-border-padding + $govuk-radios-label-padding-left-right;\n\n  .govuk-radios__conditional {\n    @include govuk-responsive-margin(4, \"bottom\");\n    margin-left: $conditional-margin-left;\n    padding-left: $conditional-padding-left;\n    border-left: $conditional-border-width solid $govuk-border-colour;\n\n    .js-enabled &--hidden {\n      display: none;\n    }\n\n    & > :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  // =========================================================\n  // Small checkboxes\n  // =========================================================\n\n  .govuk-radios--small {\n\n    $input-offset: ($govuk-touch-target-size - $govuk-small-radios-size) / 2;\n    $label-offset: $govuk-touch-target-size - $input-offset;\n\n    .govuk-radios__item {\n      @include govuk-clearfix;\n      min-height: 0;\n      margin-bottom: 0;\n      padding-left: $label-offset;\n      float: left;\n    }\n\n    // Shift the touch target into the left margin so that the visible edge of\n    // the control is aligned\n    //\n    //   ┆Which colour is your favourite?\n    //  ┌┆───┐\n    //  │┆() │ Purple\n    //  └┆▲──┘\n    //  ▲┆└─ Radio pseudo element, aligned with margin\n    //  └─── Touch target (invisible input), shifted into the margin\n    .govuk-radios__input {\n      @include govuk-not-ie8 {\n        left: $input-offset * -1;\n      }\n\n      @include govuk-if-ie8 {\n        margin-left: $govuk-small-radios-size * -1;\n      }\n    }\n\n    // Adjust the size and position of the label.\n    //\n    // Unlike larger radios, we also have to float the label in order to\n    // 'shrink' it, preventing the hover state from kicking in across the full\n    // width of the parent element.\n    .govuk-radios__label {\n      margin-top: -2px;\n      padding: 13px govuk-spacing(3) 13px 1px;\n      float: left;\n\n      @include govuk-media-query($from: tablet) {\n        padding: 11px govuk-spacing(3) 10px 1px;\n      }\n    }\n\n    // ( ) Radio ring\n    //\n    // Reduce the size of the control [1], vertically centering it within the\n    // touch target [2]\n    .govuk-radios__label:before {\n      top: $input-offset - $govuk-border-width-form-element; // 2\n      width: $govuk-small-radios-size; // 1\n      height: $govuk-small-radios-size; // 1\n    }\n\n    //  •  Radio button\n    //\n    // Reduce the size of the 'button' and center it within the ring\n    .govuk-radios__label:after {\n      top: 15px;\n      left: 7px;\n      border-width: 5px;\n    }\n\n    // Fix position of hint with small radios\n    //\n    // Do not use hints with small radios – because they're within the input\n    // wrapper they trigger the hover state, but clicking them doesn't actually\n    // activate the control.\n    //\n    // (If you do use them, they won't look completely broken... but seriously,\n    // don't use them)\n    .govuk-radios__hint {\n      padding: 0;\n      clear: both;\n      pointer-events: none;\n    }\n\n    // Align conditional reveals with small radios\n    .govuk-radios__conditional {\n      $margin-left: ($govuk-small-radios-size / 2) - ($conditional-border-width / 2);\n      margin-left: $margin-left;\n      padding-left: $label-offset - ($margin-left + $conditional-border-width);\n      clear: both;\n    }\n\n    .govuk-radios__divider {\n      width: $govuk-small-radios-size;\n      margin-bottom: govuk-spacing(1);\n    }\n\n    // Hover state for small radios.\n    //\n    // We use a hover state for small radios because the touch target size\n    // is so much larger than their visible size, and so we need to provide\n    // feedback to the user as to which radio they will select when their\n    // cursor is outside of the visible area.\n    .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\n      box-shadow: 0 0 0 $govuk-hover-width $govuk-hover-colour;\n    }\n\n    // Because we've overridden the border-shadow provided by the focus state,\n    // we need to redefine that too.\n    //\n    // We use two box shadows, one that restores the original focus state [1]\n    // and another that then applies the hover state [2].\n    .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\n      box-shadow:\n        0 0 0 $govuk-radios-focus-width $govuk-focus-colour, // 1\n        0 0 0 $govuk-hover-width        $govuk-hover-colour; // 2\n    }\n\n    // For devices that explicitly don't support hover, don't provide a hover\n    // state (e.g. on touch devices like iOS).\n    //\n    // We can't use `@media (hover: hover)` because we wouldn't get the hover\n    // state in browsers that don't support `@media (hover)` (like Internet\n    // Explorer) – so we have to 'undo' the hover state instead.\n    @media (hover: none), (pointer: coarse) {\n      .govuk-radios__item:hover .govuk-radios__input:not(:disabled) + .govuk-radios__label:before {\n        box-shadow: initial;\n      }\n\n      .govuk-radios__item:hover .govuk-radios__input:focus + .govuk-radios__label:before {\n        box-shadow: 0 0 0 $govuk-radios-focus-width $govuk-focus-colour;\n      }\n    }\n  }\n}\n",'////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n','@import "../lbh-hint/hint";\n@import "../lbh-error-message/error-message";\n@import "../lbh-fieldset/fieldset";\n@import "../lbh-label/label";\n\n@import "node_modules/govuk-frontend/govuk/components/radios/radios";\n\n@include lbh-exports("lbh/component/radios") {\n  .lbh-radios {\n    .govuk-label {\n      @include lbh-body-m;\n      margin-top: 0;\n      @include lbh-rem(margin-bottom, 6);\n    }\n\n    .govuk-radios__item,\n    .govuk-radios__divider {\n      margin-top: 0;\n    }\n\n    .govuk-radios__conditional {\n      border-color: lbh-colour("lbh-border");\n    }\n\n    .govuk-hint {\n      @include lbh-hint;\n    }\n  }\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-radios/radios";\n\n.govuk-radios__label {\n  margin-top: 0;\n  margin-bottom: 0.375rem;\n}\n\n.lbh-radios__conditional {\n  composes: govuk-radios__conditional;\n}\n\n:global {\n  .govuk-radios__conditional--hidden {\n    display: none;\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-3FdPn",govukHint:"govuk-hint-3FdPn","govuk-label":"govuk-label-3VbwQ",govukLabel:"govuk-label-3VbwQ","govuk-label--m":"govuk-label--m-2bwYV",govukLabelM:"govuk-label--m-2bwYV","govuk-label--l":"govuk-label--l-2IZ0U",govukLabelL:"govuk-label--l-2IZ0U","govuk-label--xl":"govuk-label--xl-2bGaj",govukLabelXl:"govuk-label--xl-2bGaj","govuk-fieldset__legend":"govuk-fieldset__legend-3w223",govukFieldsetLegend:"govuk-fieldset__legend-3w223","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-ogv7j",govukFieldsetLegendM:"govuk-fieldset__legend--m-ogv7j","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-3MhKr",govukFieldsetLegendL:"govuk-fieldset__legend--l-3MhKr","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-ssS9F",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-ssS9F","lbh-hint":"lbh-hint-26ACE",lbhHint:"lbh-hint-26ACE","govuk-error-message":"govuk-error-message-1h65B",govukErrorMessage:"govuk-error-message-1h65B","lbh-error-message":"lbh-error-message-15P3y",lbhErrorMessage:"lbh-error-message-15P3y","lbh-form-group":"lbh-form-group-2TUIb",lbhFormGroup:"lbh-form-group-2TUIb","govuk-input--error":"govuk-input--error-1CtmU",govukInputError:"govuk-input--error-1CtmU","govuk-form-group--error":"govuk-form-group--error-3FLbv",govukFormGroupError:"govuk-form-group--error-3FLbv","lbh-input":"lbh-input-29qPC",lbhInput:"lbh-input-29qPC","lbh-textarea":"lbh-textarea-1XX38",lbhTextarea:"lbh-textarea-1XX38","govuk-visually-hidden":"govuk-visually-hidden-LdZFa",govukVisuallyHidden:"govuk-visually-hidden-LdZFa","govuk-fieldset":"govuk-fieldset-1Sr50",govukFieldset:"govuk-fieldset-1Sr50","govuk-fieldset__legend--s":"govuk-fieldset__legend--s-2-KLU",govukFieldsetLegendS:"govuk-fieldset__legend--s-2-KLU","govuk-fieldset__heading":"govuk-fieldset__heading-3wK00",govukFieldsetHeading:"govuk-fieldset__heading-3wK00","lbh-fieldset":"lbh-fieldset-1STHX",lbhFieldset:"lbh-fieldset-1STHX","govuk-label--s":"govuk-label--s-2v4fq",govukLabelS:"govuk-label--s-2v4fq","govuk-label-wrapper":"govuk-label-wrapper-QELEr",govukLabelWrapper:"govuk-label-wrapper-QELEr","lbh-label":"lbh-label-12s5L",lbhLabel:"lbh-label-12s5L","govuk-radios__item":"govuk-radios__item-Fe05R",govukRadiosItem:"govuk-radios__item-Fe05R","govuk-radios__input":"govuk-radios__input-vGJYn",govukRadiosInput:"govuk-radios__input-vGJYn","govuk-radios__label":"govuk-radios__label-6aZIF",govukRadiosLabel:"govuk-radios__label-6aZIF","govuk-radios__hint":"govuk-radios__hint-22eE5",govukRadiosHint:"govuk-radios__hint-22eE5","govuk-radios--inline":"govuk-radios--inline-2vjZs",govukRadiosInline:"govuk-radios--inline-2vjZs","govuk-radios--conditional":"govuk-radios--conditional-234GK",govukRadiosConditional:"govuk-radios--conditional-234GK","govuk-radios__divider":"govuk-radios__divider-3Po0c",govukRadiosDivider:"govuk-radios__divider-3Po0c","govuk-radios__conditional":"govuk-radios__conditional-HVJVD",govukRadiosConditional:"govuk-radios__conditional-HVJVD","js-enabled":"js-enabled",jsEnabled:"js-enabled","govuk-radios__conditional--hidden":"govuk-radios__conditional--hidden-1DO4L",govukRadiosConditionalHidden:"govuk-radios__conditional--hidden-1DO4L","govuk-radios--small":"govuk-radios--small-4O1oZ",govukRadiosSmall:"govuk-radios--small-4O1oZ","lbh-radios":"lbh-radios-4wrNG",lbhRadios:"lbh-radios-4wrNG","lbh-radios__conditional":"lbh-radios__conditional-w2Sxh govuk-radios__conditional-HVJVD",lbhRadiosConditional:"lbh-radios__conditional-w2Sxh govuk-radios__conditional-HVJVD"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/select/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-22Qe7{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-22Qe7{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-22Qe7{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-22Qe7{font-size:14pt;line-height:1.15}}.govuk-label-EetPR:not(.govuk-label--m-J0dRw):not(.govuk-label--l-2WgtA):not(.govuk-label--xl-11I8_)+.govuk-hint-22Qe7{margin-bottom:10px}.govuk-fieldset__legend-2NTVT:not(.govuk-fieldset__legend--m-tMTdV):not(.govuk-fieldset__legend--l-18VDQ):not(.govuk-fieldset__legend--xl-4RTA7)+.govuk-hint-22Qe7{margin-bottom:10px}.govuk-fieldset__legend-2NTVT+.govuk-hint-22Qe7{margin-top:-5px}.lbh-hint-1nVQl{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-1nVQl{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-error-message-3qfmU{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-3qfmU{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-3qfmU{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-3qfmU{font-size:14pt;line-height:1.15}}.govuk-label-EetPR{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-EetPR{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-EetPR{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-EetPR{font-size:14pt;line-height:1.15}}@media print{.govuk-label-EetPR{color:#000}}.govuk-label--xl-11I8_{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-11I8_{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-11I8_{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-11I8_{font-size:32pt;line-height:1.15}}.govuk-label--l-2WgtA{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-2WgtA{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-2WgtA{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-2WgtA{font-size:24pt;line-height:1.05}}.govuk-label--m-J0dRw{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-J0dRw{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-J0dRw{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-J0dRw{font-size:18pt;line-height:1.15}}.govuk-label--s-3uRFv{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-3uRFv{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-3uRFv{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-3uRFv{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-2IiAk{margin:0}.govuk-select-2qrRS{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;box-sizing:border-box;max-width:100%;height:40px;height:2.5rem;padding:5px;border:2px solid #0b0c0c}@media print{.govuk-select-2qrRS{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-select-2qrRS{font-size:19px;font-size:1.1875rem;line-height:1.25}}@media print{.govuk-select-2qrRS{font-size:14pt;line-height:1.25}}.govuk-select-2qrRS:focus{outline:3px solid #ffc845;outline-offset:0;box-shadow:inset 0 0 0 2px}.govuk-select-2qrRS option:active,.govuk-select-2qrRS option:checked,.govuk-select-2qrRS:focus::-ms-value{color:#fff;background-color:#1d70b8}.govuk-select--error-29ac1{border:2px solid #d4351c}.govuk-select--error-29ac1:focus{border-color:#0b0c0c}.lbh-select-FA81J{margin-top:6px;margin-top:.375rem}.govuk-error-message-3qfmU+.lbh-select-FA81J{margin-top:12px;margin-top:.75rem}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/select/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_measurements.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-select/_select.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb,CKXD,2BbcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,Ca5EvC,aAAc,CACd,kBRSK,CQRL,UAAW,CAEX,aP6BY,CC+LR,aMnON,2Bb6BE,sBE8BgC,CWnDjC,CN2NK,8BMnON,2Bb4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CavExC,CN2NK,aMnON,2BbuJM,cGFa,CHGb,gBGFe,CU9IpB,CCRD,mBdcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CQxCd,aAAc,CAEd,iBTKI,CEwNA,aOnON,mBd6BE,sBE8BgC,CYpDjC,CP4NK,8BOnON,mBd4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcxExC,CP4NK,aOnON,mBduJM,cGFa,CHGb,gBGFe,CW/IpB,CP4NK,aOnON,mBd2CE,UeI6B,CDxC9B,CAID,uBdGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CclEvC,kBTAK,CEsND,aOxNN,uBdkBE,sBE8BgC,CY7CjC,CPqNK,8BOxNN,uBdiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CcjExC,CPqNK,aOxNN,uBd4IM,cG1Da,CH2Db,gBG1De,CWhFpB,CAED,sBdFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,Cc7DvC,kBTLK,CEsND,aOnNN,sBdaE,sBE8BgC,CYxCjC,CPgNK,8BOnNN,sBd4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,Cc5DxC,CPgNK,aOnNN,sBduIM,cG5Ca,CH6Cb,gBG5Ce,CWzFpB,CAED,sBdPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CcxDvC,kBTXK,CEuND,aO9MN,sBdQE,sBE8BgC,CYnCjC,CP2MK,8BO9MN,sBduIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CcvDxC,CP2MK,aO9MN,sBdkIM,cGhBa,CHiBb,gBGhBe,CWhHpB,CAED,sBdZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aOzMN,sBdGE,sBE8BgC,CY/BjC,CPuMK,8BOzMN,sBdkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcnDxC,CPuMK,aOzMN,sBd6HM,cGFa,CHGb,gBGFe,CW1HpB,CAQD,2BACE,QAAS,CEjCX,oBhBUA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBgB/I+C,CAEjD,qBAAsB,CACtB,cAAe,CACf,WAAY,CAEV,aZMyC,CYJ3C,WXFI,CWGJ,wBV8Bc,CCuLV,aS/NN,oBhByBE,sBE8BgC,Cc5BjC,CToMK,8BS/NN,oBhBwJM,cGXa,CHaX,mBI7IqC,CJ+IvC,gBgB3J6C,CA0BlD,CToMK,aS/NN,oBhBmJM,cGFa,CHGb,gBgBnJ6C,CA0BlD,CA3BD,0BAaI,yBNewB,CMbxB,gBAAiB,CAIjB,0BCiD+B,CD1ChC,0GAMD,UVYc,CUXd,wBVEa,CUDd,2BAGC,wBVLY,CUId,iCAII,oBVAY,CYxChB,kBPsBA,cAhBa,CAiBb,kBARc,COZZ,6CPmBF,eAhBa,CAiBb,iBARc",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n',"@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "../error-message/index";\n@import "../hint/index";\n@import "../label/index";\n\n@include govuk-exports("govuk/component/select") {\n  .govuk-select {\n    @include govuk-font($size: 19, $line-height: 1.25);\n\n    box-sizing: border-box; // should this be global?\n    max-width: 100%;\n    height: 40px;\n    @if $govuk-typography-use-rem {\n      height: govuk-px-to-rem(40px);\n    }\n    padding: govuk-spacing(1); // was 5px 4px 4px - size of it should be adjusted to match other form elements\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\n\n    &:focus {\n      outline: $govuk-focus-width solid $govuk-focus-colour;\n      // Ensure outline appears outside of the element\n      outline-offset: 0;\n      // Double the border by adding its width again. Use `box-shadow` to do\n      // this instead of changing `border-width` (which changes element size) and\n      // since `outline` is already used for the yellow focus state.\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\n\n      @include govuk-if-ie8 {\n        // IE8 doesn\'t support `box-shadow` so double the border with\n        // `border-width`.\n        border-width: $govuk-border-width-form-element * 2;\n      }\n    }\n  }\n\n  .govuk-select option:active,\n  .govuk-select option:checked,\n  .govuk-select:focus::-ms-value {\n    color: govuk-colour("white");\n    background-color: govuk-colour("blue");\n  }\n\n  .govuk-select--error {\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\n\n    &:focus {\n      border-color: $govuk-input-border-colour;\n    }\n  }\n}\n',"////\n/// @group settings/measurements\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: 25%,\n  one-third: 33.3333%,\n  one-half: 50%,\n  two-thirds: 66.6666%,\n  three-quarters: 75%,\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form control border width when in error state\n///\n/// @type Number\n/// @access public\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\n///   difference in thickness for inputs in the error state, in order to\n///   maintain a distinct focus state.\n\n$govuk-border-width-form-element-error: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n",'@import "../lbh-hint/hint";\n\n@import "node_modules/govuk-frontend/govuk/components/select/select";\n\n@include lbh-exports("lbh/component/select") {\n  .lbh-select {\n    @include lbh-rem(margin-top, 6);\n\n    .govuk-error-message + & {\n      @include lbh-rem(margin-top, 12);\n    }\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-22Qe7",govukHint:"govuk-hint-22Qe7","govuk-label":"govuk-label-EetPR",govukLabel:"govuk-label-EetPR","govuk-label--m":"govuk-label--m-J0dRw",govukLabelM:"govuk-label--m-J0dRw","govuk-label--l":"govuk-label--l-2WgtA",govukLabelL:"govuk-label--l-2WgtA","govuk-label--xl":"govuk-label--xl-11I8_",govukLabelXl:"govuk-label--xl-11I8_","govuk-fieldset__legend":"govuk-fieldset__legend-2NTVT",govukFieldsetLegend:"govuk-fieldset__legend-2NTVT","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-tMTdV",govukFieldsetLegendM:"govuk-fieldset__legend--m-tMTdV","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-18VDQ",govukFieldsetLegendL:"govuk-fieldset__legend--l-18VDQ","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-4RTA7",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-4RTA7","lbh-hint":"lbh-hint-1nVQl",lbhHint:"lbh-hint-1nVQl","govuk-error-message":"govuk-error-message-3qfmU",govukErrorMessage:"govuk-error-message-3qfmU","govuk-label--s":"govuk-label--s-3uRFv",govukLabelS:"govuk-label--s-3uRFv","govuk-label-wrapper":"govuk-label-wrapper-2IiAk",govukLabelWrapper:"govuk-label-wrapper-2IiAk","govuk-select":"govuk-select-2qrRS",govukSelect:"govuk-select-2qrRS","govuk-select--error":"govuk-select--error-29ac1",govukSelectError:"govuk-select--error-29ac1","lbh-select":"lbh-select-FA81J",lbhSelect:"lbh-select-FA81J"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/simple-pagination/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.lbh-simple-pagination__link-VwXU8{background:transparent;border:none;text-align:left}.lbh-simple-pagination-1vlTy{display:flex;flex-direction:row;border-top:1px solid #dee0e2;position:relative}.lbh-simple-pagination-1vlTy *+*{margin-top:0}.lbh-simple-pagination__link-VwXU8{text-decoration:none;display:inline-block;flex:1;padding:10px 0px 10px 30px;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;font-weight:600;color:#025ea6}@media (min-width: 40.0625em){.lbh-simple-pagination__link-VwXU8{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-simple-pagination__link-VwXU8:hover{color:#0085ca;text-decoration:none}.lbh-simple-pagination__link-VwXU8:hover .lbh-simple-pagination__title-Qwtfq{text-decoration:underline}.lbh-simple-pagination__link-VwXU8:active{color:#2b8cc4}.lbh-simple-pagination__link-VwXU8:focus{outline:none;background:#ffc845;color:#0b0c0c;box-shadow:0 -2px #ffc845,0 4px #0b0c0c}.lbh-simple-pagination__link-VwXU8:focus svg{stroke:#0b0c0c}.lbh-simple-pagination__link-VwXU8 svg{position:absolute;left:5px;top:17px;stroke:#dee0e2}.lbh-simple-pagination__link--next-1vqB4{padding:10px 30px 10px 0px;text-align:right}.lbh-simple-pagination__link--next-1vqB4 svg{position:absolute;left:inherit;right:5px}.lbh-simple-pagination__title-Qwtfq{display:block;font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:13px;font-size:.8125rem;font-weight:400;line-height:19px;line-height:1.1875rem}@media (min-width: 40.0625em){.lbh-simple-pagination__title-Qwtfq{font-size:16px;font-size:1rem;line-height:24px;line-height:1.5rem}}\n',"",{version:3,sources:["webpack://./packages/react/src/components/simple-pagination/styles.module.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-simple-pagination/_simple-pagination.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss"],names:[],mappings:"AAEA,mCACE,sBAAuB,CACvB,WAAY,CACZ,eAAgB,CACjB,6BCJG,YAAa,CACb,kBAAmB,CACnB,4BC6CmB,CD5CnB,iBAAkB,CAJpB,iCAOI,YAAa,CACd,mCAGC,oBAAqB,CACrB,oBAAqB,CACrB,MAAO,CACP,0BAA2B,CEN/B,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aDnFoB,CGnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CJHV,eKmBoB,CLjBpB,aCoBe,CK6Lb,8BNzNJ,mCIgBF,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CJ2CX,CApDA,yCAWG,aCkBmB,CDjBnB,oBAAqB,CAZxB,6EAeK,yBAA0B,CAf/B,0CAoBG,aCWoB,CD/BvB,yCAwBG,YAAa,CACb,kBCHsB,CDItB,aCVa,CDWb,uCCXa,CDhBhB,6CA+BK,cCfW,CDhBhB,uCAoCG,iBAAkB,CAClB,QAAS,CACT,QAAS,CACT,cCDe,CDEhB,yCAGC,0BAA2B,CAC3B,gBAAiB,CAFlB,6CAKG,iBAAkB,CAClB,YAAa,CACb,SAAU,CACX,oCAKH,aAAc,CEzDlB,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CEgBlC,cAhBa,CAiBb,kBARc,CJkDV,eKxCuB,CDH3B,gBAhBa,CAiBb,qBARc,CEgNR,8BNnKJ,oCItCF,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,kBARc,CJyDX",sourcesContent:['@import "~lbh-frontend/lbh/base";\n\n.lbh-simple-pagination__link {\n  background: transparent;\n  border: none;\n  text-align: left;\n}\n\n@import "~lbh-frontend/lbh/components/lbh-simple-pagination/simple-pagination";\n','@include lbh-exports("lbh/component/simple-pagination") {\n  .lbh-simple-pagination {\n    display: flex;\n    flex-direction: row;\n    border-top: 1px solid lbh-colour("lbh-grey-3");\n    position: relative;\n\n    * + * {\n      margin-top: 0;\n    }\n\n    &__link {\n      text-decoration: none;\n      display: inline-block;\n      flex: 1;\n      padding: 10px 0px 10px 30px;\n      @include lbh-body-m;\n      font-weight: $lbh-font-weight-bold;\n\n      color: lbh-colour("lbh-link");\n\n      &:hover {\n        color: lbh-colour("lbh-link-hover");\n        text-decoration: none;\n\n        .lbh-simple-pagination__title {\n          text-decoration: underline;\n        }\n      }\n\n      &:active {\n        color: lbh-colour("lbh-link-active");\n      }\n\n      &:focus {\n        outline: none;\n        background: lbh-colour("lbh-primary-focus");\n        color: lbh-colour("lbh-text");\n        box-shadow: 0 -2px lbh-colour("lbh-primary-focus"),\n          0 4px lbh-colour("lbh-text");\n\n        svg {\n          stroke: lbh-colour("lbh-text");\n        }\n      }\n\n      svg {\n        position: absolute;\n        left: 5px;\n        top: 17px;\n        stroke: lbh-colour("lbh-grey-3");\n      }\n\n      &--next {\n        padding: 10px 30px 10px 0px;\n        text-align: right;\n\n        svg {\n          position: absolute;\n          left: inherit;\n          right: 5px;\n        }\n      }\n    }\n\n    &__title {\n      display: block;\n\n      @include lbh-font;\n      @include lbh-rem(font-size, 13);\n      font-weight: $lbh-font-weight-regular;\n      @include lbh-rem(line-height, 19);\n\n      @include govuk-media-query($from: tablet) {\n        @include lbh-rem(font-size, 16);\n        @include lbh-rem(line-height, 24);\n      }\n    }\n  }\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-simple-pagination__link":"lbh-simple-pagination__link-VwXU8",lbhSimplePaginationLink:"lbh-simple-pagination__link-VwXU8","lbh-simple-pagination":"lbh-simple-pagination-1vlTy",lbhSimplePagination:"lbh-simple-pagination-1vlTy","lbh-simple-pagination__title":"lbh-simple-pagination__title-Qwtfq",lbhSimplePaginationTitle:"lbh-simple-pagination__title-Qwtfq","lbh-simple-pagination__link--next":"lbh-simple-pagination__link--next-1vqB4",lbhSimplePaginationLinkNext:"lbh-simple-pagination__link--next-1vqB4"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/summary-list/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-summary-list-Jxt37{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;margin:0;margin-bottom:20px}@media print{.govuk-summary-list-Jxt37{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-summary-list-Jxt37{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-summary-list-Jxt37{font-size:14pt;line-height:1.15}}@media print{.govuk-summary-list-Jxt37{color:#000}}@media (min-width: 40.0625em){.govuk-summary-list-Jxt37{display:table;width:100%;table-layout:fixed}}@media (min-width: 40.0625em){.govuk-summary-list-Jxt37{margin-bottom:30px}}@media (max-width: 40.0525em){.govuk-summary-list__row-CB_04{margin-bottom:15px;border-bottom:1px solid #b1b4b6}}@media (min-width: 40.0625em){.govuk-summary-list__row-CB_04{display:table-row}}.govuk-summary-list__key-2Ms74,.govuk-summary-list__value-FGjnQ,.govuk-summary-list__actions-3xMAt{margin:0}@media (min-width: 40.0625em){.govuk-summary-list__key-2Ms74,.govuk-summary-list__value-FGjnQ,.govuk-summary-list__actions-3xMAt{display:table-cell;padding-top:10px;padding-right:20px;padding-bottom:10px;border-bottom:1px solid #b1b4b6}}.govuk-summary-list__actions-3xMAt{margin-bottom:15px}@media (min-width: 40.0625em){.govuk-summary-list__actions-3xMAt{width:20%;padding-right:0;text-align:right}}.govuk-summary-list__key-2Ms74,.govuk-summary-list__value-FGjnQ{word-wrap:break-word;overflow-wrap:break-word}.govuk-summary-list__key-2Ms74{margin-bottom:5px;font-weight:700}@media (min-width: 40.0625em){.govuk-summary-list__key-2Ms74{width:30%}}@media (max-width: 40.0525em){.govuk-summary-list__value-FGjnQ{margin-bottom:15px}}@media (min-width: 40.0625em){.govuk-summary-list__value-FGjnQ{width:50%}}@media (min-width: 40.0625em){.govuk-summary-list__value-FGjnQ:last-child{width:70%}}.govuk-summary-list__value-FGjnQ>p{margin-bottom:10px}.govuk-summary-list__value-FGjnQ>:last-child{margin-bottom:0}.govuk-summary-list__actions-list-2-TEu{width:100%;margin:0;padding:0}.govuk-summary-list__actions-list-item-3tNuS{display:inline;margin-right:10px;padding-right:10px}.govuk-summary-list__actions-list-item-3tNuS:not(:last-child){border-right:1px solid #b1b4b6}.govuk-summary-list__actions-list-item-3tNuS:last-child{margin-right:0;padding-right:0;border:0}@media (max-width: 40.0525em){.govuk-summary-list--no-border-2qUf7 .govuk-summary-list__row-CB_04{border:0}}@media (min-width: 40.0625em){.govuk-summary-list--no-border-2qUf7 .govuk-summary-list__key-2Ms74,.govuk-summary-list--no-border-2qUf7 .govuk-summary-list__value-FGjnQ,.govuk-summary-list--no-border-2qUf7 .govuk-summary-list__actions-3xMAt{padding-bottom:11px;border:0}}@media (max-width: 40.0525em){.govuk-summary-list__row--no-border-1L5kN{border:0}}@media (min-width: 40.0625em){.govuk-summary-list__row--no-border-1L5kN .govuk-summary-list__key-2Ms74,.govuk-summary-list__row--no-border-1L5kN .govuk-summary-list__value-FGjnQ,.govuk-summary-list__row--no-border-1L5kN .govuk-summary-list__actions-3xMAt{padding-bottom:11px;border:0}}.lbh-summary-list-3jkpU{margin-bottom:0}.lbh-summary-list-3jkpU .govuk-summary-list__key-2Ms74{font-weight:600}.lbh-summary-list-3jkpU .govuk-link-3ZGby{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.lbh-summary-list-3jkpU .govuk-link-3ZGby:focus{outline:3px solid transparent;color:#0b0c0c;background-color:#ffc845;box-shadow:0 -2px #ffc845,0 4px #0b0c0c;text-decoration:none}.lbh-summary-list-3jkpU .govuk-link-3ZGby:link{color:#025ea6}.lbh-summary-list-3jkpU .govuk-link-3ZGby:visited{color:#8031a7}.lbh-summary-list-3jkpU .govuk-link-3ZGby:hover{color:#0085ca}.lbh-summary-list-3jkpU .govuk-link-3ZGby:active{color:#2b8cc4}.lbh-summary-list-3jkpU .govuk-link-3ZGby:focus{color:#0b0c0c}@media print{.lbh-summary-list-3jkpU .govuk-link-3ZGby[href^="/"]:after,.lbh-summary-list-3jkpU .govuk-link-3ZGby[href^="http://"]:after,.lbh-summary-list-3jkpU .govuk-link-3ZGby[href^="https://"]:after{content:" (" attr(href) ")";font-size:90%;word-wrap:break-word}}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/summary-list/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-summary-list/_summary-list.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_links.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_links.scss"],names:[],mappings:"AACE,0BCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aKIgB,CNpCd,QAAS,CO+EL,kBCxBM,CCoKN,aTnON,0BC6BE,sBE8BgC,CHjDjC,CSyNK,8BTnON,0BC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDrExC,CSyNK,aTnON,0BCuJM,cGFa,CHGb,gBGFe,CJ5IpB,CSyNK,aTnON,0BC2CE,USI6B,CVrC9B,CSyNK,8BTnON,0BAII,aAAc,CACd,UAAW,CACX,kBAAmB,CAItB,CSyNK,8BTnON,0BO8FQ,kBC9BM,CRtDb,CSyNK,8BTvNN,+BAEI,kBQDG,CREH,+BM+Be,CN1BlB,CS+MK,8BTvNN,+BAMI,iBAAkB,CAErB,CAED,mGAGE,QAAS,CS0ML,8BT7MN,mGAMI,kBAAmB,CACnB,gBQjBG,CRkBH,kBQhBG,CRiBH,mBQnBG,CRoBH,+BMce,CNZlB,CAED,mCACE,kBQxBK,CCsND,8BT/LN,mCAGI,SAAU,CACV,eAAgB,CAChB,gBAAiB,CAEpB,CAED,gEAGE,oBAAqB,CACrB,wBAAyB,CAC1B,+BAGC,iBQ1CI,CPqDN,eEuB0B,CM4IpB,8BT/KN,+BAII,SAAU,CAEb,CSyKK,8BTvKN,iCAEI,kBQjDG,CRsDN,CSgKK,8BTvKN,iCAKI,SAAU,CAEb,CSgKK,8BT7JN,4CAEI,SAAU,CAEb,CAED,mCACE,kBQjEK,CRkEN,6CAGC,eAAgB,CACjB,wCAGC,UAAW,CACX,QAAS,CACT,SAAU,CACX,6CAGC,cAAe,CACf,iBQhFK,CRiFL,kBQjFK,CRkFN,8DAKC,8BMrDiB,CNsDlB,wDAGC,cAAe,CACf,eAAgB,CAChB,QAAS,CS0HL,8BTtHN,oEAGM,QAAS,CACV,CSkHC,8BTtHN,kNAYM,mBAAsC,CACtC,QAAS,CACV,CSwGC,8BTnGN,0CAEI,QAAS,CAYZ,CSqFK,8BTnGN,iOAUM,mBAAsC,CACtC,QAAS,CACV,CW1IL,wBACE,eAAgB,CADlB,uDAII,eCmCsB,CDvC1B,0CEMA,uBXL2B,CWM3B,kCAAmC,CACnC,iCAAkC,CCElC,gDCME,6BAA6C,CAE/C,aCMmB,CDLnB,wBCW4B,CDV5B,uCCImB,CDDnB,oBAAqB,CDXpB,+CAoBC,aEIiB,CFHlB,kDAGC,aEEyB,CFD1B,gDAGC,aEHuB,CFIxB,iDAGC,aELwB,CFMzB,gDAKC,aE1BiB,CPyMb,aQ2LF,8LACE,2BAA4B,CAC5B,aAAc,CAKd,oBAAqB,CACtB",sourcesContent:['@include govuk-exports("govuk/component/summary-list") {\n  .govuk-summary-list {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n    @include govuk-media-query($from: tablet) {\n      display: table;\n      width: 100%;\n      table-layout: fixed; // Required to allow us to wrap words that overflow.\n    }\n    margin: 0; // Reset default user agent styles\n    @include govuk-responsive-margin(6, "bottom");\n  }\n\n  .govuk-summary-list__row {\n    @include govuk-media-query($until: tablet) {\n      margin-bottom: govuk-spacing(3);\n      border-bottom: 1px solid $govuk-border-colour;\n    }\n    @include govuk-media-query($from: tablet) {\n      display: table-row;\n    }\n  }\n\n  .govuk-summary-list__key,\n  .govuk-summary-list__value,\n  .govuk-summary-list__actions {\n    margin: 0; // Reset default user agent styles\n\n    @include govuk-media-query($from: tablet) {\n      display: table-cell;\n      padding-top: govuk-spacing(2);\n      padding-right: govuk-spacing(4);\n      padding-bottom: govuk-spacing(2);\n      border-bottom: 1px solid $govuk-border-colour;\n    }\n  }\n\n  .govuk-summary-list__actions {\n    margin-bottom: govuk-spacing(3);\n    @include govuk-media-query($from: tablet) {\n      width: 20%;\n      padding-right: 0;\n      text-align: right;\n    }\n  }\n\n  .govuk-summary-list__key,\n  .govuk-summary-list__value {\n    // Automatic wrapping for unbreakable text (e.g. URLs)\n    word-wrap: break-word; // Fallback for older browsers only\n    overflow-wrap: break-word;\n  }\n\n  .govuk-summary-list__key {\n    margin-bottom: govuk-spacing(1);\n    @include govuk-typography-weight-bold;\n    @include govuk-media-query($from: tablet) {\n      width: 30%;\n    }\n  }\n\n  .govuk-summary-list__value {\n    @include govuk-media-query($until: tablet) {\n      margin-bottom: govuk-spacing(3);\n    }\n    @include govuk-media-query($from: tablet) {\n      width: 50%;\n    }\n  }\n\n  // Expand width when value is last column (no action)\n  .govuk-summary-list__value:last-child {\n    @include govuk-media-query($from: tablet) {\n      width: 70%;\n    }\n  }\n\n  .govuk-summary-list__value > p {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-summary-list__value > :last-child {\n    margin-bottom: 0;\n  }\n\n  .govuk-summary-list__actions-list {\n    width: 100%;\n    margin: 0; // Reset default user agent styles\n    padding: 0; // Reset default user agent styles\n  }\n\n  .govuk-summary-list__actions-list-item {\n    display: inline;\n    margin-right: govuk-spacing(2);\n    padding-right: govuk-spacing(2);\n  }\n\n  // In older browsers such as IE8, :last-child is not available,\n  // so only show the border divider where it is available.\n  .govuk-summary-list__actions-list-item:not(:last-child) {\n    border-right: 1px solid $govuk-border-colour;\n  }\n\n  .govuk-summary-list__actions-list-item:last-child {\n    margin-right: 0;\n    padding-right: 0;\n    border: 0;\n  }\n\n  // No border on entire summary list\n  .govuk-summary-list--no-border {\n    @include govuk-media-query($until: tablet) {\n      .govuk-summary-list__row {\n        border: 0;\n      }\n    }\n\n    @include govuk-media-query($from: tablet) {\n      .govuk-summary-list__key,\n      .govuk-summary-list__value,\n      .govuk-summary-list__actions {\n        // Remove 1px border, add 1px height back on\n        padding-bottom: govuk-spacing(2) + 1px;\n        border: 0;\n      }\n    }\n  }\n\n  // No border on specific rows\n  .govuk-summary-list__row--no-border {\n    @include govuk-media-query($until: tablet) {\n      border: 0;\n    }\n\n    @include govuk-media-query($from: tablet) {\n      .govuk-summary-list__key,\n      .govuk-summary-list__value,\n      .govuk-summary-list__actions {\n        // Remove 1px border, add 1px height back on\n        padding-bottom: govuk-spacing(2) + 1px;\n        border: 0;\n      }\n    }\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n','////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n',"////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "node_modules/govuk-frontend/govuk/components/summary-list/summary-list";\n\n@include lbh-exports("lbh/component/summary-list") {\n  .lbh-summary-list {\n    margin-bottom: 0;\n\n    .govuk-summary-list__key {\n      font-weight: $lbh-font-weight-medium;\n    }\n\n    .govuk-link {\n      @include lbh-link;\n    }\n  }\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n","////\n/// @group helpers\n////\n\n/// Common link mixin\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin lbh-link-common {\n  @include lbh-typography-common;\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Default link style mixin\n///\n/// Provides the default unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// lbh-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .lbh-component__link {\n///     @include lbh-link-common;\n///     @include lbh-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin lbh-link-style-default {\n  &:link {\n    color: $lbh-link-colour;\n  }\n\n  &:visited {\n    color: $lbh-link-visited-colour;\n  }\n\n  &:hover {\n    color: $lbh-link-hover-colour;\n  }\n\n  &:active {\n    color: $lbh-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n@mixin lbh-link {\n  @include lbh-link-common;\n  @include lbh-link-style-default;\n  @include govuk-link-print-friendly;\n}\n",'////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there\'s a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the "underline"\n  text-decoration: none;\n}\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group helpers/links\n////\n\n/// Common link styles\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n  @include govuk-link-decoration;\n\n  &:hover {\n    @include govuk-link-hover-decoration;\n  }\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Link decoration\n///\n/// Provides the text decoration for links, including thickness and underline\n/// offset. Use this mixin only if you cannot use the `govuk-link-common` mixin.\n///\n/// @access public\n@mixin govuk-link-decoration {\n  text-decoration: underline;\n\n  @if ($govuk-new-link-styles) {\n    @if ($govuk-link-underline-thickness) {\n      text-decoration-thickness: $govuk-link-underline-thickness;\n    }\n\n    @if ($govuk-link-underline-offset) {\n      text-underline-offset: $govuk-link-underline-offset;\n    }\n  }\n}\n\n/// Link hover decoration\n///\n/// Provides the text decoration for links in their hover state, for you to use\n/// within a `:hover` pseudo-selector. Use this mixin only if you cannot use the\n/// `govuk-link-common` mixin.\n///\n/// @access public\n\n@mixin govuk-link-hover-decoration {\n  @if ($govuk-new-link-styles and $govuk-link-hover-underline-thickness) {\n    text-decoration-thickness: $govuk-link-hover-underline-thickness;\n    // Disable ink skipping on underlines on hover. Browsers haven\'t\n    // standardised on this part of the spec yet, so set both properties\n    -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none; // Chromium, Firefox\n    -webkit-text-decoration-skip: none;\n            text-decoration-skip: none; // Safari\n  }\n}\n\n/// Default link styles\n///\n/// Makes links use the default unvisited, visited, hover and active colours.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link styles\n///\n/// Makes links use the error colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link styles\n///\n/// Makes links use the success colour. The link will darken if it\'s active or a\n/// user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted link styles\n///\n/// Makes links use the secondary text colour. The link will darken if it\'s\n/// active or a user hovers their cursor over it.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited {\n    color: $govuk-secondary-text-colour;\n  }\n\n  &:hover,\n  &:active {\n    color: $govuk-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text link styles\n///\n/// Makes links use the primary text colour, in all states. Use this mixin for\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  &:link,\n  &:visited {\n    @include govuk-text-colour;\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover {\n    color: rgba($govuk-text-colour, .99);\n  }\n\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Inverse link styles\n///\n/// Makes links white, in all states. Use this mixin if you\'re displaying links\n/// against a dark background.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-inverse;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-inverse {\n  &:link,\n  &:visited {\n    color: govuk-colour("white");\n  }\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:hover,\n  &:active {\n    color: rgba(govuk-colour("white"), .99);\n  }\n\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Default link styles, without a visited state\n///\n/// Makes links use the default unvisited, hover and active colours, with no\n/// distinct visited state.\n///\n/// Use this mixin when it\'s not helpful to distinguish between visited and\n/// non-visited links. For example, when you link to pages with\n/// frequently-changing content, such as the dashboard for an admin interface.\n///\n/// If you use this mixin in a component, you must also include the\n/// `govuk-link-common` mixin to get the correct focus and hover states.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Remove underline from links\n///\n/// Remove underlines from links unless the link is active or a user hovers\n/// their cursor over it. This has no effect in Internet Explorer 8 (IE8),\n/// because IE8 does not support `:not`.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///     @include govuk-link-style-no-underline;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-underline {\n  &:not(:hover):not(:active) {\n    text-decoration: none;\n  }\n}\n\n/// Include link destination when printing the page\n///\n/// If the user prints the page, add the destination URL after the link text, if\n/// the URL starts with `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^="/"],\n    &[href^="http://"],\n    &[href^="https://"] {\n      &:after {\n        content: " (" attr(href) ")";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-summary-list":"govuk-summary-list-Jxt37",govukSummaryList:"govuk-summary-list-Jxt37","govuk-summary-list__row":"govuk-summary-list__row-CB_04",govukSummaryListRow:"govuk-summary-list__row-CB_04","govuk-summary-list__key":"govuk-summary-list__key-2Ms74",govukSummaryListKey:"govuk-summary-list__key-2Ms74","govuk-summary-list__value":"govuk-summary-list__value-FGjnQ",govukSummaryListValue:"govuk-summary-list__value-FGjnQ","govuk-summary-list__actions":"govuk-summary-list__actions-3xMAt",govukSummaryListActions:"govuk-summary-list__actions-3xMAt","govuk-summary-list__actions-list":"govuk-summary-list__actions-list-2-TEu",govukSummaryListActionsList:"govuk-summary-list__actions-list-2-TEu","govuk-summary-list__actions-list-item":"govuk-summary-list__actions-list-item-3tNuS",govukSummaryListActionsListItem:"govuk-summary-list__actions-list-item-3tNuS","govuk-summary-list--no-border":"govuk-summary-list--no-border-2qUf7",govukSummaryListNoBorder:"govuk-summary-list--no-border-2qUf7","govuk-summary-list__row--no-border":"govuk-summary-list__row--no-border-1L5kN",govukSummaryListRowNoBorder:"govuk-summary-list__row--no-border-1L5kN","lbh-summary-list":"lbh-summary-list-3jkpU",lbhSummaryList:"lbh-summary-list-3jkpU","govuk-link":"govuk-link-3ZGby",govukLink:"govuk-link-3ZGby"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/text-area/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.govuk-hint-1wu-L{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;color:#505a5f}@media print{.govuk-hint-1wu-L{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-hint-1wu-L{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-hint-1wu-L{font-size:14pt;line-height:1.15}}.govuk-label-38Lod:not(.govuk-label--m-FiC2M):not(.govuk-label--l-3iaH5):not(.govuk-label--xl-2tuW6)+.govuk-hint-1wu-L{margin-bottom:10px}.govuk-fieldset__legend-FBlK8:not(.govuk-fieldset__legend--m-3M73e):not(.govuk-fieldset__legend--l-3hnQH):not(.govuk-fieldset__legend--xl-3QL3b)+.govuk-hint-1wu-L{margin-bottom:10px}.govuk-fieldset__legend-FBlK8+.govuk-hint-1wu-L{margin-top:-5px}.lbh-hint-3J3Up{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.lbh-hint-3J3Up{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.govuk-error-message-2Kfir{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25;display:block;margin-bottom:15px;clear:both;color:#d4351c}@media print{.govuk-error-message-2Kfir{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-error-message-2Kfir{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-error-message-2Kfir{font-size:14pt;line-height:1.15}}.govuk-label-38Lod{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;color:#0b0c0c;display:block;margin-bottom:5px}@media print{.govuk-label-38Lod{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label-38Lod{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label-38Lod{font-size:14pt;line-height:1.15}}@media print{.govuk-label-38Lod{color:#000}}.govuk-label--xl-2tuW6{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:32px;font-size:2rem;line-height:1.09375;margin-bottom:15px}@media print{.govuk-label--xl-2tuW6{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--xl-2tuW6{font-size:48px;font-size:3rem;line-height:1.04167}}@media print{.govuk-label--xl-2tuW6{font-size:32pt;line-height:1.15}}.govuk-label--l-3iaH5{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:24px;font-size:1.5rem;line-height:1.04167;margin-bottom:15px}@media print{.govuk-label--l-3iaH5{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--l-3iaH5{font-size:36px;font-size:2.25rem;line-height:1.11111}}@media print{.govuk-label--l-3iaH5{font-size:24pt;line-height:1.05}}.govuk-label--m-FiC2M{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:18px;font-size:1.125rem;line-height:1.11111;margin-bottom:10px}@media print{.govuk-label--m-FiC2M{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--m-FiC2M{font-size:24px;font-size:1.5rem;line-height:1.25}}@media print{.govuk-label--m-FiC2M{font-size:18pt;line-height:1.15}}.govuk-label--s-1oXLI{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:700;font-size:16px;font-size:1rem;line-height:1.25}@media print{.govuk-label--s-1oXLI{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-label--s-1oXLI{font-size:19px;font-size:1.1875rem;line-height:1.31579}}@media print{.govuk-label--s-1oXLI{font-size:14pt;line-height:1.15}}.govuk-label-wrapper-fLKha{margin:0}.govuk-textarea-lknbU{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-weight:400;font-size:16px;font-size:1rem;line-height:1.25;box-sizing:border-box;display:block;width:100%;min-height:40px;margin-bottom:20px;padding:5px;resize:vertical;border:2px solid #0b0c0c;border-radius:0;-webkit-appearance:none}@media print{.govuk-textarea-lknbU{font-family:sans-serif}}@media (min-width: 40.0625em){.govuk-textarea-lknbU{font-size:19px;font-size:1.1875rem;line-height:1.25}}@media print{.govuk-textarea-lknbU{font-size:14pt;line-height:1.25}}@media (min-width: 40.0625em){.govuk-textarea-lknbU{margin-bottom:30px}}.govuk-textarea-lknbU:focus{outline:3px solid #ffc845;outline-offset:0;box-shadow:inset 0 0 0 2px}.govuk-textarea--error-2dFaW{border:2px solid #d4351c}.govuk-textarea--error-2dFaW:focus{border-color:#0b0c0c}.lbh-textarea-22EY_{margin-top:0;margin-bottom:0}.govuk-character-count-tUIKH{margin-bottom:20px}@media (min-width: 40.0625em){.govuk-character-count-tUIKH{margin-bottom:30px}}.govuk-character-count-tUIKH .govuk-form-group-PXaaz,.govuk-character-count-tUIKH .govuk-textarea-lknbU{margin-bottom:5px}.govuk-character-count__message-2djSH{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-font-feature-settings:"tnum" 1;font-feature-settings:"tnum" 1;font-weight:400;margin-top:0;margin-bottom:0}@media print{.govuk-character-count__message-2djSH{font-family:sans-serif}}@supports (font-variant-numeric: tabular-nums){.govuk-character-count__message-2djSH{-webkit-font-feature-settings:normal;font-feature-settings:normal;font-variant-numeric:tabular-nums}}.govuk-character-count__message--disabled-Mu5FC{visibility:hidden}.govuk-character-count-tUIKH{margin-bottom:0}.govuk-character-count-tUIKH+.govuk-error-message-2Kfir{color:#be3a34;font-weight:600}.govuk-character-count__message-2djSH{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem;margin-top:0;margin-bottom:0;color:#525a5b}@media (min-width: 40.0625em){.govuk-character-count__message-2djSH{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}label+.govuk-character-count-tUIKH{margin-top:0}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/components/hint/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-font.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_typography-responsive.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/tools/_px-to-rem.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-palette.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-hint/_hint.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/error-message/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/label/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/textarea/_index.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/settings/_measurements.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-textarea/_textarea.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/components/character-count/_index.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/components/lbh-character-count/_character-count.scss","webpack://./packages/react/src/components/text-area/styles.module.scss"],names:[],mappings:"AACE,kBCcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CD5EvC,aAAc,CAEd,kBMQK,CNNL,aOsCkB,CCsLd,aRnON,kBC6BE,sBE8BgC,CHnDjC,CQ2NK,8BRnON,kBC4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CDvExC,CQ2NK,aRnON,kBCuJM,cGFa,CHGb,gBGFe,CJ9IpB,CAYD,uHACE,kBMTK,CNUN,mKAaC,kBMvBK,CNwBN,gDAIC,eM7BI,CGFN,gBCDA,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BC1NN,gBGiBA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CHRb,CKXD,2BbcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,Ca5EvC,aAAc,CACd,kBRSK,CQRL,UAAW,CAEX,aP6BY,CC+LR,aMnON,2Bb6BE,sBE8BgC,CWnDjC,CN2NK,8BMnON,2Bb4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CavExC,CN2NK,aMnON,2BbuJM,cGFa,CHGb,gBGFe,CU9IpB,CCRD,mBdcA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,CAvCzC,aMIgB,CQxCd,aAAc,CAEd,iBTKI,CEwNA,aOnON,mBd6BE,sBE8BgC,CYpDjC,CP4NK,8BOnON,mBd4JM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcxExC,CP4NK,aOnON,mBduJM,cGFa,CHGb,gBGFe,CW/IpB,CP4NK,aOnON,mBd2CE,UeI6B,CDxC9B,CAID,uBdGA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG3De,CH6Db,cIjIuC,CJmIzC,mBArEqC,CclEvC,kBTAK,CEsND,aOxNN,uBdkBE,sBE8BgC,CY7CjC,CPqNK,8BOxNN,uBdiJM,cGnEa,CHqEX,cI7IqC,CJ+IvC,mBAjFmC,CcjExC,CPqNK,aOxNN,uBd4IM,cG1Da,CH2Db,gBG1De,CWhFpB,CAED,sBdFA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cG7Ce,CH+Cb,gBIjIuC,CJmIzC,mBArEqC,Cc7DvC,kBTLK,CEsND,aOnNN,sBdaE,sBE8BgC,CYxCjC,CPgNK,8BOnNN,sBd4IM,cGrDa,CHuDX,iBI7IqC,CJ+IvC,mBAjFmC,Cc5DxC,CPgNK,aOnNN,sBduIM,cG5Ca,CH6Cb,gBG5Ce,CWzFpB,CAED,sBdPA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGjBe,CHmBb,kBIjIuC,CJmIzC,mBArEqC,CcxDvC,kBTXK,CEuND,aO9MN,sBdQE,sBE8BgC,CYnCjC,CP2MK,8BO9MN,sBduIM,cGzBa,CH2BX,gBI7IqC,CJ+IvC,gBAjFmC,CcvDxC,CP2MK,aO9MN,sBdkIM,cGhBa,CHiBb,gBGhBe,CWhHpB,CAED,sBdZA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAgDlC,eEuB0B,CFyDtB,cGHe,CHKb,cIjIuC,CJmIzC,gBArEqC,COoJnC,aOzMN,sBdGE,sBE8BgC,CY/BjC,CPuMK,8BOzMN,sBdkIM,cGXa,CHaX,mBI7IqC,CJ+IvC,mBAjFmC,CcnDxC,CPuMK,aOzMN,sBd6HM,cGFa,CHGb,gBGFe,CW1HpB,CAQD,2BACE,QAAS,CEjCX,sBhBUA,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAsClC,eE2B6B,CF+DzB,cGHe,CHKb,cIjIuC,CJmIzC,gBgB/I+C,CAEjD,qBAAsB,CACtB,aAAc,CACd,UAAW,CACX,eAAgB,CC6EZ,kBZxBM,CWnDV,WXDI,CWGJ,eAAgB,CAEhB,wBV4Bc,CU3Bd,eAAgB,CAEhB,uBAAwB,CTgNpB,aS/NN,sBhByBE,sBE8BgC,CcvBjC,CT+LK,8BS/NN,sBhBwJM,cGXa,CHaX,mBI7IqC,CJ+IvC,gBgB3J6C,CA+BlD,CT+LK,aS/NN,sBhBmJM,cGFa,CHGb,gBgBnJ6C,CA+BlD,CT+LK,8BS/NN,sBC0FQ,kBZ9BM,CW5Bb,CAhCD,4BAkBI,yBNUwB,CMRxB,gBAAiB,CAIjB,0BE4C+B,CFrChC,6BAID,wBVHY,CUEd,mCAII,oBVEY,CaxChB,oBACE,YAAa,CACb,eAAgB,CACjB,6BFgFK,kBZxBM,CEoKN,8Ba9NN,6BHyFQ,kBZ9BM,CepDb,CAPD,wGAKI,iBfCE,CeAH,sCpBGH,uBCb6B,CDc7B,kCAAmC,CACnC,iCAAkC,CAuK9B,sCAAuC,CAC/B,8BAA+B,CAlI3C,eE2B6B,CkBjE3B,YAAa,CACb,eAAgB,CbkNZ,aarNN,sCpBeE,sBE8BgC,CkBzCjC,CpBwKiD,+CoB5KlD,sCpB6KM,oCAAqC,CAC7B,4BAA6B,CACrC,iCAAkC,CoB3KvC,CAED,gDACE,iBAAkB,CCfpB,6BACE,eAAgB,CADlB,wDAII,aXiCgB,CWhChB,eT8BsB,CS7BvB,sCZJH,uBRL2B,CQM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aCnFoB,CCnBpB,cAhBa,CAiBb,cARc,CF+Gd,eGnFyB,CDrBzB,gBAhBa,CAiBb,oBARc,CHhBd,YAAa,CACb,eAAgB,CAChB,aEuB6B,CHuMvB,8BcrNJ,sCVYF,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CUHX,CCbL,mCACE,YAAa",sourcesContent:['@include govuk-exports("govuk/component/hint") {\n  .govuk-hint {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(3);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Reduces margin-bottom of hint when used after the default label (no class)\n  // or govuk-label--s for better vertical alignment.\n\n  // This adjustment will not work when the label is inside the <h1>, however it\n  // is unlikely that the default or govuk-label--s class would be used in this\n  // case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-label:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces margin-bottom of hint when used after the default legend (no class)\n  // or govuk-fieldset__legend--s for better vertical alignment.\n\n  // This adjustment will not work when the legend is outside the <h1>, however\n  // it is unlikely that the default or govuk-fieldset__legend--s class would be\n  // used in this case.\n\n  // This adjustment will not work in browsers that do not support :not().\n  // Users with these browsers will see the default size margin (5px larger).\n\n  .govuk-fieldset__legend:not(.govuk-fieldset__legend--m):not(.govuk-fieldset__legend--l):not(.govuk-fieldset__legend--xl) + .govuk-hint {\n    margin-bottom: govuk-spacing(2);\n  }\n\n  // Reduces visual spacing of legend when there is a hint\n  .govuk-fieldset__legend + .govuk-hint {\n    margin-top: -(govuk-spacing(1));\n  }\n}\n','////\n/// @group helpers/typography\n////\n\n@import "../tools/px-to-rem";\n\n/// \'Common typography\' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a \'font map\' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error "Unknown font size `#{$size}` - expected a point from the typography scale.";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, "font-size");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, "line-height")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == "print" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: "tnum" 1;\n              font-feature-settings: "tnum" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n','@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','@import "compatibility";\n@import "typography-font-families";\n\n////\n/// @group settings/typography\n////\n\n/// Use \'legacy\' fonts\n///\n/// Whether or not to use v1 nta font from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-font: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$govuk-font-family: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta,\n  $govuk-font-family-gds-transport\n) !default;\n\n/// Font families to use when displaying tabular numbers\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-tabular: if(\n  $govuk-use-legacy-font,\n  $govuk-font-family-nta-tabular,\n  false\n) !default;\n\n/// Font families to use for print media\n///\n/// We recommend that you use system fonts when printing. This will avoid issues\n/// with some printer drivers and operating systems.\n///\n/// @type List\n/// @access public\n\n$govuk-font-family-print: sans-serif !default;\n\n/// Include the default @font-face declarations\n///\n/// If you have set $govuk-font-family to something other than\n/// `$govuk-font-family-gds-transport` this option is disabled by default.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-include-default-font-face: (\n  $govuk-font-family == $govuk-font-family-gds-transport\n) !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$govuk-font-weight-bold: 700 !default;\n',"@import \"compatibility\";\n\n////\n/// @group settings/typography\n////\n\n/// Whether or not to define font sizes in rem, improving accessibility by\n/// allowing users to adjust the base font-size. This is enabled by default,\n/// unless any of the compatibility mode settings are enabled.\n///\n/// You should make sure that $govuk-root-font-size is set correctly for your\n/// project.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-typography-use-rem: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  false,\n  true\n) !default;\n\n/// Root font size\n///\n/// This is used to calculate rem sizes for the typography, and should match the\n/// _effective_ font-size of your root (or html) element.\n///\n/// Ideally you should not be setting the font-size on the html or root element\n/// in order to allow it to scale with user-preference, in which case this\n/// should be set to 16px.\n///\n/// If you are integrating Frontend into an existing project that also uses\n/// alphagov/govuk_template and you wish to enable `$govuk-typography-use-rem`\n/// then you should set this to 10px to match the 62.5% (10px) base font size\n/// that govuk_template sets on the <html> element.\n///\n/// @type Number\n/// @access public\n\n$govuk-root-font-size: 16px !default;\n\n/// Responsive typography font map\n///\n/// This is used to generate responsive typography that adapts according to the\n/// breakpoints.\n///\n/// Font size and font weight can be defined for each breakpoint. You can define\n/// different behaviour on tablet and desktop. The 'null' breakpoint is for\n/// mobile.\n///\n/// Line-heights will automatically be converted from pixel measurements into\n/// relative values. For example, with a font-size of 16px and a line-height of\n/// 24px, the line-height will be converted to 1.5 before output.\n///\n/// You can also specify a separate font size and line height for print media.\n///\n/// @type Map\n///\n/// @prop {Number} $point.$breakpoint.font-size - Font size for `$point` at `$breakpoint`\n/// @prop {Number} $point.$breakpoint.line-height - Line height for `$point` at `$breakpoint`\n/// @prop {Number} $point.print.font-size - Font size for `$point` when printing\n/// @prop {Number} $point.print.line-height - Line height for `$point` when printing\n///\n/// @access public\n\n$govuk-typography-scale: (\n  80: (\n    null: (\n      font-size: 53px,\n      line-height: 55px\n    ),\n    tablet: (\n      font-size: 80px,\n      line-height: 80px\n    ),\n    print: (\n      font-size: 53pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 35px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 50px\n    ),\n    print: (\n      font-size: 32pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 24px,\n      line-height: 25px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 40px\n    ),\n    print: (\n      font-size: 24pt,\n      line-height: 1.05\n    )\n  ),\n  27: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 27px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  24: (\n    null: (\n      font-size: 18px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 24px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 18pt,\n      line-height: 1.15\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 25px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.15\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 16px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 14pt,\n      line-height: 1.2\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 15px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 20px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.2\n    )\n  )\n) !default;\n","////\n/// @group tools/unit-conversion\n////\n\n/// Convert pixels to rem\n///\n/// The $govuk-root-font-size (defined in settings/_typography-responsive.scss)\n/// must be configured to match the font-size of your root (html) element\n///\n/// @param {Number} $value - Length in pixels\n/// @return {Number} Length in rems\n/// @access public\n\n@function govuk-px-to-rem($value) {\n  @if (unitless($value)) {\n    $value: $value * 1px;\n  }\n\n  @return $value / $govuk-root-font-size * 1rem;\n}\n","////\n/// @group settings/spacing\n////\n\n/// Single point spacing variables. Access using `govuk-spacing()`\n/// (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-points: (\n  0: 0,\n  1: 5px,\n  2: 10px,\n  3: 15px,\n  4: 20px,\n  5: 25px,\n  6: 30px,\n  7: 40px,\n  8: 50px,\n  9: 60px\n) !default;\n\n/// Responsive spacing maps\n///\n/// These definitions are used to generate responsive spacing that adapts\n/// according to the breakpoints (see 'helpers/spacing'). These maps should be\n/// used wherever possible to standardise responsive spacing.\n///\n/// You can define different behaviour on tablet and desktop. The 'null'\n/// breakpoint is for mobile.\n///\n/// Access responsive spacing with `govuk-responsive-margin` or\n/// `govuk-responsive-padding` mixins (see `helpers/spacing`).\n///\n/// @type Map\n/// @access private\n\n$govuk-spacing-responsive-scale: (\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 5px,\n    tablet: 5px\n  ),\n  2: (\n    null: 10px,\n    tablet: 10px\n  ),\n  3: (\n    null: 15px,\n    tablet: 15px\n  ),\n  4: (\n    null: 15px,\n    tablet: 20px\n  ),\n  5: (\n    null: 15px,\n    tablet: 25px\n  ),\n  6: (\n    null: 20px,\n    tablet: 30px\n  ),\n  7: (\n    null: 25px,\n    tablet: 40px\n  ),\n  8: (\n    null: 30px,\n    tablet: 50px\n  ),\n  9: (\n    null: 40px,\n    tablet: 60px\n  )\n) !default;\n",'@import "compatibility";\n\n// stylelint-disable value-list-max-empty-lines -- allow empty lines in lists\n// in this file to allow grouping\n\n////\n/// @group settings/colours\n////\n\n/// Use \'legacy\' colour palette\n///\n/// Whether or not to use the colour palette from GOV.UK Elements / Frontend\n/// Toolkit, for teams that are migrating to GOV.UK Frontend and may be using\n/// components from both places in a single application.\n///\n/// @type Boolean\n/// @access public\n\n$govuk-use-legacy-palette: if(\n  (\n    $govuk-compatibility-govukfrontendtoolkit or\n    $govuk-compatibility-govuktemplate or\n    $govuk-compatibility-govukelements\n  ),\n  true,\n  false\n) !default;\n\n/// Modern colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-modern: (\n  "red": #d4351c,\n  "yellow": #ffdd00,\n  "green": #00703c,\n  "blue": #1d70b8,\n  "dark-blue": #003078,\n  "light-blue": #5694ca,\n  "purple": #4c2c92,\n\n  "black": #0b0c0c,\n  "dark-grey": #505a5f,\n  "mid-grey": #b1b4b6,\n  "light-grey": #f3f2f1,\n  "white": #ffffff,\n\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "orange": #f47738,\n  "brown": #b58840,\n  "light-green": #85994b,\n  "turquoise": #28a197\n);\n\n/// Legacy colour palette\n///\n/// This exists only because you cannot easily set a !default variable\n/// conditionally (thanks to the way scope works in Sass) so we set\n/// `$govuk-colour-palette` using the `if` function.\n///\n/// @access private\n\n$_govuk-colour-palette-legacy: (\n  "purple": #2e358b,\n  "light-purple": #6f72af,\n  "bright-purple": #912b88,\n  "pink": #d53880,\n  "light-pink": #f499be,\n  "red": #b10e1e,\n  "bright-red": #df3034,\n  "orange": #f47738,\n  "brown": #b58840,\n  "yellow": #ffbf47,\n  "light-green": #85994b,\n  "green": #006435,\n  "turquoise": #28a197,\n  "light-blue": #2b8cc4,\n  "blue": #005ea5,\n\n  "black": #0b0c0c,\n  "grey-1": #6f777b,\n  "grey-2": #bfc1c3,\n  "grey-3": #dee0e2,\n  "grey-4": #f8f8f8,\n  "white": #ffffff\n);\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$govuk-colours: if(\n  $govuk-use-legacy-palette,\n  $_govuk-colour-palette-legacy,\n  $_govuk-colour-palette-modern\n) !default;\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",'@import "node_modules/govuk-frontend/govuk/components/hint/hint";\n\n@mixin lbh-hint {\n  @include lbh-body-m;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: lbh-colour("lbh-secondary-text");\n}\n\n@include lbh-exports("lbh/component/hint") {\n  .lbh-hint {\n    @include lbh-hint;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@include govuk-exports("govuk/component/error-message") {\n  .govuk-error-message {\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n    margin-bottom: govuk-spacing(3);\n    clear: both;\n\n    color: $govuk-error-colour;\n  }\n}\n',"@include govuk-exports(\"govuk/component/label\") {\n  .govuk-label {\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n  }\n\n  // Modifiers that make labels look more like their equivalent headings\n\n  .govuk-label--xl {\n    @include govuk-font($size: 48, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--l {\n    @include govuk-font($size: 36, $weight: bold);\n    margin-bottom: govuk-spacing(3);\n  }\n\n  .govuk-label--m {\n    @include govuk-font($size: 24, $weight: bold);\n    margin-bottom: govuk-spacing(2);\n  }\n\n  .govuk-label--s {\n    @include govuk-font($size: 19, $weight: bold);\n  }\n\n  // When the label is nested inside a heading, override the heading so that it\n  // does not have a margin. Effectively we want to be able to treat the heading\n  // as if it is not there.\n  //\n  // This breaks BEM conventions because it exists as a parent of the 'block',\n  // so we can't really consider an element.\n  .govuk-label-wrapper {\n    margin: 0;\n  }\n}\n",'////\n/// @group settings/colours\n////\n\n@import "../helpers/colour";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour("blue") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour("black") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour("light-grey", $legacy: "grey-3") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour("white") !default;\n\n/// Text colour for print media\n///\n/// Use \'true black\' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example \'muted\' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour("dark-grey", $legacy: "grey-1") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour("yellow") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour("black") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour("red") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour("green") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour("mid-grey", $legacy: "grey-2");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour("black") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour("mid-grey", $legacy: "grey-3");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour("blue") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour("purple", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour("dark-blue", $legacy: "light-blue") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour("black", $legacy: "light-blue") !default;\n','@import "../error-message/index";\n@import "../hint/index";\n@import "../label/index";\n\n@include govuk-exports("govuk/component/textarea") {\n  .govuk-textarea {\n    @include govuk-font($size: 19, $line-height: 1.25);\n\n    box-sizing: border-box; // should this be global?\n    display: block;\n    width: 100%;\n    min-height: 40px;\n    @include govuk-responsive-margin(6, "bottom");\n    padding: govuk-spacing(1);\n\n    resize: vertical;\n\n    border: $govuk-border-width-form-element solid $govuk-input-border-colour;\n    border-radius: 0;\n\n    -webkit-appearance: none;\n\n    &:focus {\n      outline: $govuk-focus-width solid $govuk-focus-colour;\n      // Ensure outline appears outside of the element\n      outline-offset: 0;\n      // Double the border by adding its width again. Use `box-shadow` to do\n      // this instead of changing `border-width` (which changes element size) and\n      // since `outline` is already used for the yellow focus state.\n      box-shadow: inset 0 0 0 $govuk-border-width-form-element;\n\n      @include govuk-if-ie8 {\n        // IE8 doesn\'t support `box-shadow` so double the border with\n        // `border-width`.\n        border-width: $govuk-border-width-form-element * 2;\n      }\n    }\n  }\n\n  .govuk-textarea--error {\n    border: $govuk-border-width-form-element-error solid $govuk-error-colour;\n\n    &:focus {\n      border-color: $govuk-input-border-colour;\n    }\n  }\n}\n','////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a \'spacing map\' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use \'govuk-responsive-margin\' or\n/// \'govuk-responsive-padding\' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. \'margin\')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != "number" {\n    @error "Expected a number (integer), but got a " + "#{$actual-input-type}.";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "\n    + "responsive spacing scale in `_settings/spacing.scss`.";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != "map" {\n    @error "Expected a number (integer), but got a "\n    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The \'null\' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "margin", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a \'spacing map\' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, "left", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: "all", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, "padding", $direction, $important, $adjustment);\n}\n',"////\n/// @group settings/measurements\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: 25%,\n  one-third: 33.3333%,\n  one-half: 50%,\n  two-thirds: 66.6666%,\n  three-quarters: 75%,\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form control border width when in error state\n///\n/// @type Number\n/// @access public\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\n///   difference in thickness for inputs in the error state, in order to\n///   maintain a distinct focus state.\n\n$govuk-border-width-form-element-error: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n",'@import "../lbh-hint/hint";\n\n@import "node_modules/govuk-frontend/govuk/components/textarea/textarea";\n\n@include lbh-exports("lbh/component/textarea") {\n  .lbh-textarea {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n}\n','@import "../error-message/index";\n@import "../hint/index";\n@import "../label/index";\n@import "../textarea/index";\n\n@include govuk-exports("govuk/component/character-count") {\n  .govuk-character-count {\n    @include govuk-responsive-margin(6, "bottom");\n\n    .govuk-form-group,\n    .govuk-textarea {\n      margin-bottom: govuk-spacing(1);\n    }\n  }\n\n  .govuk-character-count__message {\n    @include govuk-font($size: false, $tabular: true);\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .govuk-character-count__message--disabled {\n    visibility: hidden;\n  }\n}\n','@import "../lbh-hint/hint";\n@import "../lbh-textarea/textarea";\n\n@import "node_modules/govuk-frontend/govuk/components/character-count/character-count";\n\n@include lbh-exports("lbh/component/character-count") {\n  // Can\'t currently add a custom class to .govuk-character-count\n  .govuk-character-count {\n    margin-bottom: 0;\n\n    & + .govuk-error-message {\n      color: lbh-colour("lbh-error");\n      font-weight: $lbh-font-weight-medium;\n    }\n\n    &__message {\n      @include lbh-hint;\n    }\n  }\n}\n','@import "~lbh-frontend/lbh/base";\n@import "~lbh-frontend/lbh/components/lbh-textarea/textarea";\n@import "~lbh-frontend/lbh/components/lbh-character-count/character-count";\n\nlabel + .govuk-character-count {\n  margin-top: 0;\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-hint":"govuk-hint-1wu-L",govukHint:"govuk-hint-1wu-L","govuk-label":"govuk-label-38Lod",govukLabel:"govuk-label-38Lod","govuk-label--m":"govuk-label--m-FiC2M",govukLabelM:"govuk-label--m-FiC2M","govuk-label--l":"govuk-label--l-3iaH5",govukLabelL:"govuk-label--l-3iaH5","govuk-label--xl":"govuk-label--xl-2tuW6",govukLabelXl:"govuk-label--xl-2tuW6","govuk-fieldset__legend":"govuk-fieldset__legend-FBlK8",govukFieldsetLegend:"govuk-fieldset__legend-FBlK8","govuk-fieldset__legend--m":"govuk-fieldset__legend--m-3M73e",govukFieldsetLegendM:"govuk-fieldset__legend--m-3M73e","govuk-fieldset__legend--l":"govuk-fieldset__legend--l-3hnQH",govukFieldsetLegendL:"govuk-fieldset__legend--l-3hnQH","govuk-fieldset__legend--xl":"govuk-fieldset__legend--xl-3QL3b",govukFieldsetLegendXl:"govuk-fieldset__legend--xl-3QL3b","lbh-hint":"lbh-hint-3J3Up",lbhHint:"lbh-hint-3J3Up","govuk-error-message":"govuk-error-message-2Kfir",govukErrorMessage:"govuk-error-message-2Kfir","govuk-label--s":"govuk-label--s-1oXLI",govukLabelS:"govuk-label--s-1oXLI","govuk-label-wrapper":"govuk-label-wrapper-fLKha",govukLabelWrapper:"govuk-label-wrapper-fLKha","govuk-textarea":"govuk-textarea-lknbU",govukTextarea:"govuk-textarea-lknbU","govuk-textarea--error":"govuk-textarea--error-2dFaW",govukTextareaError:"govuk-textarea--error-2dFaW","lbh-textarea":"lbh-textarea-22EY_",lbhTextarea:"lbh-textarea-22EY_","govuk-character-count":"govuk-character-count-tUIKH",govukCharacterCount:"govuk-character-count-tUIKH","govuk-form-group":"govuk-form-group-PXaaz",govukFormGroup:"govuk-form-group-PXaaz","govuk-character-count__message":"govuk-character-count__message-2djSH",govukCharacterCountMessage:"govuk-character-count__message-2djSH","govuk-character-count__message--disabled":"govuk-character-count__message--disabled-Mu5FC",govukCharacterCountMessageDisabled:"govuk-character-count__message--disabled-Mu5FC"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/text/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.lbh-heading-h1-2u7wk,h1{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:32px;font-size:2rem;line-height:38px;line-height:2.375rem}@media (min-width: 40.0625em){.lbh-heading-h1-2u7wk,h1{font-size:48px;font-size:3rem;line-height:58px;line-height:3.625rem}}.lbh-heading-h2-2llAJ,h2{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-heading-h2-2llAJ,h2{font-size:30px;font-size:1.875rem;line-height:36px;line-height:2.25rem}}.lbh-heading-h3-1D_8p,h3{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem}@media (min-width: 40.0625em){.lbh-heading-h3-1D_8p,h3{font-size:24px;font-size:1.5rem;line-height:29px;line-height:1.8125rem}}.lbh-heading-h4-3aNKX,h4{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:18px;font-size:1.125rem;line-height:22px;line-height:1.375rem}@media (min-width: 40.0625em){.lbh-heading-h4-3aNKX,h4{font-size:20px;font-size:1.25rem;line-height:24px;line-height:1.5rem}}.lbh-heading-h5-3IONw,h5{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:16px;font-size:1rem;line-height:19px;line-height:1.1875rem}@media (min-width: 40.0625em){.lbh-heading-h5-3IONw,h5{font-size:18px;font-size:1.125rem;line-height:22px;line-height:1.375rem}}.lbh-heading-h6-1fNc-,h6{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:14px;font-size:.875rem;line-height:17px;line-height:1.0625rem}@media (min-width: 40.0625em){.lbh-heading-h6-1fNc-,h6{font-size:16px;font-size:1rem;line-height:19px;line-height:1.1875rem}}.lbh-heading-large-light-12WAU{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block;color:#0b0c0c;font-weight:600;font-size:24px;font-size:1.5rem;font-weight:400;line-height:29px;line-height:1.8125rem}@media (min-width: 40.0625em){.lbh-heading-large-light-12WAU{font-size:36px;font-size:2.25rem;line-height:43px;line-height:2.6875rem}}.lbh-body-l-zVmIC{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:19px;font-size:1.1875rem;font-weight:400;line-height:28px;line-height:1.75rem}@media (min-width: 40.0625em){.lbh-body-l-zVmIC{font-size:24px;font-size:1.5rem;font-weight:400;line-height:33px;line-height:2.0625rem}}.lbh-body-m-3_qnq{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-body-m-3_qnq{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}.lbh-body-s-CD_ky{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:13px;font-size:.8125rem;font-weight:400;line-height:19px;line-height:1.1875rem}@media (min-width: 40.0625em){.lbh-body-s-CD_ky{font-size:16px;font-size:1rem;line-height:24px;line-height:1.5rem}}.lbh-body-xs-WShOK{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:14px;font-size:.875rem;font-weight:400;line-height:24px;line-height:1.5rem}.lbh-caption-umo4P{color:#525a5b}[class*="govuk-caption"]+[class*="lbh-heading"]{margin-top:0px}.lbh-body-lead-2Jn6g{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:19px;font-size:1.1875rem;font-weight:400;line-height:28px;line-height:1.75rem}@media (min-width: 40.0625em){.lbh-body-lead-2Jn6g{font-size:24px;font-size:1.5rem;font-weight:400;line-height:33px;line-height:2.0625rem}}.lbh-body-2he9G{font-family:"Open Sans";-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#0b0c0c;font-size:16px;font-size:1rem;font-weight:400;line-height:26px;line-height:1.625rem}@media (min-width: 40.0625em){.lbh-body-2he9G{font-size:19px;font-size:1.1875rem;line-height:30px;line-height:1.875rem}}strong{font-weight:600}\n',"",{version:3,sources:["webpack://./packages/react/node_modules/lbh-frontend/lbh/core/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/_base.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_colour-palette.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/settings/_typography.scss","webpack://./packages/react/node_modules/lbh-frontend/lbh/helpers/_rem-fallback.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss"],names:[],mappings:"AA4BI,yBCnBF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CCgNR,8BNxMJ,yBKDF,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,oBARc,CLWX,CAED,yBCxBF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CCgNR,8BNnMJ,yBKNF,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,mBARc,CLgBX,CAED,yBC7BF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CCgNR,8BN9LJ,yBKXF,cAhBa,CAiBb,gBARc,CAOd,gBAhBa,CAiBb,qBARc,CLqBX,CAED,yBClCF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,oBARc,CCgNR,8BNzLJ,yBKhBF,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,kBARc,CL0BX,CAED,yBCvCF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,qBARc,CCgNR,8BNpLJ,yBKrBF,cAhBa,CAiBb,kBARc,CAOd,gBAhBa,CAiBb,oBARc,CL+BX,CAED,yBC5CF,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,qBARc,CCgNR,8BN/KJ,yBK1BF,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,qBARc,CLoCX,CAGH,+BClDA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmBlC,aAAc,CACd,aEeoB,CFdpB,eGU0B,CCf1B,cAhBa,CAiBb,gBARc,CJoFd,eGxDyB,CCrBzB,gBAhBa,CAiBb,qBARc,CCgNR,8BNzKN,+BKhCA,cAhBa,CAiBb,iBARc,CAOd,gBAhBa,CAiBb,qBARc,CLyCb,CAGD,kBCvDA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAwGlC,aErEoB,CEnBpB,cAhBa,CAiBb,mBARc,CJiGd,eGrEyB,CCrBzB,gBAhBa,CAiBb,mBARc,CCgNR,8BNpKN,kBKrCA,cAhBa,CAiBb,gBARc,CJsGZ,eG1EuB,CCrBzB,gBAhBa,CAiBb,qBARc,CL8Cb,CAED,kBC3DA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aEnFoB,CEnBpB,cAhBa,CAiBb,cARc,CJ+Gd,eGnFyB,CCrBzB,gBAhBa,CAiBb,oBARc,CCgNR,8BNhKN,kBKzCA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CLkDb,CAED,kBC/DA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAmIlC,aEhGoB,CEnBpB,cAhBa,CAiBb,kBARc,CJ4Hd,eGlH2B,CCH3B,gBAhBa,CAiBb,qBARc,CCgNR,8BN5JN,kBK7CA,cAhBa,CAiBb,cARc,CAOd,gBAhBa,CAiBb,kBARc,CLsDb,CAED,mBCnEA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAgJlC,aE7GoB,CEnBpB,cAhBa,CAiBb,iBARc,CJyId,eG/H2B,CCH3B,gBAhBa,CAiBb,kBARc,CL0Db,mBCoFD,aErI6B,CHsD5B,gDAIC,cAAe,CAChB,qBC/ED,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAwGlC,aErEoB,CEnBpB,cAhBa,CAiBb,mBARc,CJiGd,eGrEyB,CCrBzB,gBAhBa,CAiBb,mBARc,CCgNR,8BNrIN,qBKpEA,cAhBa,CAiBb,gBARc,CJsGZ,eG1EuB,CCrBzB,gBAhBa,CAiBb,qBARc,CL6Eb,CAED,gBC1FA,uBCL2B,CDM3B,kCAAmC,CACnC,iCAAkC,CAsHlC,aEnFoB,CEnBpB,cAhBa,CAiBb,cARc,CJ+Gd,eGnFyB,CCrBzB,gBAhBa,CAiBb,oBARc,CCgNR,8BNjIN,gBKxEA,cAhBa,CAiBb,mBARc,CAOd,gBAhBa,CAiBb,oBARc,CLiFb,CAED,OACE,eI9DwB",sourcesContent:['@include lbh-exports("lbh/core/typography") {\n  // Headings\n\n  @if $lbh-safely-embed {\n    .lbh-heading-h1 {\n      @include lbh-heading-h1;\n    }\n\n    .lbh-heading-h2 {\n      @include lbh-heading-h2;\n    }\n\n    .lbh-heading-h3 {\n      @include lbh-heading-h3;\n    }\n\n    .lbh-heading-h4 {\n      @include lbh-heading-h4;\n    }\n\n    .lbh-heading-h5 {\n      @include lbh-heading-h5;\n    }\n\n    .lbh-heading-h6 {\n      @include lbh-heading-h6;\n    }\n  } @else {\n    .lbh-heading-h1,\n    h1 {\n      @include lbh-heading-h1;\n    }\n\n    .lbh-heading-h2,\n    h2 {\n      @include lbh-heading-h2;\n    }\n\n    .lbh-heading-h3,\n    h3 {\n      @include lbh-heading-h3;\n    }\n\n    .lbh-heading-h4,\n    h4 {\n      @include lbh-heading-h4;\n    }\n\n    .lbh-heading-h5,\n    h5 {\n      @include lbh-heading-h5;\n    }\n\n    .lbh-heading-h6,\n    h6 {\n      @include lbh-heading-h6;\n    }\n  }\n\n  .lbh-heading-large-light {\n    @include lbh-heading-large-light;\n  }\n\n  // Body (paragraphs)\n  .lbh-body-l {\n    @include lbh-body-l;\n  }\n\n  .lbh-body-m {\n    @include lbh-body-m;\n  }\n\n  .lbh-body-s {\n    @include lbh-body-s;\n  }\n\n  .lbh-body-xs {\n    @include lbh-body-xs;\n  }\n\n  // captions\n  .lbh-caption {\n    @include lbh-caption;\n  }\n\n  // properly space captions and headings\n  [class*="govuk-caption"] + [class*="lbh-heading"] {\n    margin-top: 0px;\n  }\n\n  // Usage aliases\n\n  // Using extend to alias means we also inherit any contextual adjustments that\n  // refer to the \'original\' class name\n\n  .lbh-body-lead {\n    @include lbh-body-l;\n  }\n\n  .lbh-body {\n    @include lbh-body-m;\n  }\n\n  strong {\n    font-weight: $lbh-font-weight-medium;\n  }\n}\n',"/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$lbh-font-family] Font family to use\n/// @access public\n\n@mixin lbh-typography-common($font-family: $lbh-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin lbh-font {\n  @include lbh-typography-common;\n}\n\n@mixin lbh-heading {\n  @include lbh-font;\n  display: block;\n  color: $lbh-text-colour;\n  font-weight: $lbh-font-weight-medium;\n}\n\n@mixin lbh-heading-h1 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 32);\n  @include lbh-rem(line-height, 38);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 48);\n    @include lbh-rem(line-height, 58);\n  }\n}\n\n@mixin lbh-heading-h2 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 30);\n    @include lbh-rem(line-height, 36);\n  }\n}\n\n@mixin lbh-heading-h3 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 20);\n  @include lbh-rem(line-height, 24);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    @include lbh-rem(line-height, 29);\n  }\n}\n\n@mixin lbh-heading-h4 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 18);\n  @include lbh-rem(line-height, 22);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 20);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-heading-h5 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 16);\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 18);\n    @include lbh-rem(line-height, 22);\n  }\n}\n\n@mixin lbh-heading-h6 {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 14);\n  @include lbh-rem(line-height, 17);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 19);\n  }\n}\n\n@mixin lbh-heading-large-light {\n  @include lbh-heading;\n  @include lbh-rem(font-size, 24);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 29);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 36);\n    @include lbh-rem(line-height, 43);\n  }\n}\n\n@mixin lbh-body-l {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 19);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 28);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 24);\n    font-weight: $lbh-font-weight-light;\n    @include lbh-rem(line-height, 33);\n  }\n}\n\n@mixin lbh-body-m {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 16);\n  font-weight: $lbh-font-weight-light;\n  @include lbh-rem(line-height, 26);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 19);\n    @include lbh-rem(line-height, 30);\n  }\n}\n\n@mixin lbh-body-s {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 13);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 19);\n\n  @include govuk-media-query($from: tablet) {\n    @include lbh-rem(font-size, 16);\n    @include lbh-rem(line-height, 24);\n  }\n}\n\n@mixin lbh-body-xs {\n  @include lbh-font;\n  color: $lbh-text-colour;\n  @include lbh-rem(font-size, 14);\n  font-weight: $lbh-font-weight-regular;\n  @include lbh-rem(line-height, 24);\n}\n\n@mixin lbh-caption {\n  color: lbh-colour(\"lbh-secondary-text\");\n}\n",'@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\n\n$govuk-font-family: "Open Sans";\n$govuk-include-default-font-face: false;\n$lbh-font-family: "Open Sans";\n\n@import "node_modules/govuk-frontend/govuk/base";\n\n@import "settings/all";\n\n$govuk-asset-path: $lbh-asset-path;\n\n$govuk-focus-colour: lbh-colour("lbh-primary-focus");\n$govuk-focus-text-colour: lbh-colour("lbh-text");\n$govuk-link-colour: lbh-colour("lbh-link");\n\n@import "tools/all";\n@import "helpers/all";\n','////\n/// @group settings/colours\n////\n\n/// Colour palette\n///\n/// @type Map\n///\n/// @prop $colour - Representation for the given $colour, where $colour is the\n///   friendly name for the colour (e.g. "red": #ff0000);\n///\n/// @access public\n\n$lbh-colours: (\n  "lbh-a01": #00664f,\n  "lbh-a02": #00b341,\n  "lbh-a03": #84bd00,\n  "lbh-a04": #a4d65e,\n  "lbh-e01": #672146,\n  "lbh-e02": #aa0061,\n  "lbh-e03": #df1995,\n  "lbh-e04": #eb6fbd,\n  "lbh-f01": #81312f,\n  "lbh-f02": #be3a34,\n  "lbh-f03": #e03c31,\n  "lbh-f04": #ff6a13,\n  "lbh-h04": #f8e08e,\n  "lbh-text": #0b0c0c,\n  "lbh-text-white": #ffffff,\n  "lbh-secondary-text": #525a5b,\n  "lbh-primary-button": #00664f,\n  "lbh-primary-inner-shadow": #003d2f,\n  "lbh-primary-hover": #00513f,\n  "lbh-primary-focus": #ffc845,\n  "lbh-primary-disabled": #7fb2a7,\n  "lbh-primary-disabled-inner-shadow": #328472,\n  "lbh-secondary-button": #ffffff,\n  "lbh-secondary-inner-shadow": #003d2f,\n  "lbh-secondary-disabled": #dee0e2,\n  "lbh-link": #025ea6,\n  "lbh-link-hover": #0085ca,\n  "lbh-link-visited": #8031a7,\n  "lbh-link-active": #2b8cc4,\n  "lbh-panel": #e7eaec,\n  "lbh-error": #be3a34,\n  "lbh-border": #bfc1c3,\n  "lbh-black": #0b0c0c,\n  "lbh-grey-1": #6f777b,\n  "lbh-grey-2": #bfc1c3,\n  "lbh-grey-3": #dee0e2,\n  "lbh-grey-4": #f8f8f8,\n  "lbh-white": #ffffff,\n) !default;\n','////\n/// @group settings/typography\n////\n\n// =========================================================\n// Font families\n// =========================================================\n\n/// Font families to use for all typography on screen media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family: "Open Sans", sans-serif !default;\n\n/// Font families to use for print media\n///\n/// @type List\n/// @access public\n\n$lbh-font-family-print: sans-serif !default;\n\n// =========================================================\n// Font weights\n// =========================================================\n\n/// Font weight for regular typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-regular: 400 !default;\n\n/// Font weight for bold typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-bold: 600 !default;\n\n/// Font weight for medium typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-medium: 600 !default;\n\n/// Font weight for light typography\n///\n/// @type Number\n/// @access public\n$lbh-font-weight-light: 400 !default;\n','@function lbh-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n@mixin lbh-rem($property, $values...) {\n  $max: length($values);\n  $px-values: "";\n  $rem-values: "";\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $px-values: #{$px-values + $value}px;\n\n    @if $i < $max {\n      $px-values: #{$px-values + " "};\n    }\n  }\n\n  @for $i from 1 through $max {\n    $value: lbh-strip-unit(nth($values, $i));\n    $rem-values: #{$rem-values + $value/lbh-strip-unit($govuk-root-font-size)}rem;\n\n    @if $i < $max {\n      $rem-values: #{$rem-values + " "};\n    }\n  }\n  // sass-lint:disable no-duplicate-properties \n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n  // sass-lint:enable no-duplicate-properties\n}\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"lbh-heading-h1":"lbh-heading-h1-2u7wk",lbhHeadingH1:"lbh-heading-h1-2u7wk","lbh-heading-h2":"lbh-heading-h2-2llAJ",lbhHeadingH2:"lbh-heading-h2-2llAJ","lbh-heading-h3":"lbh-heading-h3-1D_8p",lbhHeadingH3:"lbh-heading-h3-1D_8p","lbh-heading-h4":"lbh-heading-h4-3aNKX",lbhHeadingH4:"lbh-heading-h4-3aNKX","lbh-heading-h5":"lbh-heading-h5-3IONw",lbhHeadingH5:"lbh-heading-h5-3IONw","lbh-heading-h6":"lbh-heading-h6-1fNc-",lbhHeadingH6:"lbh-heading-h6-1fNc-","lbh-heading-large-light":"lbh-heading-large-light-12WAU",lbhHeadingLargeLight:"lbh-heading-large-light-12WAU","lbh-body-l":"lbh-body-l-zVmIC",lbhBodyL:"lbh-body-l-zVmIC","lbh-body-m":"lbh-body-m-3_qnq",lbhBodyM:"lbh-body-m-3_qnq","lbh-body-s":"lbh-body-s-CD_ky",lbhBodyS:"lbh-body-s-CD_ky","lbh-body-xs":"lbh-body-xs-WShOK",lbhBodyXs:"lbh-body-xs-WShOK","lbh-caption":"lbh-caption-umo4P",lbhCaption:"lbh-caption-umo4P","lbh-body-lead":"lbh-body-lead-2Jn6g",lbhBodyLead:"lbh-body-lead-2Jn6g","lbh-body":"lbh-body-2he9G",lbhBody:"lbh-body-2he9G"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/components/visually-hidden/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,".visuallyHidden-I-Mtg{position:absolute !important;width:1px !important;height:1px !important;margin:0 !important;padding:0 !important;overflow:hidden !important;clip:rect(0 0 0 0) !important;-webkit-clip-path:inset(50%) !important;clip-path:inset(50%) !important;border:0 !important;white-space:nowrap !important}\n","",{version:3,sources:["webpack://./packages/react/src/components/visually-hidden/styles.module.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/helpers/_visually-hidden.scss"],names:[],mappings:"AAGA,sBCaE,4BAA4C,CAE5C,oBAAoC,CACpC,qBAAqC,CAGrC,mBAAmC,CACnC,oBAAoC,CAEpC,0BAA0C,CAC1C,6BAA6C,CAC7C,uCAAuD,CAC/C,+BAA+C,CAEvD,mBAAmC,CAKnC,6BAA6C",sourcesContent:['@import "~lbh-frontend/lbh/base";\n@import "~govuk-frontend/govuk/helpers/visually-hidden";\n\n.visuallyHidden {\n  @include govuk-visually-hidden;\n}\n',"////\n/// @group helpers/accessibility\n////\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// This is slightly less opinionated about borders and padding to make it\n/// easier to style the focussed element.\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  &:active,\n  &:focus {\n    position: static if($important, !important, null);\n\n    width: auto if($important, !important, null);\n    height: auto if($important, !important, null);\n    margin: inherit if($important, !important, null);\n\n    overflow: visible if($important, !important, null);\n    clip: auto if($important, !important, null);\n    -webkit-clip-path: none if($important, !important, null);\n            clip-path: none if($important, !important, null);\n\n    white-space: inherit if($important, !important, null);\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={visuallyHidden:"visuallyHidden-I-Mtg"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[11].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[11].use[2]!./packages/react/src/utils/width-overrides/styles.module.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,".govuk---width-full-HPDNK{width:100% !important}.govuk---width-three-quarters-3slKl{width:100% !important}@media (min-width: 40.0625em){.govuk---width-three-quarters-3slKl{width:75% !important}}.govuk---width-two-thirds-2iTsl{width:100% !important}@media (min-width: 40.0625em){.govuk---width-two-thirds-2iTsl{width:66.66% !important}}.govuk---width-one-half-1IBYr{width:100% !important}@media (min-width: 40.0625em){.govuk---width-one-half-1IBYr{width:50% !important}}.govuk---width-one-third-1WYSL{width:100% !important}@media (min-width: 40.0625em){.govuk---width-one-third-1WYSL{width:33.33% !important}}.govuk---width-one-quarter-1A2G7{width:100% !important}@media (min-width: 40.0625em){.govuk---width-one-quarter-1A2G7{width:25% !important}}\n","",{version:3,sources:["webpack://./packages/react/node_modules/govuk-frontend/govuk/overrides/_width.scss","webpack://./packages/react/node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss"],names:[],mappings:"AAQE,0BACE,qBAAsB,CACvB,oCAGC,qBAAsB,CCuNlB,8BDxNN,oCAII,oBAAqB,CAExB,CAED,gCACE,qBAAsB,CC+MlB,8BDhNN,gCAII,uBAAwB,CAE3B,CAED,8BACE,qBAAsB,CCuMlB,8BDxMN,8BAII,oBAAqB,CAExB,CAED,+BACE,qBAAsB,CC+LlB,8BDhMN,+BAII,uBAAwB,CAE3B,CAED,iCACE,qBAAsB,CCuLlB,8BDxLN,iCAII,oBAAqB,CAExB",sourcesContent:['@if not mixin-exists("govuk-exports") {\n  @warn "Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.";\n}\n\n@import "../base";\n\n// stylelint-disable declaration-no-important\n@include govuk-exports("govuk/overrides/width") {\n  .govuk-\\!-width-full {\n    width: 100% !important;\n  }\n\n  .govuk-\\!-width-three-quarters {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 75% !important;\n    }\n  }\n\n  .govuk-\\!-width-two-thirds {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 66.66% !important;\n    }\n  }\n\n  .govuk-\\!-width-one-half {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 50% !important;\n    }\n  }\n\n  .govuk-\\!-width-one-third {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 33.33% !important;\n    }\n  }\n\n  .govuk-\\!-width-one-quarter {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 25% !important;\n    }\n  }\n}\n',"// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"govuk-!-width-full":"govuk---width-full-HPDNK","govuk-!WidthFull":"govuk---width-full-HPDNK","govuk-!-width-three-quarters":"govuk---width-three-quarters-3slKl","govuk-!WidthThreeQuarters":"govuk---width-three-quarters-3slKl","govuk-!-width-two-thirds":"govuk---width-two-thirds-2iTsl","govuk-!WidthTwoThirds":"govuk---width-two-thirds-2iTsl","govuk-!-width-one-half":"govuk---width-one-half-1IBYr","govuk-!WidthOneHalf":"govuk---width-one-half-1IBYr","govuk-!-width-one-third":"govuk---width-one-third-1WYSL","govuk-!WidthOneThird":"govuk---width-one-third-1WYSL","govuk-!-width-one-quarter":"govuk---width-one-quarter-1A2G7","govuk-!WidthOneQuarter":"govuk---width-one-quarter-1A2G7"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./packages/react/dist/reset.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline; }\n\n* {\n  margin: 0; }\n\n* + * {\n  margin-top: 1.5em; }\n\n@media (min-width: 40.0625em) {\n  * + [class|="govuk-grid-column"] {\n    margin-top: 0; } }\n',"",{version:3,sources:["webpack://./packages/react/dist/reset.css"],names:[],mappings:"AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,UAAU;EACV,SAAS;EACT,aAAa;EACb,eAAe;EACf,wBAAwB,EAAE;;AAE5B;EACE,SAAS,EAAE;;AAEb;EACE,iBAAiB,EAAE;;AAErB;EACE;IACE,aAAa,EAAE,EAAE",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline; }\n\n* {\n  margin: 0; }\n\n* + * {\n  margin-top: 1.5em; }\n\n@media (min-width: 40.0625em) {\n  * + [class|="govuk-grid-column"] {\n    margin-top: 0; } }\n'],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./packages/react/src/components sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?%21(?:^|\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.tsx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./accordion/accordion.stories.tsx":"./packages/react/src/components/accordion/accordion.stories.tsx","./button/button.stories.tsx":"./packages/react/src/components/button/button.stories.tsx","./center/center.stories.tsx":"./packages/react/src/components/center/center.stories.tsx","./checkboxes/checkboxes.stories.tsx":"./packages/react/src/components/checkboxes/checkboxes.stories.tsx","./date-input/date-input.stories.tsx":"./packages/react/src/components/date-input/date-input.stories.tsx","./dialog/dialog.stories.tsx":"./packages/react/src/components/dialog/dialog.stories.tsx","./error-message/error-message.stories.tsx":"./packages/react/src/components/error-message/error-message.stories.tsx","./error-summary/error-summary.stories.tsx":"./packages/react/src/components/error-summary/error-summary.stories.tsx","./field/date-field.stories.tsx":"./packages/react/src/components/field/date-field.stories.tsx","./field/field.stories.tsx":"./packages/react/src/components/field/field.stories.tsx","./field/inline-field.stories.tsx":"./packages/react/src/components/field/inline-field.stories.tsx","./fieldset/fieldset.stories.tsx":"./packages/react/src/components/fieldset/fieldset.stories.tsx","./form-group/form-group.stories.tsx":"./packages/react/src/components/form-group/form-group.stories.tsx","./heading/heading.stories.tsx":"./packages/react/src/components/heading/heading.stories.tsx","./hint/hint.stories.tsx":"./packages/react/src/components/hint/hint.stories.tsx","./icon/icon.stories.tsx":"./packages/react/src/components/icon/icon.stories.tsx","./input/input.stories.tsx":"./packages/react/src/components/input/input.stories.tsx","./label/label.stories.tsx":"./packages/react/src/components/label/label.stories.tsx","./link-box/link-box.stories.tsx":"./packages/react/src/components/link-box/link-box.stories.tsx","./link/link.stories.tsx":"./packages/react/src/components/link/link.stories.tsx","./list/list.stories.tsx":"./packages/react/src/components/list/list.stories.tsx","./number-input/number-input.stories.tsx":"./packages/react/src/components/number-input/number-input.stories.tsx","./page-announcement/page-announcement.stories.tsx":"./packages/react/src/components/page-announcement/page-announcement.stories.tsx","./pagination/pagination.stories.tsx":"./packages/react/src/components/pagination/pagination.stories.tsx","./radios/radios.stories.tsx":"./packages/react/src/components/radios/radios.stories.tsx","./select/select.stories.tsx":"./packages/react/src/components/select/select.stories.tsx","./simple-pagination/simple-pagination.stories.tsx":"./packages/react/src/components/simple-pagination/simple-pagination.stories.tsx","./summary-list/summary-list.stories.tsx":"./packages/react/src/components/summary-list/summary-list.stories.tsx","./text-area/text-area.stories.tsx":"./packages/react/src/components/text-area/text-area.stories.tsx","./text/text.stories.tsx":"./packages/react/src/components/text/text.stories.tsx","./visually-hidden/visually-hidden.stories.tsx":"./packages/react/src/components/visually-hidden/visually-hidden.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./packages/react/src/components sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?%21(?:^|\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.tsx)$"},"?45b9":()=>{},"?4f7e":()=>{}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[999],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./.storybook/storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-other-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-other-entry.js"),__webpack_exec__("./.storybook/preview.tsx-generated-config-entry.js"),__webpack_exec__("./.storybook/generated-stories-entry.js"))));__webpack_require__.O()}]);